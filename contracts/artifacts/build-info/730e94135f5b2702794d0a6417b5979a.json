{
	"id": "730e94135f5b2702794d0a6417b5979a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OptionBase.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract OptionBase is ERC20, Ownable, ReentrancyGuard {\n\n    address public collateralAddress;\n    address public considerationAddress;\n    uint256 public  expirationDate;\n    uint256 public  strikeNum;\n    uint256 public  strikeDen;\n    bool public isPut;\n    IERC20 public collateral;\n    IERC20 public consideration;\n\n    error ContractNotExpired();\n    error ContractExpired();\n    error InsufficientBalance();\n    error InvalidStrike();\n    error InvalidExpiration();\n    error InvalidAmount();\n\n    modifier expired() {\n        if (block.timestamp < expirationDate) {\n            revert ContractNotExpired();\n        }\n        _;\n    }\n\n    modifier notExpired() {\n        if (block.timestamp >= expirationDate) {\n            revert ContractExpired();\n        }\n        _;\n    }\n\n    modifier validAmount(uint256 amount) {\n        if (amount < 1) revert InvalidAmount();\n        _;\n    }\n\n    modifier sufficientBalance(address contractHolder, uint256 amount) {\n        if (balanceOf(contractHolder) < amount) {\n            revert InsufficientBalance();\n        }\n        _;\n    }\n\n    constructor(\n        string memory name, \n        string memory symbol, \n        address _collateralAddress, \n        address _considerationAddress,\n        uint256 _expirationDate, \n        uint256 _strikeNum,\n        uint256 _strikeDen,\n        bool _isPut\n        ) ERC20(name, symbol) Ownable(msg.sender) ReentrancyGuard() {\n\n        if (_strikeDen == 0) revert InvalidStrike();\n        if (_strikeNum == 0) revert InvalidStrike();\n        if (_expirationDate < block.timestamp) revert InvalidExpiration();\n\n        expirationDate = _expirationDate;\n        strikeNum = _strikeNum;\n        strikeDen = _strikeDen;\n        collateralAddress = _collateralAddress;\n        considerationAddress = _considerationAddress;\n        isPut = _isPut;\n        collateral = IERC20(_collateralAddress);\n        consideration = IERC20(_considerationAddress);\n\n        }\n\n    function getCollateralBalance() public view returns (uint256) {\n        return collateral.balanceOf(address(this));\n    }\n\n    function getConsiderationBalance() public view returns (uint256) {\n        return consideration.balanceOf(address(this));\n    }\n\n    function isExpired() public view returns (bool) {\n        return block.timestamp >= expirationDate;\n    }\n    function isNotExpired() public view returns (bool) {\n        return block.timestamp < expirationDate;\n    }\n\n    function optionType() public view returns (string memory) {\n        if (isPut) {\n            return \"PUT\";\n        } else {\n            return \"CALL\";\n        }\n    }\n\n\n\n}"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 944,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OptionBase.sol": {
				"OptionBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_collateralAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_considerationAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_expirationDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_strikeNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_strikeDen",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isPut",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ContractExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ContractNotExpired",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidExpiration",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidStrike",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateral",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consideration",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "considerationAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "expirationDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCollateralBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getConsiderationBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isExpired",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isNotExpired",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPut",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "optionType",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "strikeDen",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "strikeNum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OptionBase.sol\":228:2839  contract OptionBase is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OptionBase.sol\":1321:2179  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/OptionBase.sol\":1618:1628  msg.sender */\n  caller\n    /* \"contracts/OptionBase.sol\":1596:1600  name */\n  dup9\n    /* \"contracts/OptionBase.sol\":1602:1608  symbol */\n  dup9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":1677:1678  0 */\n  0x00\n    /* \"contracts/OptionBase.sol\":1663:1673  _strikeDen */\n  dup3\n    /* \"contracts/OptionBase.sol\":1663:1678  _strikeDen == 0 */\n  sub\n    /* \"contracts/OptionBase.sol\":1659:1702  if (_strikeDen == 0) revert InvalidStrike() */\n  tag_20\n  jumpi\n    /* \"contracts/OptionBase.sol\":1687:1702  InvalidStrike() */\n  mload(0x40)\n  0x9a5818d800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/OptionBase.sol\":1659:1702  if (_strikeDen == 0) revert InvalidStrike() */\ntag_20:\n    /* \"contracts/OptionBase.sol\":1730:1731  0 */\n  0x00\n    /* \"contracts/OptionBase.sol\":1716:1726  _strikeNum */\n  dup4\n    /* \"contracts/OptionBase.sol\":1716:1731  _strikeNum == 0 */\n  sub\n    /* \"contracts/OptionBase.sol\":1712:1755  if (_strikeNum == 0) revert InvalidStrike() */\n  tag_21\n  jumpi\n    /* \"contracts/OptionBase.sol\":1740:1755  InvalidStrike() */\n  mload(0x40)\n  0x9a5818d800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/OptionBase.sol\":1712:1755  if (_strikeNum == 0) revert InvalidStrike() */\ntag_21:\n    /* \"contracts/OptionBase.sol\":1787:1802  block.timestamp */\n  timestamp\n    /* \"contracts/OptionBase.sol\":1769:1784  _expirationDate */\n  dup5\n    /* \"contracts/OptionBase.sol\":1769:1802  _expirationDate < block.timestamp */\n  lt\n    /* \"contracts/OptionBase.sol\":1765:1830  if (_expirationDate < block.timestamp) revert InvalidExpiration() */\n  iszero\n  tag_22\n  jumpi\n    /* \"contracts/OptionBase.sol\":1811:1830  InvalidExpiration() */\n  mload(0x40)\n  0xfb2a675200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/OptionBase.sol\":1765:1830  if (_expirationDate < block.timestamp) revert InvalidExpiration() */\ntag_22:\n    /* \"contracts/OptionBase.sol\":1858:1873  _expirationDate */\n  dup4\n    /* \"contracts/OptionBase.sol\":1841:1855  expirationDate */\n  0x09\n    /* \"contracts/OptionBase.sol\":1841:1873  expirationDate = _expirationDate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":1895:1905  _strikeNum */\n  dup3\n    /* \"contracts/OptionBase.sol\":1883:1892  strikeNum */\n  0x0a\n    /* \"contracts/OptionBase.sol\":1883:1905  strikeNum = _strikeNum */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":1927:1937  _strikeDen */\n  dup2\n    /* \"contracts/OptionBase.sol\":1915:1924  strikeDen */\n  0x0b\n    /* \"contracts/OptionBase.sol\":1915:1937  strikeDen = _strikeDen */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":1967:1985  _collateralAddress */\n  dup6\n    /* \"contracts/OptionBase.sol\":1947:1964  collateralAddress */\n  0x07\n  0x00\n    /* \"contracts/OptionBase.sol\":1947:1985  collateralAddress = _collateralAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":2018:2039  _considerationAddress */\n  dup5\n    /* \"contracts/OptionBase.sol\":1995:2015  considerationAddress */\n  0x08\n  0x00\n    /* \"contracts/OptionBase.sol\":1995:2039  considerationAddress = _considerationAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":2057:2063  _isPut */\n  dup1\n    /* \"contracts/OptionBase.sol\":2049:2054  isPut */\n  0x0c\n  0x00\n    /* \"contracts/OptionBase.sol\":2049:2063  isPut = _isPut */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":2093:2111  _collateralAddress */\n  dup6\n    /* \"contracts/OptionBase.sol\":2073:2083  collateral */\n  0x0c\n  0x01\n    /* \"contracts/OptionBase.sol\":2073:2112  collateral = IERC20(_collateralAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":2145:2166  _considerationAddress */\n  dup5\n    /* \"contracts/OptionBase.sol\":2122:2135  consideration */\n  0x0d\n  0x00\n    /* \"contracts/OptionBase.sol\":2122:2167  consideration = IERC20(_considerationAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/OptionBase.sol\":1321:2179  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/OptionBase.sol\":228:2839  contract OptionBase is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_25:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_26:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_27:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_28:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_29:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_30:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_31:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_32:\n    /* \"#utility.yul\":957:984   */\n  tag_76\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_30\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_78\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1030:1118   */\ntag_77:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_33:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_80\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_81\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_34:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_84\n  tag_31\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1434:1490   */\ntag_83:\n    /* \"#utility.yul\":1508:1537   */\n  tag_85\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_30\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_35:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_87:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_36:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_91\n    /* \"#utility.yul\":1992:2041   */\n  tag_92\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1976:2042   */\n  tag_33\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_94\n  tag_29\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2117:2229   */\ntag_93:\n    /* \"#utility.yul\":2238:2290   */\n  tag_95\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_35\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_37:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_98\n  tag_28\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2399:2521   */\ntag_97:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_99\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_36\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2803   */\ntag_38:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2754:2796   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2747:2752   */\n  dup3\n    /* \"#utility.yul\":2743:2797   */\n  and\n    /* \"#utility.yul\":2732:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2803   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2809:2905   */\ntag_39:\n    /* \"#utility.yul\":2846:2853   */\n  0x00\n    /* \"#utility.yul\":2875:2899   */\n  tag_102\n    /* \"#utility.yul\":2893:2898   */\n  dup3\n    /* \"#utility.yul\":2875:2899   */\n  tag_38\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2864:2899   */\n  swap1\n  pop\n    /* \"#utility.yul\":2809:2905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2911:3033   */\ntag_40:\n    /* \"#utility.yul\":2984:3008   */\n  tag_104\n    /* \"#utility.yul\":3002:3007   */\n  dup2\n    /* \"#utility.yul\":2984:3008   */\n  tag_39\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2977:2982   */\n  dup2\n    /* \"#utility.yul\":2974:3009   */\n  eq\n    /* \"#utility.yul\":2964:3027   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3023:3024   */\n  0x00\n    /* \"#utility.yul\":3020:3021   */\n  dup1\n    /* \"#utility.yul\":3013:3025   */\n  revert\n    /* \"#utility.yul\":2964:3027   */\ntag_105:\n    /* \"#utility.yul\":2911:3033   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3039:3182   */\ntag_41:\n    /* \"#utility.yul\":3096:3101   */\n  0x00\n    /* \"#utility.yul\":3127:3133   */\n  dup2\n    /* \"#utility.yul\":3121:3134   */\n  mload\n    /* \"#utility.yul\":3112:3134   */\n  swap1\n  pop\n    /* \"#utility.yul\":3143:3176   */\n  tag_107\n    /* \"#utility.yul\":3170:3175   */\n  dup2\n    /* \"#utility.yul\":3143:3176   */\n  tag_40\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3039:3182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:3265   */\ntag_42:\n    /* \"#utility.yul\":3225:3232   */\n  0x00\n    /* \"#utility.yul\":3254:3259   */\n  dup2\n    /* \"#utility.yul\":3243:3259   */\n  swap1\n  pop\n    /* \"#utility.yul\":3188:3265   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3271:3393   */\ntag_43:\n    /* \"#utility.yul\":3344:3368   */\n  tag_110\n    /* \"#utility.yul\":3362:3367   */\n  dup2\n    /* \"#utility.yul\":3344:3368   */\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3337:3342   */\n  dup2\n    /* \"#utility.yul\":3334:3369   */\n  eq\n    /* \"#utility.yul\":3324:3387   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3383:3384   */\n  0x00\n    /* \"#utility.yul\":3380:3381   */\n  dup1\n    /* \"#utility.yul\":3373:3385   */\n  revert\n    /* \"#utility.yul\":3324:3387   */\ntag_111:\n    /* \"#utility.yul\":3271:3393   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3399:3542   */\ntag_44:\n    /* \"#utility.yul\":3456:3461   */\n  0x00\n    /* \"#utility.yul\":3487:3493   */\n  dup2\n    /* \"#utility.yul\":3481:3494   */\n  mload\n    /* \"#utility.yul\":3472:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3503:3536   */\n  tag_113\n    /* \"#utility.yul\":3530:3535   */\n  dup2\n    /* \"#utility.yul\":3503:3536   */\n  tag_43\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3399:3542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3548:3638   */\ntag_45:\n    /* \"#utility.yul\":3582:3589   */\n  0x00\n    /* \"#utility.yul\":3625:3630   */\n  dup2\n    /* \"#utility.yul\":3618:3631   */\n  iszero\n    /* \"#utility.yul\":3611:3632   */\n  iszero\n    /* \"#utility.yul\":3600:3632   */\n  swap1\n  pop\n    /* \"#utility.yul\":3548:3638   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3644:3760   */\ntag_46:\n    /* \"#utility.yul\":3714:3735   */\n  tag_116\n    /* \"#utility.yul\":3729:3734   */\n  dup2\n    /* \"#utility.yul\":3714:3735   */\n  tag_45\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3707:3712   */\n  dup2\n    /* \"#utility.yul\":3704:3736   */\n  eq\n    /* \"#utility.yul\":3694:3754   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3747:3748   */\n  dup1\n    /* \"#utility.yul\":3740:3752   */\n  revert\n    /* \"#utility.yul\":3694:3754   */\ntag_117:\n    /* \"#utility.yul\":3644:3760   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3766:3903   */\ntag_47:\n    /* \"#utility.yul\":3820:3825   */\n  0x00\n    /* \"#utility.yul\":3851:3857   */\n  dup2\n    /* \"#utility.yul\":3845:3858   */\n  mload\n    /* \"#utility.yul\":3836:3858   */\n  swap1\n  pop\n    /* \"#utility.yul\":3867:3897   */\n  tag_119\n    /* \"#utility.yul\":3891:3896   */\n  dup2\n    /* \"#utility.yul\":3867:3897   */\n  tag_46\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3766:3903   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3909:5697   */\ntag_3:\n    /* \"#utility.yul\":4059:4065   */\n  0x00\n    /* \"#utility.yul\":4067:4073   */\n  dup1\n    /* \"#utility.yul\":4075:4081   */\n  0x00\n    /* \"#utility.yul\":4083:4089   */\n  dup1\n    /* \"#utility.yul\":4091:4097   */\n  0x00\n    /* \"#utility.yul\":4099:4105   */\n  dup1\n    /* \"#utility.yul\":4107:4113   */\n  0x00\n    /* \"#utility.yul\":4115:4121   */\n  dup1\n    /* \"#utility.yul\":4164:4167   */\n  0x0100\n    /* \"#utility.yul\":4152:4161   */\n  dup10\n    /* \"#utility.yul\":4143:4150   */\n  dup12\n    /* \"#utility.yul\":4139:4162   */\n  sub\n    /* \"#utility.yul\":4135:4168   */\n  slt\n    /* \"#utility.yul\":4132:4252   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4171:4250   */\n  tag_122\n  tag_26\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4132:4252   */\ntag_121:\n    /* \"#utility.yul\":4312:4313   */\n  0x00\n    /* \"#utility.yul\":4301:4310   */\n  dup10\n    /* \"#utility.yul\":4297:4314   */\n  add\n    /* \"#utility.yul\":4291:4315   */\n  mload\n    /* \"#utility.yul\":4342:4360   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4334:4340   */\n  dup2\n    /* \"#utility.yul\":4331:4361   */\n  gt\n    /* \"#utility.yul\":4328:4445   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4364:4443   */\n  tag_124\n  tag_27\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4328:4445   */\ntag_123:\n    /* \"#utility.yul\":4469:4543   */\n  tag_125\n    /* \"#utility.yul\":4535:4542   */\n  dup12\n    /* \"#utility.yul\":4526:4532   */\n  dup3\n    /* \"#utility.yul\":4515:4524   */\n  dup13\n    /* \"#utility.yul\":4511:4533   */\n  add\n    /* \"#utility.yul\":4469:4543   */\n  tag_37\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4459:4543   */\n  swap9\n  pop\n    /* \"#utility.yul\":4262:4553   */\n  pop\n    /* \"#utility.yul\":4613:4615   */\n  0x20\n    /* \"#utility.yul\":4602:4611   */\n  dup10\n    /* \"#utility.yul\":4598:4616   */\n  add\n    /* \"#utility.yul\":4592:4617   */\n  mload\n    /* \"#utility.yul\":4644:4662   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4636:4642   */\n  dup2\n    /* \"#utility.yul\":4633:4663   */\n  gt\n    /* \"#utility.yul\":4630:4747   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4666:4745   */\n  tag_127\n  tag_27\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4630:4747   */\ntag_126:\n    /* \"#utility.yul\":4771:4845   */\n  tag_128\n    /* \"#utility.yul\":4837:4844   */\n  dup12\n    /* \"#utility.yul\":4828:4834   */\n  dup3\n    /* \"#utility.yul\":4817:4826   */\n  dup13\n    /* \"#utility.yul\":4813:4835   */\n  add\n    /* \"#utility.yul\":4771:4845   */\n  tag_37\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4761:4845   */\n  swap8\n  pop\n    /* \"#utility.yul\":4563:4855   */\n  pop\n    /* \"#utility.yul\":4894:4896   */\n  0x40\n    /* \"#utility.yul\":4920:4984   */\n  tag_129\n    /* \"#utility.yul\":4976:4983   */\n  dup12\n    /* \"#utility.yul\":4967:4973   */\n  dup3\n    /* \"#utility.yul\":4956:4965   */\n  dup13\n    /* \"#utility.yul\":4952:4974   */\n  add\n    /* \"#utility.yul\":4920:4984   */\n  tag_41\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4910:4984   */\n  swap7\n  pop\n    /* \"#utility.yul\":4865:4994   */\n  pop\n    /* \"#utility.yul\":5033:5035   */\n  0x60\n    /* \"#utility.yul\":5059:5123   */\n  tag_130\n    /* \"#utility.yul\":5115:5122   */\n  dup12\n    /* \"#utility.yul\":5106:5112   */\n  dup3\n    /* \"#utility.yul\":5095:5104   */\n  dup13\n    /* \"#utility.yul\":5091:5113   */\n  add\n    /* \"#utility.yul\":5059:5123   */\n  tag_41\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5049:5123   */\n  swap6\n  pop\n    /* \"#utility.yul\":5004:5133   */\n  pop\n    /* \"#utility.yul\":5172:5175   */\n  0x80\n    /* \"#utility.yul\":5199:5263   */\n  tag_131\n    /* \"#utility.yul\":5255:5262   */\n  dup12\n    /* \"#utility.yul\":5246:5252   */\n  dup3\n    /* \"#utility.yul\":5235:5244   */\n  dup13\n    /* \"#utility.yul\":5231:5253   */\n  add\n    /* \"#utility.yul\":5199:5263   */\n  tag_44\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5189:5263   */\n  swap5\n  pop\n    /* \"#utility.yul\":5143:5273   */\n  pop\n    /* \"#utility.yul\":5312:5315   */\n  0xa0\n    /* \"#utility.yul\":5339:5403   */\n  tag_132\n    /* \"#utility.yul\":5395:5402   */\n  dup12\n    /* \"#utility.yul\":5386:5392   */\n  dup3\n    /* \"#utility.yul\":5375:5384   */\n  dup13\n    /* \"#utility.yul\":5371:5393   */\n  add\n    /* \"#utility.yul\":5339:5403   */\n  tag_44\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5329:5403   */\n  swap4\n  pop\n    /* \"#utility.yul\":5283:5413   */\n  pop\n    /* \"#utility.yul\":5452:5455   */\n  0xc0\n    /* \"#utility.yul\":5479:5543   */\n  tag_133\n    /* \"#utility.yul\":5535:5542   */\n  dup12\n    /* \"#utility.yul\":5526:5532   */\n  dup3\n    /* \"#utility.yul\":5515:5524   */\n  dup13\n    /* \"#utility.yul\":5511:5533   */\n  add\n    /* \"#utility.yul\":5479:5543   */\n  tag_44\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5469:5543   */\n  swap3\n  pop\n    /* \"#utility.yul\":5423:5553   */\n  pop\n    /* \"#utility.yul\":5592:5595   */\n  0xe0\n    /* \"#utility.yul\":5619:5680   */\n  tag_134\n    /* \"#utility.yul\":5672:5679   */\n  dup12\n    /* \"#utility.yul\":5663:5669   */\n  dup3\n    /* \"#utility.yul\":5652:5661   */\n  dup13\n    /* \"#utility.yul\":5648:5670   */\n  add\n    /* \"#utility.yul\":5619:5680   */\n  tag_47\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5609:5680   */\n  swap2\n  pop\n    /* \"#utility.yul\":5563:5690   */\n  pop\n    /* \"#utility.yul\":3909:5697   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5703:5802   */\ntag_48:\n    /* \"#utility.yul\":5755:5761   */\n  0x00\n    /* \"#utility.yul\":5789:5794   */\n  dup2\n    /* \"#utility.yul\":5783:5795   */\n  mload\n    /* \"#utility.yul\":5773:5795   */\n  swap1\n  pop\n    /* \"#utility.yul\":5703:5802   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5808:5988   */\ntag_49:\n    /* \"#utility.yul\":5856:5933   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5853:5854   */\n  0x00\n    /* \"#utility.yul\":5846:5934   */\n  mstore\n    /* \"#utility.yul\":5953:5957   */\n  0x22\n    /* \"#utility.yul\":5950:5951   */\n  0x04\n    /* \"#utility.yul\":5943:5958   */\n  mstore\n    /* \"#utility.yul\":5977:5981   */\n  0x24\n    /* \"#utility.yul\":5974:5975   */\n  0x00\n    /* \"#utility.yul\":5967:5982   */\n  revert\n    /* \"#utility.yul\":5994:6314   */\ntag_50:\n    /* \"#utility.yul\":6038:6044   */\n  0x00\n    /* \"#utility.yul\":6075:6076   */\n  0x02\n    /* \"#utility.yul\":6069:6073   */\n  dup3\n    /* \"#utility.yul\":6065:6077   */\n  div\n    /* \"#utility.yul\":6055:6077   */\n  swap1\n  pop\n    /* \"#utility.yul\":6122:6123   */\n  0x01\n    /* \"#utility.yul\":6116:6120   */\n  dup3\n    /* \"#utility.yul\":6112:6124   */\n  and\n    /* \"#utility.yul\":6143:6161   */\n  dup1\n    /* \"#utility.yul\":6133:6214   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6199:6203   */\n  0x7f\n    /* \"#utility.yul\":6191:6197   */\n  dup3\n    /* \"#utility.yul\":6187:6204   */\n  and\n    /* \"#utility.yul\":6177:6204   */\n  swap2\n  pop\n    /* \"#utility.yul\":6133:6214   */\ntag_138:\n    /* \"#utility.yul\":6261:6263   */\n  0x20\n    /* \"#utility.yul\":6253:6259   */\n  dup3\n    /* \"#utility.yul\":6250:6264   */\n  lt\n    /* \"#utility.yul\":6230:6248   */\n  dup2\n    /* \"#utility.yul\":6227:6265   */\n  sub\n    /* \"#utility.yul\":6224:6308   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6280:6298   */\n  tag_140\n  tag_49\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6224:6308   */\ntag_139:\n    /* \"#utility.yul\":6045:6314   */\n  pop\n    /* \"#utility.yul\":5994:6314   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6320:6461   */\ntag_51:\n    /* \"#utility.yul\":6369:6373   */\n  0x00\n    /* \"#utility.yul\":6392:6395   */\n  dup2\n    /* \"#utility.yul\":6384:6395   */\n  swap1\n  pop\n    /* \"#utility.yul\":6415:6418   */\n  dup2\n    /* \"#utility.yul\":6412:6413   */\n  0x00\n    /* \"#utility.yul\":6405:6419   */\n  mstore\n    /* \"#utility.yul\":6449:6453   */\n  0x20\n    /* \"#utility.yul\":6446:6447   */\n  0x00\n    /* \"#utility.yul\":6436:6454   */\n  keccak256\n    /* \"#utility.yul\":6428:6454   */\n  swap1\n  pop\n    /* \"#utility.yul\":6320:6461   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6467:6560   */\ntag_52:\n    /* \"#utility.yul\":6504:6510   */\n  0x00\n    /* \"#utility.yul\":6551:6553   */\n  0x20\n    /* \"#utility.yul\":6546:6548   */\n  0x1f\n    /* \"#utility.yul\":6539:6544   */\n  dup4\n    /* \"#utility.yul\":6535:6549   */\n  add\n    /* \"#utility.yul\":6531:6554   */\n  div\n    /* \"#utility.yul\":6521:6554   */\n  swap1\n  pop\n    /* \"#utility.yul\":6467:6560   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6566:6673   */\ntag_53:\n    /* \"#utility.yul\":6610:6618   */\n  0x00\n    /* \"#utility.yul\":6660:6665   */\n  dup3\n    /* \"#utility.yul\":6654:6658   */\n  dup3\n    /* \"#utility.yul\":6650:6666   */\n  shl\n    /* \"#utility.yul\":6629:6666   */\n  swap1\n  pop\n    /* \"#utility.yul\":6566:6673   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6679:7072   */\ntag_54:\n    /* \"#utility.yul\":6748:6754   */\n  0x00\n    /* \"#utility.yul\":6798:6799   */\n  0x08\n    /* \"#utility.yul\":6786:6796   */\n  dup4\n    /* \"#utility.yul\":6782:6800   */\n  mul\n    /* \"#utility.yul\":6821:6918   */\n  tag_145\n    /* \"#utility.yul\":6851:6917   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6840:6849   */\n  dup3\n    /* \"#utility.yul\":6821:6918   */\n  tag_53\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6939:6978   */\n  tag_146\n    /* \"#utility.yul\":6969:6977   */\n  dup7\n    /* \"#utility.yul\":6958:6967   */\n  dup4\n    /* \"#utility.yul\":6939:6978   */\n  tag_53\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6927:6978   */\n  swap6\n  pop\n    /* \"#utility.yul\":7011:7015   */\n  dup1\n    /* \"#utility.yul\":7007:7016   */\n  not\n    /* \"#utility.yul\":7000:7005   */\n  dup5\n    /* \"#utility.yul\":6996:7017   */\n  and\n    /* \"#utility.yul\":6987:7017   */\n  swap4\n  pop\n    /* \"#utility.yul\":7060:7064   */\n  dup1\n    /* \"#utility.yul\":7050:7058   */\n  dup7\n    /* \"#utility.yul\":7046:7065   */\n  and\n    /* \"#utility.yul\":7039:7044   */\n  dup5\n    /* \"#utility.yul\":7036:7066   */\n  or\n    /* \"#utility.yul\":7026:7066   */\n  swap3\n  pop\n    /* \"#utility.yul\":6755:7072   */\n  pop\n  pop\n    /* \"#utility.yul\":6679:7072   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7078:7138   */\ntag_55:\n    /* \"#utility.yul\":7106:7109   */\n  0x00\n    /* \"#utility.yul\":7127:7132   */\n  dup2\n    /* \"#utility.yul\":7120:7132   */\n  swap1\n  pop\n    /* \"#utility.yul\":7078:7138   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7144:7286   */\ntag_56:\n    /* \"#utility.yul\":7194:7203   */\n  0x00\n    /* \"#utility.yul\":7227:7280   */\n  tag_149\n    /* \"#utility.yul\":7245:7279   */\n  tag_150\n    /* \"#utility.yul\":7254:7278   */\n  tag_151\n    /* \"#utility.yul\":7272:7277   */\n  dup5\n    /* \"#utility.yul\":7254:7278   */\n  tag_42\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7245:7279   */\n  tag_55\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7227:7280   */\n  tag_42\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7214:7280   */\n  swap1\n  pop\n    /* \"#utility.yul\":7144:7286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7292:7367   */\ntag_57:\n    /* \"#utility.yul\":7335:7338   */\n  0x00\n    /* \"#utility.yul\":7356:7361   */\n  dup2\n    /* \"#utility.yul\":7349:7361   */\n  swap1\n  pop\n    /* \"#utility.yul\":7292:7367   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7373:7642   */\ntag_58:\n    /* \"#utility.yul\":7483:7522   */\n  tag_154\n    /* \"#utility.yul\":7514:7521   */\n  dup4\n    /* \"#utility.yul\":7483:7522   */\n  tag_56\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7544:7635   */\n  tag_155\n    /* \"#utility.yul\":7593:7634   */\n  tag_156\n    /* \"#utility.yul\":7617:7633   */\n  dup3\n    /* \"#utility.yul\":7593:7634   */\n  tag_57\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7585:7591   */\n  dup5\n    /* \"#utility.yul\":7578:7582   */\n  dup5\n    /* \"#utility.yul\":7572:7583   */\n  sload\n    /* \"#utility.yul\":7544:7635   */\n  tag_54\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7538:7542   */\n  dup3\n    /* \"#utility.yul\":7531:7636   */\n  sstore\n    /* \"#utility.yul\":7449:7642   */\n  pop\n    /* \"#utility.yul\":7373:7642   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7648:7721   */\ntag_59:\n    /* \"#utility.yul\":7693:7696   */\n  0x00\n    /* \"#utility.yul\":7648:7721   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7727:7916   */\ntag_60:\n    /* \"#utility.yul\":7804:7836   */\n  tag_159\n  tag_59\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7845:7910   */\n  tag_160\n    /* \"#utility.yul\":7903:7909   */\n  dup2\n    /* \"#utility.yul\":7895:7901   */\n  dup5\n    /* \"#utility.yul\":7889:7893   */\n  dup5\n    /* \"#utility.yul\":7845:7910   */\n  tag_58\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7780:7916   */\n  pop\n    /* \"#utility.yul\":7727:7916   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7922:8108   */\ntag_61:\n    /* \"#utility.yul\":7982:8102   */\ntag_162:\n    /* \"#utility.yul\":7999:8002   */\n  dup2\n    /* \"#utility.yul\":7992:7997   */\n  dup2\n    /* \"#utility.yul\":7989:8003   */\n  lt\n    /* \"#utility.yul\":7982:8102   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":8053:8092   */\n  tag_165\n    /* \"#utility.yul\":8090:8091   */\n  0x00\n    /* \"#utility.yul\":8083:8088   */\n  dup3\n    /* \"#utility.yul\":8053:8092   */\n  tag_60\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8026:8027   */\n  0x01\n    /* \"#utility.yul\":8019:8024   */\n  dup2\n    /* \"#utility.yul\":8015:8028   */\n  add\n    /* \"#utility.yul\":8006:8028   */\n  swap1\n  pop\n    /* \"#utility.yul\":7982:8102   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":7922:8108   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8114:8657   */\ntag_62:\n    /* \"#utility.yul\":8215:8217   */\n  0x1f\n    /* \"#utility.yul\":8210:8213   */\n  dup3\n    /* \"#utility.yul\":8207:8218   */\n  gt\n    /* \"#utility.yul\":8204:8650   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8249:8287   */\n  tag_168\n    /* \"#utility.yul\":8281:8286   */\n  dup2\n    /* \"#utility.yul\":8249:8287   */\n  tag_51\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8333:8362   */\n  tag_169\n    /* \"#utility.yul\":8351:8361   */\n  dup5\n    /* \"#utility.yul\":8333:8362   */\n  tag_52\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8323:8331   */\n  dup2\n    /* \"#utility.yul\":8319:8363   */\n  add\n    /* \"#utility.yul\":8516:8518   */\n  0x20\n    /* \"#utility.yul\":8504:8514   */\n  dup6\n    /* \"#utility.yul\":8501:8519   */\n  lt\n    /* \"#utility.yul\":8498:8547   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8537:8545   */\n  dup2\n    /* \"#utility.yul\":8522:8545   */\n  swap1\n  pop\n    /* \"#utility.yul\":8498:8547   */\ntag_170:\n    /* \"#utility.yul\":8560:8640   */\n  tag_171\n    /* \"#utility.yul\":8616:8638   */\n  tag_172\n    /* \"#utility.yul\":8634:8637   */\n  dup6\n    /* \"#utility.yul\":8616:8638   */\n  tag_52\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8606:8614   */\n  dup4\n    /* \"#utility.yul\":8602:8639   */\n  add\n    /* \"#utility.yul\":8589:8600   */\n  dup3\n    /* \"#utility.yul\":8560:8640   */\n  tag_61\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8219:8650   */\n  pop\n  pop\n    /* \"#utility.yul\":8204:8650   */\ntag_167:\n    /* \"#utility.yul\":8114:8657   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8663:8780   */\ntag_63:\n    /* \"#utility.yul\":8717:8725   */\n  0x00\n    /* \"#utility.yul\":8767:8772   */\n  dup3\n    /* \"#utility.yul\":8761:8765   */\n  dup3\n    /* \"#utility.yul\":8757:8773   */\n  shr\n    /* \"#utility.yul\":8736:8773   */\n  swap1\n  pop\n    /* \"#utility.yul\":8663:8780   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8786:8955   */\ntag_64:\n    /* \"#utility.yul\":8830:8836   */\n  0x00\n    /* \"#utility.yul\":8863:8914   */\n  tag_175\n    /* \"#utility.yul\":8911:8912   */\n  0x00\n    /* \"#utility.yul\":8907:8913   */\n  not\n    /* \"#utility.yul\":8899:8904   */\n  dup5\n    /* \"#utility.yul\":8896:8897   */\n  0x08\n    /* \"#utility.yul\":8892:8905   */\n  mul\n    /* \"#utility.yul\":8863:8914   */\n  tag_63\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8859:8915   */\n  not\n    /* \"#utility.yul\":8944:8948   */\n  dup1\n    /* \"#utility.yul\":8938:8942   */\n  dup4\n    /* \"#utility.yul\":8934:8949   */\n  and\n    /* \"#utility.yul\":8924:8949   */\n  swap2\n  pop\n    /* \"#utility.yul\":8837:8955   */\n  pop\n    /* \"#utility.yul\":8786:8955   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8960:9255   */\ntag_65:\n    /* \"#utility.yul\":9036:9040   */\n  0x00\n    /* \"#utility.yul\":9182:9211   */\n  tag_177\n    /* \"#utility.yul\":9207:9210   */\n  dup4\n    /* \"#utility.yul\":9201:9205   */\n  dup4\n    /* \"#utility.yul\":9182:9211   */\n  tag_64\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":9174:9211   */\n  swap2\n  pop\n    /* \"#utility.yul\":9244:9247   */\n  dup3\n    /* \"#utility.yul\":9241:9242   */\n  0x02\n    /* \"#utility.yul\":9237:9248   */\n  mul\n    /* \"#utility.yul\":9231:9235   */\n  dup3\n    /* \"#utility.yul\":9228:9249   */\n  or\n    /* \"#utility.yul\":9220:9249   */\n  swap1\n  pop\n    /* \"#utility.yul\":8960:9255   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9260:10655   */\ntag_10:\n    /* \"#utility.yul\":9377:9414   */\n  tag_179\n    /* \"#utility.yul\":9410:9413   */\n  dup3\n    /* \"#utility.yul\":9377:9414   */\n  tag_48\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9479:9497   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":9471:9477   */\n  dup2\n    /* \"#utility.yul\":9468:9498   */\n  gt\n    /* \"#utility.yul\":9465:9521   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":9501:9519   */\n  tag_181\n  tag_31\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9465:9521   */\ntag_180:\n    /* \"#utility.yul\":9545:9583   */\n  tag_182\n    /* \"#utility.yul\":9577:9581   */\n  dup3\n    /* \"#utility.yul\":9571:9582   */\n  sload\n    /* \"#utility.yul\":9545:9583   */\n  tag_50\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9630:9697   */\n  tag_183\n    /* \"#utility.yul\":9690:9696   */\n  dup3\n    /* \"#utility.yul\":9682:9688   */\n  dup3\n    /* \"#utility.yul\":9676:9680   */\n  dup6\n    /* \"#utility.yul\":9630:9697   */\n  tag_62\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9724:9725   */\n  0x00\n    /* \"#utility.yul\":9748:9752   */\n  0x20\n    /* \"#utility.yul\":9735:9752   */\n  swap1\n  pop\n    /* \"#utility.yul\":9780:9782   */\n  0x1f\n    /* \"#utility.yul\":9772:9778   */\n  dup4\n    /* \"#utility.yul\":9769:9783   */\n  gt\n    /* \"#utility.yul\":9797:9798   */\n  0x01\n    /* \"#utility.yul\":9792:10410   */\n  dup2\n  eq\n  tag_185\n  jumpi\n    /* \"#utility.yul\":10454:10455   */\n  0x00\n    /* \"#utility.yul\":10471:10477   */\n  dup5\n    /* \"#utility.yul\":10468:10545   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":10520:10529   */\n  dup3\n    /* \"#utility.yul\":10515:10518   */\n  dup8\n    /* \"#utility.yul\":10511:10530   */\n  add\n    /* \"#utility.yul\":10505:10531   */\n  mload\n    /* \"#utility.yul\":10496:10531   */\n  swap1\n  pop\n    /* \"#utility.yul\":10468:10545   */\ntag_186:\n    /* \"#utility.yul\":10571:10638   */\n  tag_187\n    /* \"#utility.yul\":10631:10637   */\n  dup6\n    /* \"#utility.yul\":10624:10629   */\n  dup3\n    /* \"#utility.yul\":10571:10638   */\n  tag_65\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":10565:10569   */\n  dup7\n    /* \"#utility.yul\":10558:10639   */\n  sstore\n    /* \"#utility.yul\":10427:10649   */\n  pop\n    /* \"#utility.yul\":9762:10649   */\n  jump(tag_184)\n    /* \"#utility.yul\":9792:10410   */\ntag_185:\n    /* \"#utility.yul\":9844:9848   */\n  0x1f\n    /* \"#utility.yul\":9840:9849   */\n  not\n    /* \"#utility.yul\":9832:9838   */\n  dup5\n    /* \"#utility.yul\":9828:9850   */\n  and\n    /* \"#utility.yul\":9878:9915   */\n  tag_188\n    /* \"#utility.yul\":9910:9914   */\n  dup7\n    /* \"#utility.yul\":9878:9915   */\n  tag_51\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9937:9938   */\n  0x00\n    /* \"#utility.yul\":9951:10159   */\ntag_189:\n    /* \"#utility.yul\":9965:9972   */\n  dup3\n    /* \"#utility.yul\":9962:9963   */\n  dup2\n    /* \"#utility.yul\":9959:9973   */\n  lt\n    /* \"#utility.yul\":9951:10159   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":10044:10053   */\n  dup5\n    /* \"#utility.yul\":10039:10042   */\n  dup10\n    /* \"#utility.yul\":10035:10054   */\n  add\n    /* \"#utility.yul\":10029:10055   */\n  mload\n    /* \"#utility.yul\":10021:10027   */\n  dup3\n    /* \"#utility.yul\":10014:10056   */\n  sstore\n    /* \"#utility.yul\":10095:10096   */\n  0x01\n    /* \"#utility.yul\":10087:10093   */\n  dup3\n    /* \"#utility.yul\":10083:10097   */\n  add\n    /* \"#utility.yul\":10073:10097   */\n  swap2\n  pop\n    /* \"#utility.yul\":10142:10144   */\n  0x20\n    /* \"#utility.yul\":10131:10140   */\n  dup6\n    /* \"#utility.yul\":10127:10145   */\n  add\n    /* \"#utility.yul\":10114:10145   */\n  swap5\n  pop\n    /* \"#utility.yul\":9988:9992   */\n  0x20\n    /* \"#utility.yul\":9985:9986   */\n  dup2\n    /* \"#utility.yul\":9981:9993   */\n  add\n    /* \"#utility.yul\":9976:9993   */\n  swap1\n  pop\n    /* \"#utility.yul\":9951:10159   */\n  jump(tag_189)\ntag_191:\n    /* \"#utility.yul\":10187:10193   */\n  dup7\n    /* \"#utility.yul\":10178:10185   */\n  dup4\n    /* \"#utility.yul\":10175:10194   */\n  lt\n    /* \"#utility.yul\":10172:10351   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":10245:10254   */\n  dup5\n    /* \"#utility.yul\":10240:10243   */\n  dup10\n    /* \"#utility.yul\":10236:10255   */\n  add\n    /* \"#utility.yul\":10230:10256   */\n  mload\n    /* \"#utility.yul\":10288:10336   */\n  tag_193\n    /* \"#utility.yul\":10330:10334   */\n  0x1f\n    /* \"#utility.yul\":10322:10328   */\n  dup10\n    /* \"#utility.yul\":10318:10335   */\n  and\n    /* \"#utility.yul\":10307:10316   */\n  dup3\n    /* \"#utility.yul\":10288:10336   */\n  tag_64\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10280:10286   */\n  dup4\n    /* \"#utility.yul\":10273:10337   */\n  sstore\n    /* \"#utility.yul\":10195:10351   */\n  pop\n    /* \"#utility.yul\":10172:10351   */\ntag_192:\n    /* \"#utility.yul\":10397:10398   */\n  0x01\n    /* \"#utility.yul\":10393:10394   */\n  0x02\n    /* \"#utility.yul\":10385:10391   */\n  dup9\n    /* \"#utility.yul\":10381:10395   */\n  mul\n    /* \"#utility.yul\":10377:10399   */\n  add\n    /* \"#utility.yul\":10371:10375   */\n  dup9\n    /* \"#utility.yul\":10364:10400   */\n  sstore\n    /* \"#utility.yul\":9799:10410   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9762:10649   */\ntag_184:\n  pop\n    /* \"#utility.yul\":9352:10655   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9260:10655   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10661:10779   */\ntag_66:\n    /* \"#utility.yul\":10748:10772   */\n  tag_195\n    /* \"#utility.yul\":10766:10771   */\n  dup2\n    /* \"#utility.yul\":10748:10772   */\n  tag_39\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":10743:10746   */\n  dup3\n    /* \"#utility.yul\":10736:10773   */\n  mstore\n    /* \"#utility.yul\":10661:10779   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10785:11007   */\ntag_15:\n    /* \"#utility.yul\":10878:10882   */\n  0x00\n    /* \"#utility.yul\":10916:10918   */\n  0x20\n    /* \"#utility.yul\":10905:10914   */\n  dup3\n    /* \"#utility.yul\":10901:10919   */\n  add\n    /* \"#utility.yul\":10893:10919   */\n  swap1\n  pop\n    /* \"#utility.yul\":10929:11000   */\n  tag_197\n    /* \"#utility.yul\":10997:10998   */\n  0x00\n    /* \"#utility.yul\":10986:10995   */\n  dup4\n    /* \"#utility.yul\":10982:10999   */\n  add\n    /* \"#utility.yul\":10973:10979   */\n  dup5\n    /* \"#utility.yul\":10929:11000   */\n  tag_66\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10785:11007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/OptionBase.sol\":228:2839  contract OptionBase is ERC20, Ownable, ReentrancyGuard {... */\ntag_23:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OptionBase.sol\":228:2839  contract OptionBase is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f620487\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb8a11e82\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf3c274a6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xffd9eedb\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xb8a11e82\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcfb4fc71\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd8dfeb45\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x8f620487\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9acea70d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xac6068b5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb5113d90\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x313ce567\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x48d399e7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6f713c9c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1529a639\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f13b60c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":2185:2306  function getCollateralBalance() public view returns (uint256) {... */\n    tag_5:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":2445:2550  function isExpired() public view returns (bool) {... */\n    tag_8:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":290:322  address public collateralAddress */\n    tag_10:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":520:547  IERC20 public consideration */\n    tag_11:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":369:399  uint256 public  expirationDate */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":328:363  address public considerationAddress */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":2555:2662  function isNotExpired() public view returns (bool) {... */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":2312:2439  function getConsiderationBalance() public view returns (uint256) {... */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":405:430  uint256 public  strikeNum */\n    tag_21:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":436:461  uint256 public  strikeDen */\n    tag_22:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":490:514  IERC20 public collateral */\n    tag_23:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/OptionBase.sol\":467:484  bool public isPut */\n    tag_26:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OptionBase.sol\":2668:2834  function optionType() public view returns (string memory) {... */\n    tag_27:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":2185:2306  function getCollateralBalance() public view returns (uint256) {... */\n    tag_43:\n        /* \"contracts/OptionBase.sol\":2238:2245  uint256 */\n      0x00\n        /* \"contracts/OptionBase.sol\":2264:2274  collateral */\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OptionBase.sol\":2264:2284  collateral.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/OptionBase.sol\":2293:2297  this */\n      address\n        /* \"contracts/OptionBase.sol\":2264:2299  collateral.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/OptionBase.sol\":2257:2299  return collateral.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/OptionBase.sol\":2185:2306  function getCollateralBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":2445:2550  function isExpired() public view returns (bool) {... */\n    tag_55:\n        /* \"contracts/OptionBase.sol\":2487:2491  bool */\n      0x00\n        /* \"contracts/OptionBase.sol\":2529:2543  expirationDate */\n      sload(0x09)\n        /* \"contracts/OptionBase.sol\":2510:2525  block.timestamp */\n      timestamp\n        /* \"contracts/OptionBase.sol\":2510:2543  block.timestamp >= expirationDate */\n      lt\n      iszero\n        /* \"contracts/OptionBase.sol\":2503:2543  return block.timestamp >= expirationDate */\n      swap1\n      pop\n        /* \"contracts/OptionBase.sol\":2445:2550  function isExpired() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":290:322  address public collateralAddress */\n    tag_62:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":520:547  IERC20 public consideration */\n    tag_66:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":369:399  uint256 public  expirationDate */\n    tag_80:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_123\n      jump\t// in\n    tag_157:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_123\n      jump\t// in\n    tag_158:\n      dup1\n      iszero\n      tag_159\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_160\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_159)\n    tag_160:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_161:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_161\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":328:363  address public considerationAddress */\n    tag_86:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":2555:2662  function isNotExpired() public view returns (bool) {... */\n    tag_93:\n        /* \"contracts/OptionBase.sol\":2600:2604  bool */\n      0x00\n        /* \"contracts/OptionBase.sol\":2641:2655  expirationDate */\n      sload(0x09)\n        /* \"contracts/OptionBase.sol\":2623:2638  block.timestamp */\n      timestamp\n        /* \"contracts/OptionBase.sol\":2623:2655  block.timestamp < expirationDate */\n      lt\n        /* \"contracts/OptionBase.sol\":2616:2655  return block.timestamp < expirationDate */\n      swap1\n      pop\n        /* \"contracts/OptionBase.sol\":2555:2662  function isNotExpired() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":2312:2439  function getConsiderationBalance() public view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/OptionBase.sol\":2368:2375  uint256 */\n      0x00\n        /* \"contracts/OptionBase.sol\":2394:2407  consideration */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OptionBase.sol\":2394:2417  consideration.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/OptionBase.sol\":2426:2430  this */\n      address\n        /* \"contracts/OptionBase.sol\":2394:2432  consideration.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_170:\n        /* \"contracts/OptionBase.sol\":2387:2432  return consideration.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/OptionBase.sol\":2312:2439  function getConsiderationBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":405:430  uint256 public  strikeNum */\n    tag_99:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":436:461  uint256 public  strikeDen */\n    tag_102:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":490:514  IERC20 public collateral */\n    tag_105:\n      0x0c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":467:484  bool public isPut */\n    tag_116:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/OptionBase.sol\":2668:2834  function optionType() public view returns (string memory) {... */\n    tag_119:\n        /* \"contracts/OptionBase.sol\":2711:2724  string memory */\n      0x60\n        /* \"contracts/OptionBase.sol\":2740:2745  isPut */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/OptionBase.sol\":2736:2828  if (isPut) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/OptionBase.sol\":2761:2773  return \"PUT\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x5055540000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_178)\n        /* \"contracts/OptionBase.sol\":2736:2828  if (isPut) {... */\n    tag_179:\n        /* \"contracts/OptionBase.sol\":2804:2817  return \"CALL\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x43414c4c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/OptionBase.sol\":2668:2834  function optionType() public view returns (string memory) {... */\n    tag_178:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_217)\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_221)\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_223:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_224:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_225:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_256:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_256)\n    tag_258:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_226:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_227:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_261\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_223\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":818:889   */\n      tag_262\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_263\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_225\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":988:1017   */\n      tag_264\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_226\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_35:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_266\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_227\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_229:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_231:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_232:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_272\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_231\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_233:\n        /* \"#utility.yul\":1983:2007   */\n      tag_274\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_232\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_275:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_234:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_277\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_233\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_235:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_236:\n        /* \"#utility.yul\":2339:2363   */\n      tag_280\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_235\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_281:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_237:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_283\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_236\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_38:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_286\n      tag_229\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2632:2751   */\n    tag_285:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_287\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_288\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_237\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_238:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_239:\n        /* \"#utility.yul\":3196:3217   */\n      tag_291\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_238\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_41:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_293\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_239\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_240:\n        /* \"#utility.yul\":3533:3557   */\n      tag_295\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_235\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_45:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_297\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_240\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_51:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_300\n      tag_229\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3908:4027   */\n    tag_299:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_301\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_234\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_302\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_234\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_303\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_237\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_241:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_242:\n        /* \"#utility.yul\":4598:4620   */\n      tag_306\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_241\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_60:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_308\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_242\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4971   */\n    tag_243:\n        /* \"#utility.yul\":4940:4964   */\n      tag_310\n        /* \"#utility.yul\":4958:4963   */\n      dup2\n        /* \"#utility.yul\":4940:4964   */\n      tag_232\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4935:4938   */\n      dup3\n        /* \"#utility.yul\":4928:4965   */\n      mstore\n        /* \"#utility.yul\":4853:4971   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4977:5199   */\n    tag_64:\n        /* \"#utility.yul\":5070:5074   */\n      0x00\n        /* \"#utility.yul\":5108:5110   */\n      0x20\n        /* \"#utility.yul\":5097:5106   */\n      dup3\n        /* \"#utility.yul\":5093:5111   */\n      add\n        /* \"#utility.yul\":5085:5111   */\n      swap1\n      pop\n        /* \"#utility.yul\":5121:5192   */\n      tag_312\n        /* \"#utility.yul\":5189:5190   */\n      0x00\n        /* \"#utility.yul\":5178:5187   */\n      dup4\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5165:5171   */\n      dup5\n        /* \"#utility.yul\":5121:5192   */\n      tag_243\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4977:5199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5265   */\n    tag_244:\n        /* \"#utility.yul\":5233:5236   */\n      0x00\n        /* \"#utility.yul\":5254:5259   */\n      dup2\n        /* \"#utility.yul\":5247:5259   */\n      swap1\n      pop\n        /* \"#utility.yul\":5205:5265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5271:5413   */\n    tag_245:\n        /* \"#utility.yul\":5321:5330   */\n      0x00\n        /* \"#utility.yul\":5354:5407   */\n      tag_315\n        /* \"#utility.yul\":5372:5406   */\n      tag_316\n        /* \"#utility.yul\":5381:5405   */\n      tag_317\n        /* \"#utility.yul\":5399:5404   */\n      dup5\n        /* \"#utility.yul\":5381:5405   */\n      tag_231\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5372:5406   */\n      tag_244\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5354:5407   */\n      tag_231\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5341:5407   */\n      swap1\n      pop\n        /* \"#utility.yul\":5271:5413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5419:5545   */\n    tag_246:\n        /* \"#utility.yul\":5469:5478   */\n      0x00\n        /* \"#utility.yul\":5502:5539   */\n      tag_319\n        /* \"#utility.yul\":5533:5538   */\n      dup3\n        /* \"#utility.yul\":5502:5539   */\n      tag_245\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5489:5539   */\n      swap1\n      pop\n        /* \"#utility.yul\":5419:5545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5551:5691   */\n    tag_247:\n        /* \"#utility.yul\":5615:5624   */\n      0x00\n        /* \"#utility.yul\":5648:5685   */\n      tag_321\n        /* \"#utility.yul\":5679:5684   */\n      dup3\n        /* \"#utility.yul\":5648:5685   */\n      tag_246\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5635:5685   */\n      swap1\n      pop\n        /* \"#utility.yul\":5551:5691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:5856   */\n    tag_248:\n        /* \"#utility.yul\":5798:5849   */\n      tag_323\n        /* \"#utility.yul\":5843:5848   */\n      dup2\n        /* \"#utility.yul\":5798:5849   */\n      tag_247\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5793:5796   */\n      dup3\n        /* \"#utility.yul\":5786:5850   */\n      mstore\n        /* \"#utility.yul\":5697:5856   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5862:6112   */\n    tag_68:\n        /* \"#utility.yul\":5969:5973   */\n      0x00\n        /* \"#utility.yul\":6007:6009   */\n      0x20\n        /* \"#utility.yul\":5996:6005   */\n      dup3\n        /* \"#utility.yul\":5992:6010   */\n      add\n        /* \"#utility.yul\":5984:6010   */\n      swap1\n      pop\n        /* \"#utility.yul\":6020:6105   */\n      tag_325\n        /* \"#utility.yul\":6102:6103   */\n      0x00\n        /* \"#utility.yul\":6091:6100   */\n      dup4\n        /* \"#utility.yul\":6087:6104   */\n      add\n        /* \"#utility.yul\":6078:6084   */\n      dup5\n        /* \"#utility.yul\":6020:6105   */\n      tag_248\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5862:6112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6118:6447   */\n    tag_71:\n        /* \"#utility.yul\":6177:6183   */\n      0x00\n        /* \"#utility.yul\":6226:6228   */\n      0x20\n        /* \"#utility.yul\":6214:6223   */\n      dup3\n        /* \"#utility.yul\":6205:6212   */\n      dup5\n        /* \"#utility.yul\":6201:6224   */\n      sub\n        /* \"#utility.yul\":6197:6229   */\n      slt\n        /* \"#utility.yul\":6194:6313   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6232:6311   */\n      tag_328\n      tag_229\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6194:6313   */\n    tag_327:\n        /* \"#utility.yul\":6352:6353   */\n      0x00\n        /* \"#utility.yul\":6377:6430   */\n      tag_329\n        /* \"#utility.yul\":6422:6429   */\n      dup5\n        /* \"#utility.yul\":6413:6419   */\n      dup3\n        /* \"#utility.yul\":6402:6411   */\n      dup6\n        /* \"#utility.yul\":6398:6420   */\n      add\n        /* \"#utility.yul\":6377:6430   */\n      tag_234\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6367:6430   */\n      swap2\n      pop\n        /* \"#utility.yul\":6323:6440   */\n      pop\n        /* \"#utility.yul\":6118:6447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6453:6927   */\n    tag_109:\n        /* \"#utility.yul\":6521:6527   */\n      0x00\n        /* \"#utility.yul\":6529:6535   */\n      dup1\n        /* \"#utility.yul\":6578:6580   */\n      0x40\n        /* \"#utility.yul\":6566:6575   */\n      dup4\n        /* \"#utility.yul\":6557:6564   */\n      dup6\n        /* \"#utility.yul\":6553:6576   */\n      sub\n        /* \"#utility.yul\":6549:6581   */\n      slt\n        /* \"#utility.yul\":6546:6665   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6584:6663   */\n      tag_332\n      tag_229\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6546:6665   */\n    tag_331:\n        /* \"#utility.yul\":6704:6705   */\n      0x00\n        /* \"#utility.yul\":6729:6782   */\n      tag_333\n        /* \"#utility.yul\":6774:6781   */\n      dup6\n        /* \"#utility.yul\":6765:6771   */\n      dup3\n        /* \"#utility.yul\":6754:6763   */\n      dup7\n        /* \"#utility.yul\":6750:6772   */\n      add\n        /* \"#utility.yul\":6729:6782   */\n      tag_234\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6719:6782   */\n      swap3\n      pop\n        /* \"#utility.yul\":6675:6792   */\n      pop\n        /* \"#utility.yul\":6831:6833   */\n      0x20\n        /* \"#utility.yul\":6857:6910   */\n      tag_334\n        /* \"#utility.yul\":6902:6909   */\n      dup6\n        /* \"#utility.yul\":6893:6899   */\n      dup3\n        /* \"#utility.yul\":6882:6891   */\n      dup7\n        /* \"#utility.yul\":6878:6900   */\n      add\n        /* \"#utility.yul\":6857:6910   */\n      tag_234\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6847:6910   */\n      swap2\n      pop\n        /* \"#utility.yul\":6802:6920   */\n      pop\n        /* \"#utility.yul\":6453:6927   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7113   */\n    tag_249:\n        /* \"#utility.yul\":6981:7058   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6978:6979   */\n      0x00\n        /* \"#utility.yul\":6971:7059   */\n      mstore\n        /* \"#utility.yul\":7078:7082   */\n      0x22\n        /* \"#utility.yul\":7075:7076   */\n      0x04\n        /* \"#utility.yul\":7068:7083   */\n      mstore\n        /* \"#utility.yul\":7102:7106   */\n      0x24\n        /* \"#utility.yul\":7099:7100   */\n      0x00\n        /* \"#utility.yul\":7092:7107   */\n      revert\n        /* \"#utility.yul\":7119:7439   */\n    tag_123:\n        /* \"#utility.yul\":7163:7169   */\n      0x00\n        /* \"#utility.yul\":7200:7201   */\n      0x02\n        /* \"#utility.yul\":7194:7198   */\n      dup3\n        /* \"#utility.yul\":7190:7202   */\n      div\n        /* \"#utility.yul\":7180:7202   */\n      swap1\n      pop\n        /* \"#utility.yul\":7247:7248   */\n      0x01\n        /* \"#utility.yul\":7241:7245   */\n      dup3\n        /* \"#utility.yul\":7237:7249   */\n      and\n        /* \"#utility.yul\":7268:7286   */\n      dup1\n        /* \"#utility.yul\":7258:7339   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":7324:7328   */\n      0x7f\n        /* \"#utility.yul\":7316:7322   */\n      dup3\n        /* \"#utility.yul\":7312:7329   */\n      and\n        /* \"#utility.yul\":7302:7329   */\n      swap2\n      pop\n        /* \"#utility.yul\":7258:7339   */\n    tag_337:\n        /* \"#utility.yul\":7386:7388   */\n      0x20\n        /* \"#utility.yul\":7378:7384   */\n      dup3\n        /* \"#utility.yul\":7375:7389   */\n      lt\n        /* \"#utility.yul\":7355:7373   */\n      dup2\n        /* \"#utility.yul\":7352:7390   */\n      sub\n        /* \"#utility.yul\":7349:7433   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7405:7423   */\n      tag_339\n      tag_249\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7349:7433   */\n    tag_338:\n        /* \"#utility.yul\":7170:7439   */\n      pop\n        /* \"#utility.yul\":7119:7439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:7588   */\n    tag_250:\n        /* \"#utility.yul\":7502:7507   */\n      0x00\n        /* \"#utility.yul\":7533:7539   */\n      dup2\n        /* \"#utility.yul\":7527:7540   */\n      mload\n        /* \"#utility.yul\":7518:7540   */\n      swap1\n      pop\n        /* \"#utility.yul\":7549:7582   */\n      tag_341\n        /* \"#utility.yul\":7576:7581   */\n      dup2\n        /* \"#utility.yul\":7549:7582   */\n      tag_236\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7445:7588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7594:7945   */\n    tag_138:\n        /* \"#utility.yul\":7664:7670   */\n      0x00\n        /* \"#utility.yul\":7713:7715   */\n      0x20\n        /* \"#utility.yul\":7701:7710   */\n      dup3\n        /* \"#utility.yul\":7692:7699   */\n      dup5\n        /* \"#utility.yul\":7688:7711   */\n      sub\n        /* \"#utility.yul\":7684:7716   */\n      slt\n        /* \"#utility.yul\":7681:7800   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":7719:7798   */\n      tag_344\n      tag_229\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7681:7800   */\n    tag_343:\n        /* \"#utility.yul\":7839:7840   */\n      0x00\n        /* \"#utility.yul\":7864:7928   */\n      tag_345\n        /* \"#utility.yul\":7920:7927   */\n      dup5\n        /* \"#utility.yul\":7911:7917   */\n      dup3\n        /* \"#utility.yul\":7900:7909   */\n      dup6\n        /* \"#utility.yul\":7896:7918   */\n      add\n        /* \"#utility.yul\":7864:7928   */\n      tag_250\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7854:7928   */\n      swap2\n      pop\n        /* \"#utility.yul\":7810:7938   */\n      pop\n        /* \"#utility.yul\":7594:7945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7951:8393   */\n    tag_190:\n        /* \"#utility.yul\":8100:8104   */\n      0x00\n        /* \"#utility.yul\":8138:8140   */\n      0x60\n        /* \"#utility.yul\":8127:8136   */\n      dup3\n        /* \"#utility.yul\":8123:8141   */\n      add\n        /* \"#utility.yul\":8115:8141   */\n      swap1\n      pop\n        /* \"#utility.yul\":8151:8222   */\n      tag_347\n        /* \"#utility.yul\":8219:8220   */\n      0x00\n        /* \"#utility.yul\":8208:8217   */\n      dup4\n        /* \"#utility.yul\":8204:8221   */\n      add\n        /* \"#utility.yul\":8195:8201   */\n      dup7\n        /* \"#utility.yul\":8151:8222   */\n      tag_243\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8232:8304   */\n      tag_348\n        /* \"#utility.yul\":8300:8302   */\n      0x20\n        /* \"#utility.yul\":8289:8298   */\n      dup4\n        /* \"#utility.yul\":8285:8303   */\n      add\n        /* \"#utility.yul\":8276:8282   */\n      dup6\n        /* \"#utility.yul\":8232:8304   */\n      tag_240\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8314:8386   */\n      tag_349\n        /* \"#utility.yul\":8382:8384   */\n      0x40\n        /* \"#utility.yul\":8371:8380   */\n      dup4\n        /* \"#utility.yul\":8367:8385   */\n      add\n        /* \"#utility.yul\":8358:8364   */\n      dup5\n        /* \"#utility.yul\":8314:8386   */\n      tag_240\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7951:8393   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8399:8579   */\n    tag_251:\n        /* \"#utility.yul\":8447:8524   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8444:8445   */\n      0x00\n        /* \"#utility.yul\":8437:8525   */\n      mstore\n        /* \"#utility.yul\":8544:8548   */\n      0x11\n        /* \"#utility.yul\":8541:8542   */\n      0x04\n        /* \"#utility.yul\":8534:8549   */\n      mstore\n        /* \"#utility.yul\":8568:8572   */\n      0x24\n        /* \"#utility.yul\":8565:8566   */\n      0x00\n        /* \"#utility.yul\":8558:8573   */\n      revert\n        /* \"#utility.yul\":8585:8776   */\n    tag_216:\n        /* \"#utility.yul\":8625:8628   */\n      0x00\n        /* \"#utility.yul\":8644:8664   */\n      tag_352\n        /* \"#utility.yul\":8662:8663   */\n      dup3\n        /* \"#utility.yul\":8644:8664   */\n      tag_235\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8639:8664   */\n      swap2\n      pop\n        /* \"#utility.yul\":8678:8698   */\n      tag_353\n        /* \"#utility.yul\":8696:8697   */\n      dup4\n        /* \"#utility.yul\":8678:8698   */\n      tag_235\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8673:8698   */\n      swap3\n      pop\n        /* \"#utility.yul\":8721:8722   */\n      dup3\n        /* \"#utility.yul\":8718:8719   */\n      dup3\n        /* \"#utility.yul\":8714:8723   */\n      add\n        /* \"#utility.yul\":8707:8723   */\n      swap1\n      pop\n        /* \"#utility.yul\":8742:8745   */\n      dup1\n        /* \"#utility.yul\":8739:8740   */\n      dup3\n        /* \"#utility.yul\":8736:8746   */\n      gt\n        /* \"#utility.yul\":8733:8769   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":8749:8767   */\n      tag_355\n      tag_251\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8733:8769   */\n    tag_354:\n        /* \"#utility.yul\":8585:8776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a15bae5ca20999aa5bcd757f34cb93679edb360517cec54ec4f834c619b1ad164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1188": {
									"entryPoint": null,
									"id": 1188,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 728,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint256t_uint256t_uint256t_bool_fromMemory": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11010:8",
										"nodeType": "YulBlock",
										"src": "0:11010:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "423:28:8",
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:12:8",
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nativeSrc": "433:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nativeSrc": "546:28:8",
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nativeSrc": "556:12:8",
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nativeSrc": "556:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nativeSrc": "628:54:8",
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nativeSrc": "638:38:8",
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:8",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nativeSrc": "652:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:8",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nativeSrc": "668:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nativeSrc": "648:28:8",
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:8",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:8",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nativeSrc": "716:152:8",
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:8",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:8",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nativeSrc": "726:88:8",
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nativeSrc": "726:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:8",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:8",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nativeSrc": "823:15:8",
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nativeSrc": "823:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nativeSrc": "847:15:8",
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nativeSrc": "847:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nativeSrc": "917:238:8",
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nativeSrc": "927:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nativeSrc": "957:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nativeSrc": "945:40:8",
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:8",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:8",
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nativeSrc": "1098:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nativeSrc": "1098:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nativeSrc": "1036:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nativeSrc": "1072:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nativeSrc": "1033:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nativeSrc": "1030:88:8",
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nativeSrc": "1127:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nativeSrc": "1127:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:8",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:8",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nativeSrc": "1202:88:8",
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nativeSrc": "1212:30:8",
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nativeSrc": "1222:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nativeSrc": "1251:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nativeSrc": "1251:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:8",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:8",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nativeSrc": "1363:241:8",
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:8",
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nativeSrc": "1470:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nativeSrc": "1470:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nativeSrc": "1437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nativeSrc": "1434:56:8",
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nativeSrc": "1500:37:8",
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nativeSrc": "1508:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nativeSrc": "1574:23:8",
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nativeSrc": "1582:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:8",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:8",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nativeSrc": "1672:184:8",
													"nodeType": "YulBlock",
													"src": "1672:184:8",
													"statements": [
														{
															"nativeSrc": "1682:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:8",
																"nodeType": "YulLiteral",
																"src": "1691:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:8",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:8",
																"nodeType": "YulBlock",
																"src": "1751:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:8"
																					},
																					"nativeSrc": "1772:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:8"
																							},
																							"nativeSrc": "1791:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:8"
																					},
																					"nativeSrc": "1785:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:8"
																			},
																			"nativeSrc": "1765:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:8"
																		},
																		"nativeSrc": "1765:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:8"
																},
																"nativeSrc": "1709:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:8"
															},
															"nativeSrc": "1701:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:8",
																"nodeType": "YulBlock",
																"src": "1723:19:8",
																"statements": [
																	{
																		"nativeSrc": "1725:15:8",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:8",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:8"
																			},
																			"nativeSrc": "1730:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:8",
																"nodeType": "YulBlock",
																"src": "1705:3:8",
																"statements": []
															},
															"src": "1701:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:8"
																		},
																		"nativeSrc": "1830:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:8"
																},
																"nativeSrc": "1823:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:8"
															},
															"nativeSrc": "1823:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:8",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:8",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:8",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:246:8"
											},
											{
												"body": {
													"nativeSrc": "1957:339:8",
													"nodeType": "YulBlock",
													"src": "1957:339:8",
													"statements": [
														{
															"nativeSrc": "1967:75:8",
															"nodeType": "YulAssignment",
															"src": "1967:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:8"
																		},
																		"nativeSrc": "1992:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:8"
																},
																"nativeSrc": "1976:66:8",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:8"
																},
																"nativeSrc": "2051:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:8"
															},
															"nativeSrc": "2051:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:8"
														},
														{
															"nativeSrc": "2081:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:8"
																},
																"nativeSrc": "2092:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:8",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:8",
																"nodeType": "YulBlock",
																"src": "2146:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:8"
																			},
																			"nativeSrc": "2148:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:8"
																		},
																		"nativeSrc": "2148:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:8"
																		},
																		"nativeSrc": "2123:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:8"
																},
																"nativeSrc": "2120:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:8"
															},
															"nativeSrc": "2117:112:8",
															"nodeType": "YulIf",
															"src": "2117:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:8"
																},
																"nativeSrc": "2238:52:8",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:8"
															},
															"nativeSrc": "2238:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:8",
														"nodeType": "YulTypedName",
														"src": "1930:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:8",
														"nodeType": "YulTypedName",
														"src": "1935:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:8",
														"nodeType": "YulTypedName",
														"src": "1943:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:8",
														"nodeType": "YulTypedName",
														"src": "1951:5:8",
														"type": ""
													}
												],
												"src": "1862:434:8"
											},
											{
												"body": {
													"nativeSrc": "2389:282:8",
													"nodeType": "YulBlock",
													"src": "2389:282:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:8",
																"nodeType": "YulBlock",
																"src": "2438:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:8"
																			},
																			"nativeSrc": "2440:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:8"
																		},
																		"nativeSrc": "2440:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:8"
																				},
																				"nativeSrc": "2413:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:8"
																		},
																		"nativeSrc": "2409:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:8"
																},
																"nativeSrc": "2402:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:8"
															},
															"nativeSrc": "2399:122:8",
															"nodeType": "YulIf",
															"src": "2399:122:8"
														},
														{
															"nativeSrc": "2530:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:8"
																},
																"nativeSrc": "2544:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:8",
															"nodeType": "YulAssignment",
															"src": "2566:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:8"
																		},
																		"nativeSrc": "2634:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:8"
																},
																"nativeSrc": "2575:90:8",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:8",
														"nodeType": "YulTypedName",
														"src": "2367:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:8",
														"nodeType": "YulTypedName",
														"src": "2375:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:8",
														"nodeType": "YulTypedName",
														"src": "2383:5:8",
														"type": ""
													}
												],
												"src": "2316:355:8"
											},
											{
												"body": {
													"nativeSrc": "2722:81:8",
													"nodeType": "YulBlock",
													"src": "2722:81:8",
													"statements": [
														{
															"nativeSrc": "2732:65:8",
															"nodeType": "YulAssignment",
															"src": "2732:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2747:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2747:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2754:42:8",
																		"nodeType": "YulLiteral",
																		"src": "2754:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2743:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2743:3:8"
																},
																"nativeSrc": "2743:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2743:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2677:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:8",
														"nodeType": "YulTypedName",
														"src": "2704:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:8",
														"nodeType": "YulTypedName",
														"src": "2714:7:8",
														"type": ""
													}
												],
												"src": "2677:126:8"
											},
											{
												"body": {
													"nativeSrc": "2854:51:8",
													"nodeType": "YulBlock",
													"src": "2854:51:8",
													"statements": [
														{
															"nativeSrc": "2864:35:8",
															"nodeType": "YulAssignment",
															"src": "2864:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2893:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2893:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2875:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2875:17:8"
																},
																"nativeSrc": "2875:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2875:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2864:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2864:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2809:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2836:5:8",
														"nodeType": "YulTypedName",
														"src": "2836:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2846:7:8",
														"nodeType": "YulTypedName",
														"src": "2846:7:8",
														"type": ""
													}
												],
												"src": "2809:96:8"
											},
											{
												"body": {
													"nativeSrc": "2954:79:8",
													"nodeType": "YulBlock",
													"src": "2954:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3011:16:8",
																"nodeType": "YulBlock",
																"src": "3011:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3020:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3020:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3013:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3013:6:8"
																			},
																			"nativeSrc": "3013:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3013:12:8"
																		},
																		"nativeSrc": "3013:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2977:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2977:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3002:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3002:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2984:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2984:17:8"
																				},
																				"nativeSrc": "2984:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2974:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2974:2:8"
																		},
																		"nativeSrc": "2974:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2974:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:8"
																},
																"nativeSrc": "2967:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2967:43:8"
															},
															"nativeSrc": "2964:63:8",
															"nodeType": "YulIf",
															"src": "2964:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2911:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2947:5:8",
														"nodeType": "YulTypedName",
														"src": "2947:5:8",
														"type": ""
													}
												],
												"src": "2911:122:8"
											},
											{
												"body": {
													"nativeSrc": "3102:80:8",
													"nodeType": "YulBlock",
													"src": "3102:80:8",
													"statements": [
														{
															"nativeSrc": "3112:22:8",
															"nodeType": "YulAssignment",
															"src": "3112:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3127:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3127:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3121:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3121:5:8"
																},
																"nativeSrc": "3121:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3121:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3112:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3112:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3170:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3170:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3143:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3143:26:8"
																},
																"nativeSrc": "3143:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3143:33:8"
															},
															"nativeSrc": "3143:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3143:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3039:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3080:6:8",
														"nodeType": "YulTypedName",
														"src": "3080:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3088:3:8",
														"nodeType": "YulTypedName",
														"src": "3088:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3096:5:8",
														"nodeType": "YulTypedName",
														"src": "3096:5:8",
														"type": ""
													}
												],
												"src": "3039:143:8"
											},
											{
												"body": {
													"nativeSrc": "3233:32:8",
													"nodeType": "YulBlock",
													"src": "3233:32:8",
													"statements": [
														{
															"nativeSrc": "3243:16:8",
															"nodeType": "YulAssignment",
															"src": "3243:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "3254:5:8",
																"nodeType": "YulIdentifier",
																"src": "3254:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3243:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3243:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3188:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3215:5:8",
														"nodeType": "YulTypedName",
														"src": "3215:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3225:7:8",
														"nodeType": "YulTypedName",
														"src": "3225:7:8",
														"type": ""
													}
												],
												"src": "3188:77:8"
											},
											{
												"body": {
													"nativeSrc": "3314:79:8",
													"nodeType": "YulBlock",
													"src": "3314:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3371:16:8",
																"nodeType": "YulBlock",
																"src": "3371:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3380:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3380:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3383:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3383:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3373:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3373:6:8"
																			},
																			"nativeSrc": "3373:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3373:12:8"
																		},
																		"nativeSrc": "3373:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3337:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3337:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3362:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3362:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3344:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3344:17:8"
																				},
																				"nativeSrc": "3344:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3344:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3334:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3334:2:8"
																		},
																		"nativeSrc": "3334:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:8"
																},
																"nativeSrc": "3327:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3327:43:8"
															},
															"nativeSrc": "3324:63:8",
															"nodeType": "YulIf",
															"src": "3324:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3271:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3307:5:8",
														"nodeType": "YulTypedName",
														"src": "3307:5:8",
														"type": ""
													}
												],
												"src": "3271:122:8"
											},
											{
												"body": {
													"nativeSrc": "3462:80:8",
													"nodeType": "YulBlock",
													"src": "3462:80:8",
													"statements": [
														{
															"nativeSrc": "3472:22:8",
															"nodeType": "YulAssignment",
															"src": "3472:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3487:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3481:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:8"
																},
																"nativeSrc": "3481:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3481:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3472:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3530:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3530:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3503:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3503:26:8"
																},
																"nativeSrc": "3503:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3503:33:8"
															},
															"nativeSrc": "3503:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3503:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3399:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3440:6:8",
														"nodeType": "YulTypedName",
														"src": "3440:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3448:3:8",
														"nodeType": "YulTypedName",
														"src": "3448:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3456:5:8",
														"nodeType": "YulTypedName",
														"src": "3456:5:8",
														"type": ""
													}
												],
												"src": "3399:143:8"
											},
											{
												"body": {
													"nativeSrc": "3590:48:8",
													"nodeType": "YulBlock",
													"src": "3590:48:8",
													"statements": [
														{
															"nativeSrc": "3600:32:8",
															"nodeType": "YulAssignment",
															"src": "3600:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3625:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3625:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3618:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3618:6:8"
																		},
																		"nativeSrc": "3618:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3618:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3611:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:8"
																},
																"nativeSrc": "3611:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3611:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3600:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3600:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3548:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3572:5:8",
														"nodeType": "YulTypedName",
														"src": "3572:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3582:7:8",
														"nodeType": "YulTypedName",
														"src": "3582:7:8",
														"type": ""
													}
												],
												"src": "3548:90:8"
											},
											{
												"body": {
													"nativeSrc": "3684:76:8",
													"nodeType": "YulBlock",
													"src": "3684:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3738:16:8",
																"nodeType": "YulBlock",
																"src": "3738:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3747:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3747:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3750:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3750:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3740:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:8"
																			},
																			"nativeSrc": "3740:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3740:12:8"
																		},
																		"nativeSrc": "3740:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3707:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3707:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3729:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3729:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3714:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "3714:14:8"
																				},
																				"nativeSrc": "3714:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3714:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3704:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3704:2:8"
																		},
																		"nativeSrc": "3704:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3704:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3697:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:8"
																},
																"nativeSrc": "3697:40:8",
																"nodeType": "YulFunctionCall",
																"src": "3697:40:8"
															},
															"nativeSrc": "3694:60:8",
															"nodeType": "YulIf",
															"src": "3694:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3644:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3677:5:8",
														"nodeType": "YulTypedName",
														"src": "3677:5:8",
														"type": ""
													}
												],
												"src": "3644:116:8"
											},
											{
												"body": {
													"nativeSrc": "3826:77:8",
													"nodeType": "YulBlock",
													"src": "3826:77:8",
													"statements": [
														{
															"nativeSrc": "3836:22:8",
															"nodeType": "YulAssignment",
															"src": "3836:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3851:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3851:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3845:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3845:5:8"
																},
																"nativeSrc": "3845:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3845:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3836:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3836:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3891:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3891:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3867:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "3867:23:8"
																},
																"nativeSrc": "3867:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3867:30:8"
															},
															"nativeSrc": "3867:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3867:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3766:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3804:6:8",
														"nodeType": "YulTypedName",
														"src": "3804:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3812:3:8",
														"nodeType": "YulTypedName",
														"src": "3812:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3820:5:8",
														"nodeType": "YulTypedName",
														"src": "3820:5:8",
														"type": ""
													}
												],
												"src": "3766:137:8"
											},
											{
												"body": {
													"nativeSrc": "4122:1575:8",
													"nodeType": "YulBlock",
													"src": "4122:1575:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4169:83:8",
																"nodeType": "YulBlock",
																"src": "4169:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4171:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4171:77:8"
																			},
																			"nativeSrc": "4171:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4171:79:8"
																		},
																		"nativeSrc": "4171:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4171:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4143:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4143:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4152:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4152:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4139:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:8"
																		},
																		"nativeSrc": "4139:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4164:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4164:3:8",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:8"
																},
																"nativeSrc": "4135:33:8",
																"nodeType": "YulFunctionCall",
																"src": "4135:33:8"
															},
															"nativeSrc": "4132:120:8",
															"nodeType": "YulIf",
															"src": "4132:120:8"
														},
														{
															"nativeSrc": "4262:291:8",
															"nodeType": "YulBlock",
															"src": "4262:291:8",
															"statements": [
																{
																	"nativeSrc": "4277:38:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4277:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4301:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4301:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4312:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4312:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4297:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4297:3:8"
																				},
																				"nativeSrc": "4297:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4297:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4291:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4291:5:8"
																		},
																		"nativeSrc": "4291:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4291:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4281:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4281:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4362:83:8",
																		"nodeType": "YulBlock",
																		"src": "4362:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4364:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "4364:77:8"
																					},
																					"nativeSrc": "4364:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4364:79:8"
																				},
																				"nativeSrc": "4364:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4364:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4334:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4334:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4342:18:8",
																				"nodeType": "YulLiteral",
																				"src": "4342:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4331:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4331:2:8"
																		},
																		"nativeSrc": "4331:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:30:8"
																	},
																	"nativeSrc": "4328:117:8",
																	"nodeType": "YulIf",
																	"src": "4328:117:8"
																},
																{
																	"nativeSrc": "4459:84:8",
																	"nodeType": "YulAssignment",
																	"src": "4459:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4515:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4515:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4526:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4526:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4511:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4511:3:8"
																				},
																				"nativeSrc": "4511:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4511:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4535:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4535:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4469:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "4469:41:8"
																		},
																		"nativeSrc": "4469:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4469:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4459:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4459:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4563:292:8",
															"nodeType": "YulBlock",
															"src": "4563:292:8",
															"statements": [
																{
																	"nativeSrc": "4578:39:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4578:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4602:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4602:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4613:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4613:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4598:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4598:3:8"
																				},
																				"nativeSrc": "4598:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4598:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4592:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4592:5:8"
																		},
																		"nativeSrc": "4592:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4582:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4582:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4664:83:8",
																		"nodeType": "YulBlock",
																		"src": "4664:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4666:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "4666:77:8"
																					},
																					"nativeSrc": "4666:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4666:79:8"
																				},
																				"nativeSrc": "4666:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4666:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4636:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4636:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4644:18:8",
																				"nodeType": "YulLiteral",
																				"src": "4644:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4633:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4633:2:8"
																		},
																		"nativeSrc": "4633:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4633:30:8"
																	},
																	"nativeSrc": "4630:117:8",
																	"nodeType": "YulIf",
																	"src": "4630:117:8"
																},
																{
																	"nativeSrc": "4761:84:8",
																	"nodeType": "YulAssignment",
																	"src": "4761:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4817:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4817:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4828:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4828:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4813:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4813:3:8"
																				},
																				"nativeSrc": "4813:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4813:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4837:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4837:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4771:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "4771:41:8"
																		},
																		"nativeSrc": "4771:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4761:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4761:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4865:129:8",
															"nodeType": "YulBlock",
															"src": "4865:129:8",
															"statements": [
																{
																	"nativeSrc": "4880:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4880:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4894:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4894:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4884:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4884:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4910:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4910:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4956:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4956:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4967:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4967:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4952:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4952:3:8"
																				},
																				"nativeSrc": "4952:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4952:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4976:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4976:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4920:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4920:31:8"
																		},
																		"nativeSrc": "4920:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4920:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4910:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4910:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5004:129:8",
															"nodeType": "YulBlock",
															"src": "5004:129:8",
															"statements": [
																{
																	"nativeSrc": "5019:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5019:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5033:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5033:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5023:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5023:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5049:74:8",
																	"nodeType": "YulAssignment",
																	"src": "5049:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5095:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5095:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5106:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5106:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5091:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5091:3:8"
																				},
																				"nativeSrc": "5091:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5091:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5115:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5115:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5059:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "5059:31:8"
																		},
																		"nativeSrc": "5059:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5049:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5049:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5143:130:8",
															"nodeType": "YulBlock",
															"src": "5143:130:8",
															"statements": [
																{
																	"nativeSrc": "5158:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5158:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5172:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5172:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5162:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5162:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5189:74:8",
																	"nodeType": "YulAssignment",
																	"src": "5189:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5235:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5235:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5246:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5246:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5231:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5231:3:8"
																				},
																				"nativeSrc": "5231:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5231:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5255:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5255:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5199:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "5199:31:8"
																		},
																		"nativeSrc": "5199:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5199:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5189:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5189:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5283:130:8",
															"nodeType": "YulBlock",
															"src": "5283:130:8",
															"statements": [
																{
																	"nativeSrc": "5298:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5298:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5312:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5312:3:8",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5302:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5302:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5329:74:8",
																	"nodeType": "YulAssignment",
																	"src": "5329:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5375:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5375:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5386:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5386:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5371:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5371:3:8"
																				},
																				"nativeSrc": "5371:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5371:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5395:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5395:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5339:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "5339:31:8"
																		},
																		"nativeSrc": "5339:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5329:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5329:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5423:130:8",
															"nodeType": "YulBlock",
															"src": "5423:130:8",
															"statements": [
																{
																	"nativeSrc": "5438:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5438:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5452:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5452:3:8",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5442:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5442:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5469:74:8",
																	"nodeType": "YulAssignment",
																	"src": "5469:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5515:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5526:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5526:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5511:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:8"
																				},
																				"nativeSrc": "5511:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5511:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5535:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5535:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5479:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "5479:31:8"
																		},
																		"nativeSrc": "5479:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5479:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "5469:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5469:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5563:127:8",
															"nodeType": "YulBlock",
															"src": "5563:127:8",
															"statements": [
																{
																	"nativeSrc": "5578:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5578:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5592:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5592:3:8",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5582:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5582:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5609:71:8",
																	"nodeType": "YulAssignment",
																	"src": "5609:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5652:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5652:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5663:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5663:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5648:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5648:3:8"
																				},
																				"nativeSrc": "5648:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5648:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5672:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5672:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5619:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5619:28:8"
																		},
																		"nativeSrc": "5619:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "5609:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5609:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint256t_uint256t_uint256t_bool_fromMemory",
												"nativeSrc": "3909:1788:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4036:9:8",
														"nodeType": "YulTypedName",
														"src": "4036:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4047:7:8",
														"nodeType": "YulTypedName",
														"src": "4047:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4059:6:8",
														"nodeType": "YulTypedName",
														"src": "4059:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4067:6:8",
														"nodeType": "YulTypedName",
														"src": "4067:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4075:6:8",
														"nodeType": "YulTypedName",
														"src": "4075:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4083:6:8",
														"nodeType": "YulTypedName",
														"src": "4083:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4091:6:8",
														"nodeType": "YulTypedName",
														"src": "4091:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4099:6:8",
														"nodeType": "YulTypedName",
														"src": "4099:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4107:6:8",
														"nodeType": "YulTypedName",
														"src": "4107:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4115:6:8",
														"nodeType": "YulTypedName",
														"src": "4115:6:8",
														"type": ""
													}
												],
												"src": "3909:1788:8"
											},
											{
												"body": {
													"nativeSrc": "5762:40:8",
													"nodeType": "YulBlock",
													"src": "5762:40:8",
													"statements": [
														{
															"nativeSrc": "5773:22:8",
															"nodeType": "YulAssignment",
															"src": "5773:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5789:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5789:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5783:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5783:5:8"
																},
																"nativeSrc": "5783:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5783:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5703:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5745:5:8",
														"nodeType": "YulTypedName",
														"src": "5745:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5755:6:8",
														"nodeType": "YulTypedName",
														"src": "5755:6:8",
														"type": ""
													}
												],
												"src": "5703:99:8"
											},
											{
												"body": {
													"nativeSrc": "5836:152:8",
													"nodeType": "YulBlock",
													"src": "5836:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5853:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5853:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5856:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5856:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5846:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5846:6:8"
																},
																"nativeSrc": "5846:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5846:88:8"
															},
															"nativeSrc": "5846:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5846:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5950:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5950:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5953:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5953:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5943:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5943:6:8"
																},
																"nativeSrc": "5943:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5943:15:8"
															},
															"nativeSrc": "5943:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5943:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5974:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5974:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5977:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5977:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5967:6:8"
																},
																"nativeSrc": "5967:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5967:15:8"
															},
															"nativeSrc": "5967:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5967:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5808:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5808:180:8"
											},
											{
												"body": {
													"nativeSrc": "6045:269:8",
													"nodeType": "YulBlock",
													"src": "6045:269:8",
													"statements": [
														{
															"nativeSrc": "6055:22:8",
															"nodeType": "YulAssignment",
															"src": "6055:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6069:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6069:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6075:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6075:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6065:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:8"
																},
																"nativeSrc": "6065:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6065:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6055:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:8"
																}
															]
														},
														{
															"nativeSrc": "6086:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6086:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6116:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6116:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6122:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6122:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6112:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:8"
																},
																"nativeSrc": "6112:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6112:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6090:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6090:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6163:51:8",
																"nodeType": "YulBlock",
																"src": "6163:51:8",
																"statements": [
																	{
																		"nativeSrc": "6177:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6177:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6191:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6191:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6199:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6199:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6187:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6187:3:8"
																			},
																			"nativeSrc": "6187:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6187:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6177:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6177:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6143:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6143:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6136:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:8"
																},
																"nativeSrc": "6136:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6136:26:8"
															},
															"nativeSrc": "6133:81:8",
															"nodeType": "YulIf",
															"src": "6133:81:8"
														},
														{
															"body": {
																"nativeSrc": "6266:42:8",
																"nodeType": "YulBlock",
																"src": "6266:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6280:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6280:16:8"
																			},
																			"nativeSrc": "6280:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6280:18:8"
																		},
																		"nativeSrc": "6280:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6280:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6230:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6230:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6253:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6253:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6261:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6261:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6250:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6250:2:8"
																		},
																		"nativeSrc": "6250:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6250:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6227:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6227:2:8"
																},
																"nativeSrc": "6227:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6227:38:8"
															},
															"nativeSrc": "6224:84:8",
															"nodeType": "YulIf",
															"src": "6224:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5994:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6029:4:8",
														"nodeType": "YulTypedName",
														"src": "6029:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6038:6:8",
														"nodeType": "YulTypedName",
														"src": "6038:6:8",
														"type": ""
													}
												],
												"src": "5994:320:8"
											},
											{
												"body": {
													"nativeSrc": "6374:87:8",
													"nodeType": "YulBlock",
													"src": "6374:87:8",
													"statements": [
														{
															"nativeSrc": "6384:11:8",
															"nodeType": "YulAssignment",
															"src": "6384:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "6392:3:8",
																"nodeType": "YulIdentifier",
																"src": "6392:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6384:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6384:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6412:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6412:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6415:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6415:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6405:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:8"
																},
																"nativeSrc": "6405:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6405:14:8"
															},
															"nativeSrc": "6405:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "6405:14:8"
														},
														{
															"nativeSrc": "6428:26:8",
															"nodeType": "YulAssignment",
															"src": "6428:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6446:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6446:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6449:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6449:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6436:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6436:9:8"
																},
																"nativeSrc": "6436:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6436:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6428:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6428:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "6320:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6361:3:8",
														"nodeType": "YulTypedName",
														"src": "6361:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6369:4:8",
														"nodeType": "YulTypedName",
														"src": "6369:4:8",
														"type": ""
													}
												],
												"src": "6320:141:8"
											},
											{
												"body": {
													"nativeSrc": "6511:49:8",
													"nodeType": "YulBlock",
													"src": "6511:49:8",
													"statements": [
														{
															"nativeSrc": "6521:33:8",
															"nodeType": "YulAssignment",
															"src": "6521:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6539:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6539:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6546:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6546:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6535:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:8"
																		},
																		"nativeSrc": "6535:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6535:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6551:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6551:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6531:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6531:3:8"
																},
																"nativeSrc": "6531:23:8",
																"nodeType": "YulFunctionCall",
																"src": "6531:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6521:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "6467:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6494:5:8",
														"nodeType": "YulTypedName",
														"src": "6494:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6504:6:8",
														"nodeType": "YulTypedName",
														"src": "6504:6:8",
														"type": ""
													}
												],
												"src": "6467:93:8"
											},
											{
												"body": {
													"nativeSrc": "6619:54:8",
													"nodeType": "YulBlock",
													"src": "6619:54:8",
													"statements": [
														{
															"nativeSrc": "6629:37:8",
															"nodeType": "YulAssignment",
															"src": "6629:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6654:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6654:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6660:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6660:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6650:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6650:3:8"
																},
																"nativeSrc": "6650:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6650:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6629:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6629:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "6566:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6594:4:8",
														"nodeType": "YulTypedName",
														"src": "6594:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6600:5:8",
														"nodeType": "YulTypedName",
														"src": "6600:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6610:8:8",
														"nodeType": "YulTypedName",
														"src": "6610:8:8",
														"type": ""
													}
												],
												"src": "6566:107:8"
											},
											{
												"body": {
													"nativeSrc": "6755:317:8",
													"nodeType": "YulBlock",
													"src": "6755:317:8",
													"statements": [
														{
															"nativeSrc": "6765:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6765:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6786:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "6786:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6798:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6782:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:8"
																},
																"nativeSrc": "6782:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6782:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6769:9:8",
																	"nodeType": "YulTypedName",
																	"src": "6769:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6809:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6809:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6840:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6840:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6851:66:8",
																		"nodeType": "YulLiteral",
																		"src": "6851:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6821:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6821:18:8"
																},
																"nativeSrc": "6821:97:8",
																"nodeType": "YulFunctionCall",
																"src": "6821:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6813:4:8",
																	"nodeType": "YulTypedName",
																	"src": "6813:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6927:51:8",
															"nodeType": "YulAssignment",
															"src": "6927:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6958:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6958:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6969:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "6969:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6939:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6939:18:8"
																},
																"nativeSrc": "6939:39:8",
																"nodeType": "YulFunctionCall",
																"src": "6939:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6927:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6927:8:8"
																}
															]
														},
														{
															"nativeSrc": "6987:30:8",
															"nodeType": "YulAssignment",
															"src": "6987:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7000:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7000:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "7011:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7011:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7007:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:8"
																		},
																		"nativeSrc": "7007:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7007:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6996:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6996:3:8"
																},
																"nativeSrc": "6996:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6996:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6987:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6987:5:8"
																}
															]
														},
														{
															"nativeSrc": "7026:40:8",
															"nodeType": "YulAssignment",
															"src": "7026:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7039:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7039:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "7050:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "7050:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "7060:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7060:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:8"
																		},
																		"nativeSrc": "7046:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7036:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7036:2:8"
																},
																"nativeSrc": "7036:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7036:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7026:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6679:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6716:5:8",
														"nodeType": "YulTypedName",
														"src": "6716:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6723:10:8",
														"nodeType": "YulTypedName",
														"src": "6723:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6735:8:8",
														"nodeType": "YulTypedName",
														"src": "6735:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6748:6:8",
														"nodeType": "YulTypedName",
														"src": "6748:6:8",
														"type": ""
													}
												],
												"src": "6679:393:8"
											},
											{
												"body": {
													"nativeSrc": "7110:28:8",
													"nodeType": "YulBlock",
													"src": "7110:28:8",
													"statements": [
														{
															"nativeSrc": "7120:12:8",
															"nodeType": "YulAssignment",
															"src": "7120:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "7127:5:8",
																"nodeType": "YulIdentifier",
																"src": "7127:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7120:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7120:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7078:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7096:5:8",
														"nodeType": "YulTypedName",
														"src": "7096:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7106:3:8",
														"nodeType": "YulTypedName",
														"src": "7106:3:8",
														"type": ""
													}
												],
												"src": "7078:60:8"
											},
											{
												"body": {
													"nativeSrc": "7204:82:8",
													"nodeType": "YulBlock",
													"src": "7204:82:8",
													"statements": [
														{
															"nativeSrc": "7214:66:8",
															"nodeType": "YulAssignment",
															"src": "7214:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7272:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7272:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7254:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "7254:17:8"
																				},
																				"nativeSrc": "7254:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7254:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7245:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "7245:8:8"
																		},
																		"nativeSrc": "7245:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7227:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7227:17:8"
																},
																"nativeSrc": "7227:53:8",
																"nodeType": "YulFunctionCall",
																"src": "7227:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7214:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7214:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "7144:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7184:5:8",
														"nodeType": "YulTypedName",
														"src": "7184:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7194:9:8",
														"nodeType": "YulTypedName",
														"src": "7194:9:8",
														"type": ""
													}
												],
												"src": "7144:142:8"
											},
											{
												"body": {
													"nativeSrc": "7339:28:8",
													"nodeType": "YulBlock",
													"src": "7339:28:8",
													"statements": [
														{
															"nativeSrc": "7349:12:8",
															"nodeType": "YulAssignment",
															"src": "7349:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "7356:5:8",
																"nodeType": "YulIdentifier",
																"src": "7356:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7349:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "7292:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7325:5:8",
														"nodeType": "YulTypedName",
														"src": "7325:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7335:3:8",
														"nodeType": "YulTypedName",
														"src": "7335:3:8",
														"type": ""
													}
												],
												"src": "7292:75:8"
											},
											{
												"body": {
													"nativeSrc": "7449:193:8",
													"nodeType": "YulBlock",
													"src": "7449:193:8",
													"statements": [
														{
															"nativeSrc": "7459:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7459:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "7514:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "7514:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "7483:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7483:30:8"
																},
																"nativeSrc": "7483:39:8",
																"nodeType": "YulFunctionCall",
																"src": "7483:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "7463:16:8",
																	"nodeType": "YulTypedName",
																	"src": "7463:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7538:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7538:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7578:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "7578:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7572:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7572:5:8"
																				},
																				"nativeSrc": "7572:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7572:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7585:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7585:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "7617:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "7617:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "7593:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "7593:23:8"
																				},
																				"nativeSrc": "7593:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "7544:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "7544:27:8"
																		},
																		"nativeSrc": "7544:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7544:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "7531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:8"
																},
																"nativeSrc": "7531:105:8",
																"nodeType": "YulFunctionCall",
																"src": "7531:105:8"
															},
															"nativeSrc": "7531:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "7531:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "7373:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7426:4:8",
														"nodeType": "YulTypedName",
														"src": "7426:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7432:6:8",
														"nodeType": "YulTypedName",
														"src": "7432:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "7440:7:8",
														"nodeType": "YulTypedName",
														"src": "7440:7:8",
														"type": ""
													}
												],
												"src": "7373:269:8"
											},
											{
												"body": {
													"nativeSrc": "7697:24:8",
													"nodeType": "YulBlock",
													"src": "7697:24:8",
													"statements": [
														{
															"nativeSrc": "7707:8:8",
															"nodeType": "YulAssignment",
															"src": "7707:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7714:1:8",
																"nodeType": "YulLiteral",
																"src": "7714:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7707:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7707:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7648:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7693:3:8",
														"nodeType": "YulTypedName",
														"src": "7693:3:8",
														"type": ""
													}
												],
												"src": "7648:73:8"
											},
											{
												"body": {
													"nativeSrc": "7780:136:8",
													"nodeType": "YulBlock",
													"src": "7780:136:8",
													"statements": [
														{
															"nativeSrc": "7790:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7790:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7804:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7804:30:8"
																},
																"nativeSrc": "7804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7804:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7794:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7794:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7889:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7889:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7895:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7895:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7903:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7903:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7845:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7845:43:8"
																},
																"nativeSrc": "7845:65:8",
																"nodeType": "YulFunctionCall",
																"src": "7845:65:8"
															},
															"nativeSrc": "7845:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "7845:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7727:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7766:4:8",
														"nodeType": "YulTypedName",
														"src": "7766:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7772:6:8",
														"nodeType": "YulTypedName",
														"src": "7772:6:8",
														"type": ""
													}
												],
												"src": "7727:189:8"
											},
											{
												"body": {
													"nativeSrc": "7972:136:8",
													"nodeType": "YulBlock",
													"src": "7972:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8039:63:8",
																"nodeType": "YulBlock",
																"src": "8039:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8083:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8083:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8090:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8090:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "8053:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "8053:29:8"
																			},
																			"nativeSrc": "8053:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8053:39:8"
																		},
																		"nativeSrc": "8053:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8053:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7992:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7992:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7999:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7999:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7989:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7989:2:8"
																},
																"nativeSrc": "7989:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7989:14:8"
															},
															"nativeSrc": "7982:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8004:26:8",
																"nodeType": "YulBlock",
																"src": "8004:26:8",
																"statements": [
																	{
																		"nativeSrc": "8006:22:8",
																		"nodeType": "YulAssignment",
																		"src": "8006:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8019:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8019:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8026:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8026:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8015:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8015:3:8"
																			},
																			"nativeSrc": "8015:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8015:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "8006:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8006:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7986:2:8",
																"nodeType": "YulBlock",
																"src": "7986:2:8",
																"statements": []
															},
															"src": "7982:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7922:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7960:5:8",
														"nodeType": "YulTypedName",
														"src": "7960:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7967:3:8",
														"nodeType": "YulTypedName",
														"src": "7967:3:8",
														"type": ""
													}
												],
												"src": "7922:186:8"
											},
											{
												"body": {
													"nativeSrc": "8193:464:8",
													"nodeType": "YulBlock",
													"src": "8193:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8219:431:8",
																"nodeType": "YulBlock",
																"src": "8219:431:8",
																"statements": [
																	{
																		"nativeSrc": "8233:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8233:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "8281:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8281:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "8249:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "8249:31:8"
																			},
																			"nativeSrc": "8249:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8249:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "8237:8:8",
																				"nodeType": "YulTypedName",
																				"src": "8237:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8300:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8300:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "8323:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8323:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "8351:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "8351:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "8333:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "8333:17:8"
																					},
																					"nativeSrc": "8333:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8333:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8319:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8319:3:8"
																			},
																			"nativeSrc": "8319:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8319:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8304:11:8",
																				"nodeType": "YulTypedName",
																				"src": "8304:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8520:27:8",
																			"nodeType": "YulBlock",
																			"src": "8520:27:8",
																			"statements": [
																				{
																					"nativeSrc": "8522:23:8",
																					"nodeType": "YulAssignment",
																					"src": "8522:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "8537:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8537:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8522:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "8522:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8504:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "8504:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8516:2:8",
																					"nodeType": "YulLiteral",
																					"src": "8516:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8501:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8501:2:8"
																			},
																			"nativeSrc": "8501:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8501:18:8"
																		},
																		"nativeSrc": "8498:49:8",
																		"nodeType": "YulIf",
																		"src": "8498:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "8589:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "8589:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "8606:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8606:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8634:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8634:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "8616:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "8616:17:8"
																							},
																							"nativeSrc": "8616:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8616:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8602:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8602:3:8"
																					},
																					"nativeSrc": "8602:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8602:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "8560:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "8560:28:8"
																			},
																			"nativeSrc": "8560:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8560:80:8"
																		},
																		"nativeSrc": "8560:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8560:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8210:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8210:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8215:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8207:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8207:2:8"
																},
																"nativeSrc": "8207:11:8",
																"nodeType": "YulFunctionCall",
																"src": "8207:11:8"
															},
															"nativeSrc": "8204:446:8",
															"nodeType": "YulIf",
															"src": "8204:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "8114:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8169:5:8",
														"nodeType": "YulTypedName",
														"src": "8169:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8176:3:8",
														"nodeType": "YulTypedName",
														"src": "8176:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8181:10:8",
														"nodeType": "YulTypedName",
														"src": "8181:10:8",
														"type": ""
													}
												],
												"src": "8114:543:8"
											},
											{
												"body": {
													"nativeSrc": "8726:54:8",
													"nodeType": "YulBlock",
													"src": "8726:54:8",
													"statements": [
														{
															"nativeSrc": "8736:37:8",
															"nodeType": "YulAssignment",
															"src": "8736:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8761:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8761:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8767:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8767:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8757:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8757:3:8"
																},
																"nativeSrc": "8757:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8757:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8736:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8736:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8663:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8701:4:8",
														"nodeType": "YulTypedName",
														"src": "8701:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8707:5:8",
														"nodeType": "YulTypedName",
														"src": "8707:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8717:8:8",
														"nodeType": "YulTypedName",
														"src": "8717:8:8",
														"type": ""
													}
												],
												"src": "8663:117:8"
											},
											{
												"body": {
													"nativeSrc": "8837:118:8",
													"nodeType": "YulBlock",
													"src": "8837:118:8",
													"statements": [
														{
															"nativeSrc": "8847:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8847:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8896:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8896:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8899:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8899:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8892:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8892:3:8"
																				},
																				"nativeSrc": "8892:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8892:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8911:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8911:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8907:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8907:3:8"
																				},
																				"nativeSrc": "8907:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8907:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8863:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "8863:28:8"
																		},
																		"nativeSrc": "8863:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8863:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8859:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8859:3:8"
																},
																"nativeSrc": "8859:56:8",
																"nodeType": "YulFunctionCall",
																"src": "8859:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8851:4:8",
																	"nodeType": "YulTypedName",
																	"src": "8851:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8924:25:8",
															"nodeType": "YulAssignment",
															"src": "8924:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8938:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8938:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8944:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8944:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8934:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8934:3:8"
																},
																"nativeSrc": "8934:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8934:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8924:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8786:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8814:4:8",
														"nodeType": "YulTypedName",
														"src": "8814:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8820:5:8",
														"nodeType": "YulTypedName",
														"src": "8820:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8830:6:8",
														"nodeType": "YulTypedName",
														"src": "8830:6:8",
														"type": ""
													}
												],
												"src": "8786:169:8"
											},
											{
												"body": {
													"nativeSrc": "9041:214:8",
													"nodeType": "YulBlock",
													"src": "9041:214:8",
													"statements": [
														{
															"nativeSrc": "9174:37:8",
															"nodeType": "YulAssignment",
															"src": "9174:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9201:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9201:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "9207:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9207:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "9182:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "9182:18:8"
																},
																"nativeSrc": "9182:29:8",
																"nodeType": "YulFunctionCall",
																"src": "9182:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9174:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:8"
																}
															]
														},
														{
															"nativeSrc": "9220:29:8",
															"nodeType": "YulAssignment",
															"src": "9220:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9231:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9231:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9241:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9241:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9244:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9244:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9237:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:8"
																		},
																		"nativeSrc": "9237:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9237:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9228:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9228:2:8"
																},
																"nativeSrc": "9228:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9228:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9220:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9220:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8960:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9022:4:8",
														"nodeType": "YulTypedName",
														"src": "9022:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9028:3:8",
														"nodeType": "YulTypedName",
														"src": "9028:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9036:4:8",
														"nodeType": "YulTypedName",
														"src": "9036:4:8",
														"type": ""
													}
												],
												"src": "8960:295:8"
											},
											{
												"body": {
													"nativeSrc": "9352:1303:8",
													"nodeType": "YulBlock",
													"src": "9352:1303:8",
													"statements": [
														{
															"nativeSrc": "9363:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9363:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9410:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9410:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9377:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "9377:32:8"
																},
																"nativeSrc": "9377:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9377:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9367:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9367:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9499:22:8",
																"nodeType": "YulBlock",
																"src": "9499:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9501:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9501:16:8"
																			},
																			"nativeSrc": "9501:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9501:18:8"
																		},
																		"nativeSrc": "9501:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9501:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9471:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9471:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9479:18:8",
																		"nodeType": "YulLiteral",
																		"src": "9479:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9468:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9468:2:8"
																},
																"nativeSrc": "9468:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9468:30:8"
															},
															"nativeSrc": "9465:56:8",
															"nodeType": "YulIf",
															"src": "9465:56:8"
														},
														{
															"nativeSrc": "9531:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9531:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "9577:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9577:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "9571:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9571:5:8"
																		},
																		"nativeSrc": "9571:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9571:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "9545:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "9545:25:8"
																},
																"nativeSrc": "9545:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9545:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "9535:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9535:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9676:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9676:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9682:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9682:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9690:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9690:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9630:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "9630:45:8"
																},
																"nativeSrc": "9630:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9630:67:8"
															},
															"nativeSrc": "9630:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "9630:67:8"
														},
														{
															"nativeSrc": "9707:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9707:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "9724:1:8",
																"nodeType": "YulLiteral",
																"src": "9724:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9711:9:8",
																	"nodeType": "YulTypedName",
																	"src": "9711:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9735:17:8",
															"nodeType": "YulAssignment",
															"src": "9735:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "9748:4:8",
																"nodeType": "YulLiteral",
																"src": "9748:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9735:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "9735:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9799:611:8",
																		"nodeType": "YulBlock",
																		"src": "9799:611:8",
																		"statements": [
																			{
																				"nativeSrc": "9813:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9813:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9832:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "9832:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9844:4:8",
																									"nodeType": "YulLiteral",
																									"src": "9844:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9840:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "9840:3:8"
																							},
																							"nativeSrc": "9840:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9840:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9828:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9828:3:8"
																					},
																					"nativeSrc": "9828:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9828:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9817:7:8",
																						"nodeType": "YulTypedName",
																						"src": "9817:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9864:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9864:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9910:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9910:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9878:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "9878:31:8"
																					},
																					"nativeSrc": "9878:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9878:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9868:6:8",
																						"nodeType": "YulTypedName",
																						"src": "9868:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9928:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9928:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9937:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9937:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9932:1:8",
																						"nodeType": "YulTypedName",
																						"src": "9932:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9996:163:8",
																					"nodeType": "YulBlock",
																					"src": "9996:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10021:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "10021:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10039:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "10039:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10044:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "10044:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10035:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "10035:3:8"
																												},
																												"nativeSrc": "10035:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "10035:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10029:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "10029:5:8"
																										},
																										"nativeSrc": "10029:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10029:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10014:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10014:6:8"
																								},
																								"nativeSrc": "10014:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10014:42:8"
																							},
																							"nativeSrc": "10014:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10014:42:8"
																						},
																						{
																							"nativeSrc": "10073:24:8",
																							"nodeType": "YulAssignment",
																							"src": "10073:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10087:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "10087:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10095:1:8",
																										"nodeType": "YulLiteral",
																										"src": "10095:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10083:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "10083:3:8"
																								},
																								"nativeSrc": "10083:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10083:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10073:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10073:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10114:31:8",
																							"nodeType": "YulAssignment",
																							"src": "10114:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10131:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "10131:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10142:2:8",
																										"nodeType": "YulLiteral",
																										"src": "10142:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10127:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "10127:3:8"
																								},
																								"nativeSrc": "10127:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10127:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10114:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "10114:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9962:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "9962:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9965:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "9965:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9959:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9959:2:8"
																					},
																					"nativeSrc": "9959:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9959:14:8"
																				},
																				"nativeSrc": "9951:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9974:21:8",
																					"nodeType": "YulBlock",
																					"src": "9974:21:8",
																					"statements": [
																						{
																							"nativeSrc": "9976:17:8",
																							"nodeType": "YulAssignment",
																							"src": "9976:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9985:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "9985:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9988:4:8",
																										"nodeType": "YulLiteral",
																										"src": "9988:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9981:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9981:3:8"
																								},
																								"nativeSrc": "9981:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9981:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9976:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "9976:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9955:3:8",
																					"nodeType": "YulBlock",
																					"src": "9955:3:8",
																					"statements": []
																				},
																				"src": "9951:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "10195:156:8",
																					"nodeType": "YulBlock",
																					"src": "10195:156:8",
																					"statements": [
																						{
																							"nativeSrc": "10213:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10213:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10240:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "10240:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10245:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "10245:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10236:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "10236:3:8"
																										},
																										"nativeSrc": "10236:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10236:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10230:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10230:5:8"
																								},
																								"nativeSrc": "10230:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10230:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10217:9:8",
																									"nodeType": "YulTypedName",
																									"src": "10217:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10280:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "10280:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10307:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "10307:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "10322:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "10322:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "10330:4:8",
																														"nodeType": "YulLiteral",
																														"src": "10330:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "10318:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "10318:3:8"
																												},
																												"nativeSrc": "10318:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "10318:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "10288:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "10288:18:8"
																										},
																										"nativeSrc": "10288:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10288:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10273:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10273:6:8"
																								},
																								"nativeSrc": "10273:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10273:64:8"
																							},
																							"nativeSrc": "10273:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10273:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10178:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "10178:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10187:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "10187:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10175:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "10175:2:8"
																					},
																					"nativeSrc": "10175:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10175:19:8"
																				},
																				"nativeSrc": "10172:179:8",
																				"nodeType": "YulIf",
																				"src": "10172:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10371:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "10371:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "10385:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "10385:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "10393:1:8",
																											"nodeType": "YulLiteral",
																											"src": "10393:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "10381:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "10381:3:8"
																									},
																									"nativeSrc": "10381:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "10381:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10397:1:8",
																									"nodeType": "YulLiteral",
																									"src": "10397:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10377:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "10377:3:8"
																							},
																							"nativeSrc": "10377:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "10377:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10364:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10364:6:8"
																					},
																					"nativeSrc": "10364:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10364:36:8"
																				},
																				"nativeSrc": "10364:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "10364:36:8"
																			}
																		]
																	},
																	"nativeSrc": "9792:618:8",
																	"nodeType": "YulCase",
																	"src": "9792:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9797:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9797:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10427:222:8",
																		"nodeType": "YulBlock",
																		"src": "10427:222:8",
																		"statements": [
																			{
																				"nativeSrc": "10441:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10441:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10454:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10454:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10445:5:8",
																						"nodeType": "YulTypedName",
																						"src": "10445:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10478:67:8",
																					"nodeType": "YulBlock",
																					"src": "10478:67:8",
																					"statements": [
																						{
																							"nativeSrc": "10496:35:8",
																							"nodeType": "YulAssignment",
																							"src": "10496:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10515:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "10515:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10520:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "10520:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10511:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "10511:3:8"
																										},
																										"nativeSrc": "10511:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "10511:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10505:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10505:5:8"
																								},
																								"nativeSrc": "10505:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10505:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10496:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10496:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10471:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10471:6:8"
																				},
																				"nativeSrc": "10468:77:8",
																				"nodeType": "YulIf",
																				"src": "10468:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10565:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "10565:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10624:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "10624:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10631:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "10631:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10571:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "10571:52:8"
																							},
																							"nativeSrc": "10571:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "10571:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10558:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10558:6:8"
																					},
																					"nativeSrc": "10558:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10558:81:8"
																				},
																				"nativeSrc": "10558:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "10558:81:8"
																			}
																		]
																	},
																	"nativeSrc": "10419:230:8",
																	"nodeType": "YulCase",
																	"src": "10419:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9772:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9772:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9780:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9780:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9769:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9769:2:8"
																},
																"nativeSrc": "9769:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9769:14:8"
															},
															"nativeSrc": "9762:887:8",
															"nodeType": "YulSwitch",
															"src": "9762:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9260:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9341:4:8",
														"nodeType": "YulTypedName",
														"src": "9341:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9347:3:8",
														"nodeType": "YulTypedName",
														"src": "9347:3:8",
														"type": ""
													}
												],
												"src": "9260:1395:8"
											},
											{
												"body": {
													"nativeSrc": "10726:53:8",
													"nodeType": "YulBlock",
													"src": "10726:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10743:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10743:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10766:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10766:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10748:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10748:17:8"
																		},
																		"nativeSrc": "10748:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10748:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10736:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:8"
																},
																"nativeSrc": "10736:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10736:37:8"
															},
															"nativeSrc": "10736:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10736:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10661:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10714:5:8",
														"nodeType": "YulTypedName",
														"src": "10714:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10721:3:8",
														"nodeType": "YulTypedName",
														"src": "10721:3:8",
														"type": ""
													}
												],
												"src": "10661:118:8"
											},
											{
												"body": {
													"nativeSrc": "10883:124:8",
													"nodeType": "YulBlock",
													"src": "10883:124:8",
													"statements": [
														{
															"nativeSrc": "10893:26:8",
															"nodeType": "YulAssignment",
															"src": "10893:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10905:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10905:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10916:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10901:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10901:3:8"
																},
																"nativeSrc": "10901:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10901:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10893:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10893:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10973:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10986:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10986:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10997:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10997:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10982:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10982:3:8"
																		},
																		"nativeSrc": "10982:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10982:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10929:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10929:43:8"
																},
																"nativeSrc": "10929:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10929:71:8"
															},
															"nativeSrc": "10929:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10929:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10785:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10855:9:8",
														"nodeType": "YulTypedName",
														"src": "10855:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10867:6:8",
														"nodeType": "YulTypedName",
														"src": "10867:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10878:4:8",
														"nodeType": "YulTypedName",
														"src": "10878:4:8",
														"type": ""
													}
												],
												"src": "10785:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint256t_uint256t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002040380380620020408339818101604052810190620000369190620005f3565b33888881600390816200004a919062000923565b5080600490816200005c919062000923565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c9919062000a18565b60405180910390fd5b620000e381620002d860201b60201c565b5060016006819055505f820362000126576040517f9a5818d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f830362000160576040517f9a5818d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428410156200019b576040517ffb2a675200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360098190555082600a8190555081600b819055508560075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600c5f6101000a81548160ff02191690831515021790555085600c60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505062000a33565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003fc82620003b4565b810181811067ffffffffffffffff821117156200041e576200041d620003c4565b5b80604052505050565b5f620004326200039b565b9050620004408282620003f1565b919050565b5f67ffffffffffffffff821115620004625762000461620003c4565b5b6200046d82620003b4565b9050602081019050919050565b5f5b83811015620004995780820151818401526020810190506200047c565b5f8484015250505050565b5f620004ba620004b48462000445565b62000427565b905082815260208101848484011115620004d957620004d8620003b0565b5b620004e68482856200047a565b509392505050565b5f82601f830112620005055762000504620003ac565b5b815162000517848260208601620004a4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200054b8262000520565b9050919050565b6200055d816200053f565b811462000568575f80fd5b50565b5f815190506200057b8162000552565b92915050565b5f819050919050565b620005958162000581565b8114620005a0575f80fd5b50565b5f81519050620005b3816200058a565b92915050565b5f8115159050919050565b620005cf81620005b9565b8114620005da575f80fd5b50565b5f81519050620005ed81620005c4565b92915050565b5f805f805f805f80610100898b031215620006135762000612620003a4565b5b5f89015167ffffffffffffffff811115620006335762000632620003a8565b5b620006418b828c01620004ee565b985050602089015167ffffffffffffffff811115620006655762000664620003a8565b5b620006738b828c01620004ee565b9750506040620006868b828c016200056b565b9650506060620006998b828c016200056b565b9550506080620006ac8b828c01620005a3565b94505060a0620006bf8b828c01620005a3565b93505060c0620006d28b828c01620005a3565b92505060e0620006e58b828c01620005dd565b9150509295985092959890939650565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200074457607f821691505b6020821081036200075a5762000759620006ff565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007be7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000781565b620007ca868362000781565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6200080b62000805620007ff8462000581565b620007e2565b62000581565b9050919050565b5f819050919050565b6200082683620007eb565b6200083e620008358262000812565b8484546200078d565b825550505050565b5f90565b6200085462000846565b620008618184846200081b565b505050565b5b8181101562000888576200087c5f826200084a565b60018101905062000867565b5050565b601f821115620008d757620008a18162000760565b620008ac8462000772565b81016020851015620008bc578190505b620008d4620008cb8562000772565b83018262000866565b50505b505050565b5f82821c905092915050565b5f620008f95f1984600802620008dc565b1980831691505092915050565b5f620009138383620008e8565b9150826002028217905092915050565b6200092e82620006f5565b67ffffffffffffffff8111156200094a5762000949620003c4565b5b6200095682546200072c565b620009638282856200088c565b5f60209050601f83116001811462000999575f841562000984578287015190505b62000990858262000906565b865550620009ff565b601f198416620009a98662000760565b5f5b82811015620009d257848901518255600182019150602085019450602081019050620009ab565b86831015620009f25784890151620009ee601f891682620008e8565b8355505b6001600288020188555050505b505050505050565b62000a12816200053f565b82525050565b5f60208201905062000a2d5f83018462000a07565b92915050565b6115ff8062000a415f395ff3fe608060405234801561000f575f80fd5b5060043610610171575f3560e01c80638f620487116100dc578063b8a11e8211610095578063dd62ed3e1161006f578063dd62ed3e1461041f578063f2fde38b1461044f578063f3c274a61461046b578063ffd9eedb1461048957610171565b8063b8a11e82146103c5578063cfb4fc71146103e3578063d8dfeb451461040157610171565b80638f620487146102ff57806395d89b411461031d5780639acea70d1461033b578063a9059cbb14610359578063ac6068b514610389578063b5113d90146103a757610171565b8063313ce5671161012e578063313ce5671461024d57806348d399e71461026b5780636f713c9c1461028957806370a08231146102a7578063715018a6146102d75780638da5cb5b146102e157610171565b806306fdde0314610175578063095ea7b3146101935780631529a639146101c357806318160ddd146101e157806323b872dd146101ff5780632f13b60c1461022f575b5f80fd5b61017d6104a7565b60405161018a91906111c5565b60405180910390f35b6101ad60048036038101906101a89190611276565b610537565b6040516101ba91906112ce565b60405180910390f35b6101cb610559565b6040516101d891906112f6565b60405180910390f35b6101e96105f9565b6040516101f691906112f6565b60405180910390f35b6102196004803603810190610214919061130f565b610602565b60405161022691906112ce565b60405180910390f35b610237610630565b60405161024491906112ce565b60405180910390f35b61025561063c565b604051610262919061137a565b60405180910390f35b610273610644565b60405161028091906113a2565b60405180910390f35b610291610669565b60405161029e9190611416565b60405180910390f35b6102c160048036038101906102bc919061142f565b61068e565b6040516102ce91906112f6565b60405180910390f35b6102df6106d3565b005b6102e96106e6565b6040516102f691906113a2565b60405180910390f35b61030761070e565b60405161031491906112f6565b60405180910390f35b610325610714565b60405161033291906111c5565b60405180910390f35b6103436107a4565b60405161035091906113a2565b60405180910390f35b610373600480360381019061036e9190611276565b6107c9565b60405161038091906112ce565b60405180910390f35b6103916107eb565b60405161039e91906112ce565b60405180910390f35b6103af6107f6565b6040516103bc91906112f6565b60405180910390f35b6103cd610895565b6040516103da91906112f6565b60405180910390f35b6103eb61089b565b6040516103f891906112f6565b60405180910390f35b6104096108a1565b6040516104169190611416565b60405180910390f35b6104396004803603810190610434919061145a565b6108c7565b60405161044691906112f6565b60405180910390f35b6104696004803603810190610464919061142f565b610949565b005b6104736109cd565b60405161048091906112ce565b60405180910390f35b6104916109df565b60405161049e91906111c5565b60405180910390f35b6060600380546104b6906114c5565b80601f01602080910402602001604051908101604052809291908181526020018280546104e2906114c5565b801561052d5780601f106105045761010080835404028352916020019161052d565b820191905f5260205f20905b81548152906001019060200180831161051057829003601f168201915b5050505050905090565b5f80610541610a6e565b905061054e818585610a75565b600191505092915050565b5f600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105b591906113a2565b602060405180830381865afa1580156105d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105f49190611509565b905090565b5f600254905090565b5f8061060c610a6e565b9050610619858285610a87565b610624858585610b19565b60019150509392505050565b5f600954421015905090565b5f6012905090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106db610c09565b6106e45f610c90565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b606060048054610723906114c5565b80601f016020809104026020016040519081016040528092919081815260200182805461074f906114c5565b801561079a5780601f106107715761010080835404028352916020019161079a565b820191905f5260205f20905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f806107d3610a6e565b90506107e0818585610b19565b600191505092915050565b5f6009544210905090565b5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161085191906113a2565b602060405180830381865afa15801561086c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108909190611509565b905090565b600a5481565b600b5481565b600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610951610c09565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109b891906113a2565b60405180910390fd5b6109ca81610c90565b50565b600c5f9054906101000a900460ff1681565b6060600c5f9054906101000a900460ff1615610a32576040518060400160405280600381526020017f50555400000000000000000000000000000000000000000000000000000000008152509050610a6b565b6040518060400160405280600481526020017f43414c4c0000000000000000000000000000000000000000000000000000000081525090505b90565b5f33905090565b610a828383836001610d53565b505050565b5f610a9284846108c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b135781811015610b04578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610afb93929190611534565b60405180910390fd5b610b1284848484035f610d53565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b89575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b8091906113a2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf9575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bf091906113a2565b60405180910390fd5b610c04838383610f22565b505050565b610c11610a6e565b73ffffffffffffffffffffffffffffffffffffffff16610c2f6106e6565b73ffffffffffffffffffffffffffffffffffffffff1614610c8e57610c52610a6e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c8591906113a2565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dc3575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dba91906113a2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e33575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e2a91906113a2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f1c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1391906112f6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f72578060025f828254610f669190611596565b92505081905550611040565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ffb578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ff293929190611534565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611087578060025f82825403925050819055506110d1565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161112e91906112f6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611172578082015181840152602081019050611157565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111978261113b565b6111a18185611145565b93506111b1818560208601611155565b6111ba8161117d565b840191505092915050565b5f6020820190508181035f8301526111dd818461118d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611212826111e9565b9050919050565b61122281611208565b811461122c575f80fd5b50565b5f8135905061123d81611219565b92915050565b5f819050919050565b61125581611243565b811461125f575f80fd5b50565b5f813590506112708161124c565b92915050565b5f806040838503121561128c5761128b6111e5565b5b5f6112998582860161122f565b92505060206112aa85828601611262565b9150509250929050565b5f8115159050919050565b6112c8816112b4565b82525050565b5f6020820190506112e15f8301846112bf565b92915050565b6112f081611243565b82525050565b5f6020820190506113095f8301846112e7565b92915050565b5f805f60608486031215611326576113256111e5565b5b5f6113338682870161122f565b93505060206113448682870161122f565b925050604061135586828701611262565b9150509250925092565b5f60ff82169050919050565b6113748161135f565b82525050565b5f60208201905061138d5f83018461136b565b92915050565b61139c81611208565b82525050565b5f6020820190506113b55f830184611393565b92915050565b5f819050919050565b5f6113de6113d96113d4846111e9565b6113bb565b6111e9565b9050919050565b5f6113ef826113c4565b9050919050565b5f611400826113e5565b9050919050565b611410816113f6565b82525050565b5f6020820190506114295f830184611407565b92915050565b5f60208284031215611444576114436111e5565b5b5f6114518482850161122f565b91505092915050565b5f80604083850312156114705761146f6111e5565b5b5f61147d8582860161122f565b925050602061148e8582860161122f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114dc57607f821691505b6020821081036114ef576114ee611498565b5b50919050565b5f815190506115038161124c565b92915050565b5f6020828403121561151e5761151d6111e5565b5b5f61152b848285016114f5565b91505092915050565b5f6060820190506115475f830186611393565b61155460208301856112e7565b61156160408301846112e7565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115a082611243565b91506115ab83611243565b92508282019050808211156115c3576115c2611569565b5b9291505056fea26469706673582212208a15bae5ca20999aa5bcd757f34cb93679edb360517cec54ec4f834c619b1ad164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2040 CODESIZE SUB DUP1 PUSH3 0x2040 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x5F3 JUMP JUMPDEST CALLER DUP9 DUP9 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x923 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x923 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE3 DUP2 PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 SUB PUSH3 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9A5818D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH3 0x160 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9A5818D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH3 0x19B JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB2A675200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xC PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP PUSH3 0xA33 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x3FC DUP3 PUSH3 0x3B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x41E JUMPI PUSH3 0x41D PUSH3 0x3C4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x432 PUSH3 0x39B JUMP JUMPDEST SWAP1 POP PUSH3 0x440 DUP3 DUP3 PUSH3 0x3F1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x462 JUMPI PUSH3 0x461 PUSH3 0x3C4 JUMP JUMPDEST JUMPDEST PUSH3 0x46D DUP3 PUSH3 0x3B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x499 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x47C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4BA PUSH3 0x4B4 DUP5 PUSH3 0x445 JUMP JUMPDEST PUSH3 0x427 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x4D9 JUMPI PUSH3 0x4D8 PUSH3 0x3B0 JUMP JUMPDEST JUMPDEST PUSH3 0x4E6 DUP5 DUP3 DUP6 PUSH3 0x47A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x505 JUMPI PUSH3 0x504 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x517 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x54B DUP3 PUSH3 0x520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x55D DUP2 PUSH3 0x53F JUMP JUMPDEST DUP2 EQ PUSH3 0x568 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x57B DUP2 PUSH3 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x595 DUP2 PUSH3 0x581 JUMP JUMPDEST DUP2 EQ PUSH3 0x5A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5B3 DUP2 PUSH3 0x58A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5CF DUP2 PUSH3 0x5B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5ED DUP2 PUSH3 0x5C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x613 JUMPI PUSH3 0x612 PUSH3 0x3A4 JUMP JUMPDEST JUMPDEST PUSH0 DUP10 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x633 JUMPI PUSH3 0x632 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x641 DUP12 DUP3 DUP13 ADD PUSH3 0x4EE JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 DUP10 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x665 JUMPI PUSH3 0x664 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x673 DUP12 DUP3 DUP13 ADD PUSH3 0x4EE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH3 0x686 DUP12 DUP3 DUP13 ADD PUSH3 0x56B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH3 0x699 DUP12 DUP3 DUP13 ADD PUSH3 0x56B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH3 0x6AC DUP12 DUP3 DUP13 ADD PUSH3 0x5A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH3 0x6BF DUP12 DUP3 DUP13 ADD PUSH3 0x5A3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH3 0x6D2 DUP12 DUP3 DUP13 ADD PUSH3 0x5A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH3 0x6E5 DUP12 DUP3 DUP13 ADD PUSH3 0x5DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x744 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x75A JUMPI PUSH3 0x759 PUSH3 0x6FF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7BE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x781 JUMP JUMPDEST PUSH3 0x7CA DUP7 DUP4 PUSH3 0x781 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x80B PUSH3 0x805 PUSH3 0x7FF DUP5 PUSH3 0x581 JUMP JUMPDEST PUSH3 0x7E2 JUMP JUMPDEST PUSH3 0x581 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x826 DUP4 PUSH3 0x7EB JUMP JUMPDEST PUSH3 0x83E PUSH3 0x835 DUP3 PUSH3 0x812 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x78D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x854 PUSH3 0x846 JUMP JUMPDEST PUSH3 0x861 DUP2 DUP5 DUP5 PUSH3 0x81B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x888 JUMPI PUSH3 0x87C PUSH0 DUP3 PUSH3 0x84A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x867 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x8D7 JUMPI PUSH3 0x8A1 DUP2 PUSH3 0x760 JUMP JUMPDEST PUSH3 0x8AC DUP5 PUSH3 0x772 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x8D4 PUSH3 0x8CB DUP6 PUSH3 0x772 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x866 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x8F9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x8DC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x913 DUP4 DUP4 PUSH3 0x8E8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x92E DUP3 PUSH3 0x6F5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x94A JUMPI PUSH3 0x949 PUSH3 0x3C4 JUMP JUMPDEST JUMPDEST PUSH3 0x956 DUP3 SLOAD PUSH3 0x72C JUMP JUMPDEST PUSH3 0x963 DUP3 DUP3 DUP6 PUSH3 0x88C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x999 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x984 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x990 DUP6 DUP3 PUSH3 0x906 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x9FF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9A9 DUP7 PUSH3 0x760 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9D2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9AB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x9F2 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x9EE PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8E8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xA12 DUP2 PUSH3 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA2D PUSH0 DUP4 ADD DUP5 PUSH3 0xA07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15FF DUP1 PUSH3 0xA41 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F620487 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB8A11E82 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xF3C274A6 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xFFD9EEDB EQ PUSH2 0x489 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xB8A11E82 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xCFB4FC71 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xD8DFEB45 EQ PUSH2 0x401 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8F620487 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x9ACEA70D EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xAC6068B5 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xB5113D90 EQ PUSH2 0x3A7 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x48D399E7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6F713C9C EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E1 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1529A639 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2F13B60C EQ PUSH2 0x22F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x6D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x491 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B6 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x504 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x510 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x541 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x54E DUP2 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60C PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP6 DUP3 DUP6 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x624 DUP6 DUP6 DUP6 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DB PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x6E4 PUSH0 PUSH2 0xC90 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74F SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x771 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7D3 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x7E0 DUP2 DUP6 DUP6 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0xC09 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CA DUP2 PUSH2 0xC90 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5055540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43414C4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA82 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA92 DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB13 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB12 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD53 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC04 DUP4 DUP4 DUP4 PUSH2 0xF22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC11 PUSH2 0xA6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2F PUSH2 0x6E6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8E JUMPI PUSH2 0xC52 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE33 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF1C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF72 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1040 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFFB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1087 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10D1 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1172 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1157 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1197 DUP3 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x11A1 DUP2 DUP6 PUSH2 0x1145 JUMP JUMPDEST SWAP4 POP PUSH2 0x11B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x11BA DUP2 PUSH2 0x117D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11DD DUP2 DUP5 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 DUP3 PUSH2 0x11E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP2 EQ PUSH2 0x122C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123D DUP2 PUSH2 0x1219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1255 DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP2 EQ PUSH2 0x125F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1270 DUP2 PUSH2 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128C JUMPI PUSH2 0x128B PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1299 DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AA DUP6 DUP3 DUP7 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C8 DUP2 PUSH2 0x12B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F0 DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1309 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1325 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1333 DUP7 DUP3 DUP8 ADD PUSH2 0x122F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1344 DUP7 DUP3 DUP8 ADD PUSH2 0x122F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1355 DUP7 DUP3 DUP8 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x135F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138D PUSH0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DE PUSH2 0x13D9 PUSH2 0x13D4 DUP5 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EF DUP3 PUSH2 0x13C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1400 DUP3 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x13F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1429 PUSH0 DUP4 ADD DUP5 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1443 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1451 DUP5 DUP3 DUP6 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1470 JUMPI PUSH2 0x146F PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147D DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x148E DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1498 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1503 DUP2 PUSH2 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151E JUMPI PUSH2 0x151D PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152B DUP5 DUP3 DUP6 ADD PUSH2 0x14F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1547 PUSH0 DUP4 ADD DUP7 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x1554 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x1561 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15A0 DUP3 PUSH2 0x1243 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AB DUP4 PUSH2 0x1243 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 ISZERO 0xBA 0xE5 0xCA KECCAK256 SWAP10 SWAP11 0xA5 0xBC 0xD7 JUMPI RETURN 0x4C 0xB9 CALLDATASIZE PUSH26 0xEDB360517CEC54EC4F834C619B1AD164736F6C63430008160033 ",
							"sourceMap": "228:2611:7:-:0;;;1321:858;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1618:10;1596:4;1602:6;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:6;2061:7;:21;;;;1677:1:7::3;1663:10;:15:::0;1659:43:::3;;1687:15;;;;;;;;;;;;;;1659:43;1730:1;1716:10;:15:::0;1712:43:::3;;1740:15;;;;;;;;;;;;;;1712:43;1787:15;1769;:33;1765:65;;;1811:19;;;;;;;;;;;;;;1765:65;1858:15;1841:14;:32;;;;1895:10;1883:9;:22;;;;1927:10;1915:9;:22;;;;1967:18;1947:17;;:38;;;;;;;;;;;;;;;;;;2018:21;1995:20;;:44;;;;;;;;;;;;;;;;;;2057:6;2049:5;;:14;;;;;;;;;;;;;;;;;;2093:18;2073:10;;:39;;;;;;;;;;;;;;;;;;2145:21;2122:13;;:45;;;;;;;;;;;;;;;;;;1321:858:::0;;;;;;;;228:2611;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:122::-;2984:24;3002:5;2984:24;:::i;:::-;2977:5;2974:35;2964:63;;3023:1;3020;3013:12;2964:63;2911:122;:::o;3039:143::-;3096:5;3127:6;3121:13;3112:22;;3143:33;3170:5;3143:33;:::i;:::-;3039:143;;;;:::o;3188:77::-;3225:7;3254:5;3243:16;;3188:77;;;:::o;3271:122::-;3344:24;3362:5;3344:24;:::i;:::-;3337:5;3334:35;3324:63;;3383:1;3380;3373:12;3324:63;3271:122;:::o;3399:143::-;3456:5;3487:6;3481:13;3472:22;;3503:33;3530:5;3503:33;:::i;:::-;3399:143;;;;:::o;3548:90::-;3582:7;3625:5;3618:13;3611:21;3600:32;;3548:90;;;:::o;3644:116::-;3714:21;3729:5;3714:21;:::i;:::-;3707:5;3704:32;3694:60;;3750:1;3747;3740:12;3694:60;3644:116;:::o;3766:137::-;3820:5;3851:6;3845:13;3836:22;;3867:30;3891:5;3867:30;:::i;:::-;3766:137;;;;:::o;3909:1788::-;4059:6;4067;4075;4083;4091;4099;4107;4115;4164:3;4152:9;4143:7;4139:23;4135:33;4132:120;;;4171:79;;:::i;:::-;4132:120;4312:1;4301:9;4297:17;4291:24;4342:18;4334:6;4331:30;4328:117;;;4364:79;;:::i;:::-;4328:117;4469:74;4535:7;4526:6;4515:9;4511:22;4469:74;:::i;:::-;4459:84;;4262:291;4613:2;4602:9;4598:18;4592:25;4644:18;4636:6;4633:30;4630:117;;;4666:79;;:::i;:::-;4630:117;4771:74;4837:7;4828:6;4817:9;4813:22;4771:74;:::i;:::-;4761:84;;4563:292;4894:2;4920:64;4976:7;4967:6;4956:9;4952:22;4920:64;:::i;:::-;4910:74;;4865:129;5033:2;5059:64;5115:7;5106:6;5095:9;5091:22;5059:64;:::i;:::-;5049:74;;5004:129;5172:3;5199:64;5255:7;5246:6;5235:9;5231:22;5199:64;:::i;:::-;5189:74;;5143:130;5312:3;5339:64;5395:7;5386:6;5375:9;5371:22;5339:64;:::i;:::-;5329:74;;5283:130;5452:3;5479:64;5535:7;5526:6;5515:9;5511:22;5479:64;:::i;:::-;5469:74;;5423:130;5592:3;5619:61;5672:7;5663:6;5652:9;5648:22;5619:61;:::i;:::-;5609:71;;5563:127;3909:1788;;;;;;;;;;;:::o;5703:99::-;5755:6;5789:5;5783:12;5773:22;;5703:99;;;:::o;5808:180::-;5856:77;5853:1;5846:88;5953:4;5950:1;5943:15;5977:4;5974:1;5967:15;5994:320;6038:6;6075:1;6069:4;6065:12;6055:22;;6122:1;6116:4;6112:12;6143:18;6133:81;;6199:4;6191:6;6187:17;6177:27;;6133:81;6261:2;6253:6;6250:14;6230:18;6227:38;6224:84;;6280:18;;:::i;:::-;6224:84;6045:269;5994:320;;;:::o;6320:141::-;6369:4;6392:3;6384:11;;6415:3;6412:1;6405:14;6449:4;6446:1;6436:18;6428:26;;6320:141;;;:::o;6467:93::-;6504:6;6551:2;6546;6539:5;6535:14;6531:23;6521:33;;6467:93;;;:::o;6566:107::-;6610:8;6660:5;6654:4;6650:16;6629:37;;6566:107;;;;:::o;6679:393::-;6748:6;6798:1;6786:10;6782:18;6821:97;6851:66;6840:9;6821:97;:::i;:::-;6939:39;6969:8;6958:9;6939:39;:::i;:::-;6927:51;;7011:4;7007:9;7000:5;6996:21;6987:30;;7060:4;7050:8;7046:19;7039:5;7036:30;7026:40;;6755:317;;6679:393;;;;;:::o;7078:60::-;7106:3;7127:5;7120:12;;7078:60;;;:::o;7144:142::-;7194:9;7227:53;7245:34;7254:24;7272:5;7254:24;:::i;:::-;7245:34;:::i;:::-;7227:53;:::i;:::-;7214:66;;7144:142;;;:::o;7292:75::-;7335:3;7356:5;7349:12;;7292:75;;;:::o;7373:269::-;7483:39;7514:7;7483:39;:::i;:::-;7544:91;7593:41;7617:16;7593:41;:::i;:::-;7585:6;7578:4;7572:11;7544:91;:::i;:::-;7538:4;7531:105;7449:193;7373:269;;;:::o;7648:73::-;7693:3;7648:73;:::o;7727:189::-;7804:32;;:::i;:::-;7845:65;7903:6;7895;7889:4;7845:65;:::i;:::-;7780:136;7727:189;;:::o;7922:186::-;7982:120;7999:3;7992:5;7989:14;7982:120;;;8053:39;8090:1;8083:5;8053:39;:::i;:::-;8026:1;8019:5;8015:13;8006:22;;7982:120;;;7922:186;;:::o;8114:543::-;8215:2;8210:3;8207:11;8204:446;;;8249:38;8281:5;8249:38;:::i;:::-;8333:29;8351:10;8333:29;:::i;:::-;8323:8;8319:44;8516:2;8504:10;8501:18;8498:49;;;8537:8;8522:23;;8498:49;8560:80;8616:22;8634:3;8616:22;:::i;:::-;8606:8;8602:37;8589:11;8560:80;:::i;:::-;8219:431;;8204:446;8114:543;;;:::o;8663:117::-;8717:8;8767:5;8761:4;8757:16;8736:37;;8663:117;;;;:::o;8786:169::-;8830:6;8863:51;8911:1;8907:6;8899:5;8896:1;8892:13;8863:51;:::i;:::-;8859:56;8944:4;8938;8934:15;8924:25;;8837:118;8786:169;;;;:::o;8960:295::-;9036:4;9182:29;9207:3;9201:4;9182:29;:::i;:::-;9174:37;;9244:3;9241:1;9237:11;9231:4;9228:21;9220:29;;8960:295;;;;:::o;9260:1395::-;9377:37;9410:3;9377:37;:::i;:::-;9479:18;9471:6;9468:30;9465:56;;;9501:18;;:::i;:::-;9465:56;9545:38;9577:4;9571:11;9545:38;:::i;:::-;9630:67;9690:6;9682;9676:4;9630:67;:::i;:::-;9724:1;9748:4;9735:17;;9780:2;9772:6;9769:14;9797:1;9792:618;;;;10454:1;10471:6;10468:77;;;10520:9;10515:3;10511:19;10505:26;10496:35;;10468:77;10571:67;10631:6;10624:5;10571:67;:::i;:::-;10565:4;10558:81;10427:222;9762:887;;9792:618;9844:4;9840:9;9832:6;9828:22;9878:37;9910:4;9878:37;:::i;:::-;9937:1;9951:208;9965:7;9962:1;9959:14;9951:208;;;10044:9;10039:3;10035:19;10029:26;10021:6;10014:42;10095:1;10087:6;10083:14;10073:24;;10142:2;10131:9;10127:18;10114:31;;9988:4;9985:1;9981:12;9976:17;;9951:208;;;10187:6;10178:7;10175:19;10172:179;;;10245:9;10240:3;10236:19;10230:26;10288:48;10330:4;10322:6;10318:17;10307:9;10288:48;:::i;:::-;10280:6;10273:64;10195:156;10172:179;10397:1;10393;10385:6;10381:14;10377:22;10371:4;10364:36;9799:611;;;9762:887;;9352:1303;;;9260:1395;;:::o;10661:118::-;10748:24;10766:5;10748:24;:::i;:::-;10743:3;10736:37;10661:118;;:::o;10785:222::-;10878:4;10916:2;10905:9;10901:18;10893:26;;10929:71;10997:1;10986:9;10982:17;10973:6;10929:71;:::i;:::-;10785:222;;;;:::o;228:2611:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2677,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3411,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3081,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2670,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2695,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3216,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2841,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3874,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2247,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1335,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1678,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@collateralAddress_1015": {
									"entryPoint": 1604,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateral_1028": {
									"entryPoint": 2209,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@considerationAddress_1017": {
									"entryPoint": 1956,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consideration_1031": {
									"entryPoint": 1641,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1596,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@expirationDate_1019": {
									"entryPoint": 1806,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCollateralBalance_1202": {
									"entryPoint": 1369,
									"id": 1202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getConsiderationBalance_1216": {
									"entryPoint": 2038,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isExpired_1227": {
									"entryPoint": 1584,
									"id": 1227,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isNotExpired_1238": {
									"entryPoint": 2027,
									"id": 1238,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isPut_1025": {
									"entryPoint": 2509,
									"id": 1025,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1191,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@optionType_1252": {
									"entryPoint": 2527,
									"id": 1252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1766,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1747,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@strikeDen_1023": {
									"entryPoint": 2203,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@strikeNum_1021": {
									"entryPoint": 2197,
									"id": 1021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1812,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1529,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1538,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2377,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1993,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8779:8",
										"nodeType": "YulBlock",
										"src": "0:8779:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:184:8",
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nativeSrc": "359:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:8",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:8",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:8",
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nativeSrc": "449:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nativeSrc": "468:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nativeSrc": "462:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nativeSrc": "442:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nativeSrc": "442:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nativeSrc": "386:13:8",
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nativeSrc": "378:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:8",
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nativeSrc": "402:15:8",
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:8",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nativeSrc": "407:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:8",
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nativeSrc": "507:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:8",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nativeSrc": "500:27:8",
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nativeSrc": "500:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nativeSrc": "587:54:8",
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nativeSrc": "597:38:8",
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:8",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nativeSrc": "611:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:8",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nativeSrc": "627:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nativeSrc": "607:28:8",
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:8",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:8",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nativeSrc": "739:285:8",
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nativeSrc": "749:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nativeSrc": "763:39:8",
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:8",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:8",
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nativeSrc": "818:71:8",
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:8",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nativeSrc": "933:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nativeSrc": "898:65:8",
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nativeSrc": "898:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nativeSrc": "972:46:8",
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nativeSrc": "988:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nativeSrc": "979:39:8",
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:8",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:8",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:8",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nativeSrc": "1148:195:8",
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nativeSrc": "1158:26:8",
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nativeSrc": "1166:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nativeSrc": "1201:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nativeSrc": "1220:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nativeSrc": "1194:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nativeSrc": "1194:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nativeSrc": "1250:86:8",
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nativeSrc": "1258:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:8",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:8",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:8",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nativeSrc": "1389:35:8",
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nativeSrc": "1399:19:8",
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nativeSrc": "1409:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:8",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nativeSrc": "1519:28:8",
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nativeSrc": "1529:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nativeSrc": "1529:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nativeSrc": "1642:28:8",
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nativeSrc": "1652:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nativeSrc": "1652:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nativeSrc": "1721:81:8",
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nativeSrc": "1731:65:8",
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nativeSrc": "1742:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:8",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:8",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nativeSrc": "1853:51:8",
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nativeSrc": "1863:35:8",
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nativeSrc": "1874:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:8",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:8",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nativeSrc": "1953:79:8",
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:8",
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nativeSrc": "2012:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nativeSrc": "2012:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nativeSrc": "1983:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nativeSrc": "1973:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nativeSrc": "1966:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nativeSrc": "1963:63:8",
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:8",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nativeSrc": "2090:87:8",
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nativeSrc": "2100:29:8",
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nativeSrc": "2109:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nativeSrc": "2138:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nativeSrc": "2138:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:8",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:8",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:8",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nativeSrc": "2228:32:8",
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nativeSrc": "2238:16:8",
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:8",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:8",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:8",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nativeSrc": "2309:79:8",
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:8",
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nativeSrc": "2368:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nativeSrc": "2368:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nativeSrc": "2339:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nativeSrc": "2329:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nativeSrc": "2322:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nativeSrc": "2319:63:8",
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:8",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nativeSrc": "2446:87:8",
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nativeSrc": "2456:29:8",
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nativeSrc": "2465:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nativeSrc": "2494:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nativeSrc": "2494:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:8",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:8",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:8",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nativeSrc": "2622:391:8",
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:8",
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nativeSrc": "2670:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nativeSrc": "2670:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nativeSrc": "2639:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nativeSrc": "2635:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nativeSrc": "2632:119:8",
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nativeSrc": "2761:117:8",
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nativeSrc": "2776:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nativeSrc": "2836:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nativeSrc": "2815:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:8",
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nativeSrc": "2903:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nativeSrc": "2964:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nativeSrc": "2943:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:8",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:8",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:8",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:8",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nativeSrc": "3061:48:8",
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nativeSrc": "3071:32:8",
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nativeSrc": "3089:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nativeSrc": "3082:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:8",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:8",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nativeSrc": "3174:50:8",
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nativeSrc": "3196:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nativeSrc": "3184:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nativeSrc": "3184:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:8",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:8",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nativeSrc": "3322:118:8",
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nativeSrc": "3332:26:8",
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nativeSrc": "3340:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nativeSrc": "3415:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nativeSrc": "3368:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nativeSrc": "3368:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:8",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:8",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:8",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nativeSrc": "3511:53:8",
													"nodeType": "YulBlock",
													"src": "3511:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:8"
																		},
																		"nativeSrc": "3533:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:8"
																},
																"nativeSrc": "3521:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:8"
															},
															"nativeSrc": "3521:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:8",
														"nodeType": "YulTypedName",
														"src": "3499:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:8",
														"nodeType": "YulTypedName",
														"src": "3506:3:8",
														"type": ""
													}
												],
												"src": "3446:118:8"
											},
											{
												"body": {
													"nativeSrc": "3668:124:8",
													"nodeType": "YulBlock",
													"src": "3668:124:8",
													"statements": [
														{
															"nativeSrc": "3678:26:8",
															"nodeType": "YulAssignment",
															"src": "3678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:8"
																},
																"nativeSrc": "3686:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nativeSrc": "3767:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:8"
																},
																"nativeSrc": "3714:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:8"
															},
															"nativeSrc": "3714:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:8",
														"nodeType": "YulTypedName",
														"src": "3640:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:8",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:8",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													}
												],
												"src": "3570:222:8"
											},
											{
												"body": {
													"nativeSrc": "3898:519:8",
													"nodeType": "YulBlock",
													"src": "3898:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:8",
																"nodeType": "YulBlock",
																"src": "3944:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:8"
																			},
																			"nativeSrc": "3946:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:8"
																		},
																		"nativeSrc": "3946:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:8"
																		},
																		"nativeSrc": "3915:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:8"
																},
																"nativeSrc": "3911:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:8"
															},
															"nativeSrc": "3908:119:8",
															"nodeType": "YulIf",
															"src": "3908:119:8"
														},
														{
															"nativeSrc": "4037:117:8",
															"nodeType": "YulBlock",
															"src": "4037:117:8",
															"statements": [
																{
																	"nativeSrc": "4052:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:8"
																				},
																				"nativeSrc": "4112:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:8"
																		},
																		"nativeSrc": "4091:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:8",
															"nodeType": "YulBlock",
															"src": "4164:118:8",
															"statements": [
																{
																	"nativeSrc": "4179:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nativeSrc": "4240:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:8"
																		},
																		"nativeSrc": "4219:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:8",
															"nodeType": "YulBlock",
															"src": "4292:118:8",
															"statements": [
																{
																	"nativeSrc": "4307:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:8"
																				},
																				"nativeSrc": "4368:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:8"
																		},
																		"nativeSrc": "4347:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:8",
														"nodeType": "YulTypedName",
														"src": "3852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:8",
														"nodeType": "YulTypedName",
														"src": "3863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:8",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:8",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:8",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"src": "3798:619:8"
											},
											{
												"body": {
													"nativeSrc": "4466:43:8",
													"nodeType": "YulBlock",
													"src": "4466:43:8",
													"statements": [
														{
															"nativeSrc": "4476:27:8",
															"nodeType": "YulAssignment",
															"src": "4476:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:8"
																},
																"nativeSrc": "4487:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:8",
														"nodeType": "YulTypedName",
														"src": "4448:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:8",
														"nodeType": "YulTypedName",
														"src": "4458:7:8",
														"type": ""
													}
												],
												"src": "4423:86:8"
											},
											{
												"body": {
													"nativeSrc": "4576:51:8",
													"nodeType": "YulBlock",
													"src": "4576:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:8"
																		},
																		"nativeSrc": "4598:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:8"
																},
																"nativeSrc": "4586:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:8"
															},
															"nativeSrc": "4586:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:8",
														"nodeType": "YulTypedName",
														"src": "4564:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:8",
														"nodeType": "YulTypedName",
														"src": "4571:3:8",
														"type": ""
													}
												],
												"src": "4515:112:8"
											},
											{
												"body": {
													"nativeSrc": "4727:120:8",
													"nodeType": "YulBlock",
													"src": "4727:120:8",
													"statements": [
														{
															"nativeSrc": "4737:26:8",
															"nodeType": "YulAssignment",
															"src": "4737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:8"
																},
																"nativeSrc": "4745:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:8"
																		},
																		"nativeSrc": "4822:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:8"
																},
																"nativeSrc": "4773:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:8"
															},
															"nativeSrc": "4773:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:8",
														"nodeType": "YulTypedName",
														"src": "4699:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:8",
														"nodeType": "YulTypedName",
														"src": "4711:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:8",
														"nodeType": "YulTypedName",
														"src": "4722:4:8",
														"type": ""
													}
												],
												"src": "4633:214:8"
											},
											{
												"body": {
													"nativeSrc": "4918:53:8",
													"nodeType": "YulBlock",
													"src": "4918:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4935:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4935:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4958:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4958:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4940:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4940:17:8"
																		},
																		"nativeSrc": "4940:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4928:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4928:6:8"
																},
																"nativeSrc": "4928:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4928:37:8"
															},
															"nativeSrc": "4928:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4928:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4853:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4906:5:8",
														"nodeType": "YulTypedName",
														"src": "4906:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4913:3:8",
														"nodeType": "YulTypedName",
														"src": "4913:3:8",
														"type": ""
													}
												],
												"src": "4853:118:8"
											},
											{
												"body": {
													"nativeSrc": "5075:124:8",
													"nodeType": "YulBlock",
													"src": "5075:124:8",
													"statements": [
														{
															"nativeSrc": "5085:26:8",
															"nodeType": "YulAssignment",
															"src": "5085:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5097:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5097:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5108:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5108:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5093:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:8"
																},
																"nativeSrc": "5093:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5093:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5085:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5085:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5165:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5165:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5178:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5178:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5189:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5189:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5174:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:8"
																		},
																		"nativeSrc": "5174:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5174:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5121:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5121:43:8"
																},
																"nativeSrc": "5121:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5121:71:8"
															},
															"nativeSrc": "5121:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5121:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4977:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5047:9:8",
														"nodeType": "YulTypedName",
														"src": "5047:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5059:6:8",
														"nodeType": "YulTypedName",
														"src": "5059:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5070:4:8",
														"nodeType": "YulTypedName",
														"src": "5070:4:8",
														"type": ""
													}
												],
												"src": "4977:222:8"
											},
											{
												"body": {
													"nativeSrc": "5237:28:8",
													"nodeType": "YulBlock",
													"src": "5237:28:8",
													"statements": [
														{
															"nativeSrc": "5247:12:8",
															"nodeType": "YulAssignment",
															"src": "5247:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5254:5:8",
																"nodeType": "YulIdentifier",
																"src": "5254:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5205:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5223:5:8",
														"nodeType": "YulTypedName",
														"src": "5223:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5233:3:8",
														"nodeType": "YulTypedName",
														"src": "5233:3:8",
														"type": ""
													}
												],
												"src": "5205:60:8"
											},
											{
												"body": {
													"nativeSrc": "5331:82:8",
													"nodeType": "YulBlock",
													"src": "5331:82:8",
													"statements": [
														{
															"nativeSrc": "5341:66:8",
															"nodeType": "YulAssignment",
															"src": "5341:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5399:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5381:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5381:17:8"
																				},
																				"nativeSrc": "5381:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5372:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "5372:8:8"
																		},
																		"nativeSrc": "5372:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5372:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5354:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5354:17:8"
																},
																"nativeSrc": "5354:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5354:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5341:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5341:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5271:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5311:5:8",
														"nodeType": "YulTypedName",
														"src": "5311:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5321:9:8",
														"nodeType": "YulTypedName",
														"src": "5321:9:8",
														"type": ""
													}
												],
												"src": "5271:142:8"
											},
											{
												"body": {
													"nativeSrc": "5479:66:8",
													"nodeType": "YulBlock",
													"src": "5479:66:8",
													"statements": [
														{
															"nativeSrc": "5489:50:8",
															"nodeType": "YulAssignment",
															"src": "5489:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5533:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5533:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5502:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5502:30:8"
																},
																"nativeSrc": "5502:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5502:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5489:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5489:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5419:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5459:5:8",
														"nodeType": "YulTypedName",
														"src": "5459:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5469:9:8",
														"nodeType": "YulTypedName",
														"src": "5469:9:8",
														"type": ""
													}
												],
												"src": "5419:126:8"
											},
											{
												"body": {
													"nativeSrc": "5625:66:8",
													"nodeType": "YulBlock",
													"src": "5625:66:8",
													"statements": [
														{
															"nativeSrc": "5635:50:8",
															"nodeType": "YulAssignment",
															"src": "5635:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5679:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5679:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5648:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5648:30:8"
																},
																"nativeSrc": "5648:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5648:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5635:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5635:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "5551:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5605:5:8",
														"nodeType": "YulTypedName",
														"src": "5605:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5615:9:8",
														"nodeType": "YulTypedName",
														"src": "5615:9:8",
														"type": ""
													}
												],
												"src": "5551:140:8"
											},
											{
												"body": {
													"nativeSrc": "5776:80:8",
													"nodeType": "YulBlock",
													"src": "5776:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5793:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5793:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5843:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5843:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "5798:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "5798:44:8"
																		},
																		"nativeSrc": "5798:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5798:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5786:6:8"
																},
																"nativeSrc": "5786:64:8",
																"nodeType": "YulFunctionCall",
																"src": "5786:64:8"
															},
															"nativeSrc": "5786:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "5786:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "5697:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5764:5:8",
														"nodeType": "YulTypedName",
														"src": "5764:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5771:3:8",
														"nodeType": "YulTypedName",
														"src": "5771:3:8",
														"type": ""
													}
												],
												"src": "5697:159:8"
											},
											{
												"body": {
													"nativeSrc": "5974:138:8",
													"nodeType": "YulBlock",
													"src": "5974:138:8",
													"statements": [
														{
															"nativeSrc": "5984:26:8",
															"nodeType": "YulAssignment",
															"src": "5984:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5996:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5996:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6007:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6007:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5992:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5992:3:8"
																},
																"nativeSrc": "5992:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5992:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5984:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6078:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6078:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6091:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6091:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6102:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6102:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6087:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:8"
																		},
																		"nativeSrc": "6087:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6087:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "6020:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "6020:57:8"
																},
																"nativeSrc": "6020:85:8",
																"nodeType": "YulFunctionCall",
																"src": "6020:85:8"
															},
															"nativeSrc": "6020:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "6020:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "5862:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5946:9:8",
														"nodeType": "YulTypedName",
														"src": "5946:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5958:6:8",
														"nodeType": "YulTypedName",
														"src": "5958:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5969:4:8",
														"nodeType": "YulTypedName",
														"src": "5969:4:8",
														"type": ""
													}
												],
												"src": "5862:250:8"
											},
											{
												"body": {
													"nativeSrc": "6184:263:8",
													"nodeType": "YulBlock",
													"src": "6184:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6230:83:8",
																"nodeType": "YulBlock",
																"src": "6230:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6232:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6232:77:8"
																			},
																			"nativeSrc": "6232:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6232:79:8"
																		},
																		"nativeSrc": "6232:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6232:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6205:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6205:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6214:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6201:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:8"
																		},
																		"nativeSrc": "6201:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6201:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6226:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6226:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6197:3:8"
																},
																"nativeSrc": "6197:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6197:32:8"
															},
															"nativeSrc": "6194:119:8",
															"nodeType": "YulIf",
															"src": "6194:119:8"
														},
														{
															"nativeSrc": "6323:117:8",
															"nodeType": "YulBlock",
															"src": "6323:117:8",
															"statements": [
																{
																	"nativeSrc": "6338:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6338:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6352:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6352:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6342:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6342:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6367:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6367:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6402:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6402:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6413:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6413:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6398:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6398:3:8"
																				},
																				"nativeSrc": "6398:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6398:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6422:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6422:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6377:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6377:20:8"
																		},
																		"nativeSrc": "6377:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6377:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6367:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6367:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6118:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6154:9:8",
														"nodeType": "YulTypedName",
														"src": "6154:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6165:7:8",
														"nodeType": "YulTypedName",
														"src": "6165:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6177:6:8",
														"nodeType": "YulTypedName",
														"src": "6177:6:8",
														"type": ""
													}
												],
												"src": "6118:329:8"
											},
											{
												"body": {
													"nativeSrc": "6536:391:8",
													"nodeType": "YulBlock",
													"src": "6536:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6582:83:8",
																"nodeType": "YulBlock",
																"src": "6582:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6584:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6584:77:8"
																			},
																			"nativeSrc": "6584:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6584:79:8"
																		},
																		"nativeSrc": "6584:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6584:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6557:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6557:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6566:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6566:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6553:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6553:3:8"
																		},
																		"nativeSrc": "6553:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6553:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6578:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6578:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6549:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6549:3:8"
																},
																"nativeSrc": "6549:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6549:32:8"
															},
															"nativeSrc": "6546:119:8",
															"nodeType": "YulIf",
															"src": "6546:119:8"
														},
														{
															"nativeSrc": "6675:117:8",
															"nodeType": "YulBlock",
															"src": "6675:117:8",
															"statements": [
																{
																	"nativeSrc": "6690:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6690:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6704:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6704:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6694:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6694:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6719:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6719:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6754:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6754:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6765:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6765:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6750:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6750:3:8"
																				},
																				"nativeSrc": "6750:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6750:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6774:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6774:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6729:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6729:20:8"
																		},
																		"nativeSrc": "6729:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6729:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6719:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6719:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6802:118:8",
															"nodeType": "YulBlock",
															"src": "6802:118:8",
															"statements": [
																{
																	"nativeSrc": "6817:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6817:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6831:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6831:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6821:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6821:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6847:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6847:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6882:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6882:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6893:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6893:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6878:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6878:3:8"
																				},
																				"nativeSrc": "6878:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6878:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6902:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6902:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6857:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6857:20:8"
																		},
																		"nativeSrc": "6857:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6857:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6847:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6847:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6453:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6498:9:8",
														"nodeType": "YulTypedName",
														"src": "6498:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6509:7:8",
														"nodeType": "YulTypedName",
														"src": "6509:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6521:6:8",
														"nodeType": "YulTypedName",
														"src": "6521:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6529:6:8",
														"nodeType": "YulTypedName",
														"src": "6529:6:8",
														"type": ""
													}
												],
												"src": "6453:474:8"
											},
											{
												"body": {
													"nativeSrc": "6961:152:8",
													"nodeType": "YulBlock",
													"src": "6961:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6978:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6978:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6981:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:8"
																},
																"nativeSrc": "6971:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6971:88:8"
															},
															"nativeSrc": "6971:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6971:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7075:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7075:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7078:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7078:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7068:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:8"
																},
																"nativeSrc": "7068:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7068:15:8"
															},
															"nativeSrc": "7068:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7068:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7099:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7099:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7102:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7102:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7092:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:8"
																},
																"nativeSrc": "7092:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7092:15:8"
															},
															"nativeSrc": "7092:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7092:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6933:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6933:180:8"
											},
											{
												"body": {
													"nativeSrc": "7170:269:8",
													"nodeType": "YulBlock",
													"src": "7170:269:8",
													"statements": [
														{
															"nativeSrc": "7180:22:8",
															"nodeType": "YulAssignment",
															"src": "7180:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7194:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7194:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7200:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7200:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:8"
																},
																"nativeSrc": "7190:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7190:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7180:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7180:6:8"
																}
															]
														},
														{
															"nativeSrc": "7211:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7211:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7241:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7241:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7247:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7247:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7237:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7237:3:8"
																},
																"nativeSrc": "7237:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7237:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7215:18:8",
																	"nodeType": "YulTypedName",
																	"src": "7215:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7288:51:8",
																"nodeType": "YulBlock",
																"src": "7288:51:8",
																"statements": [
																	{
																		"nativeSrc": "7302:27:8",
																		"nodeType": "YulAssignment",
																		"src": "7302:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7316:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7316:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7324:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7324:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7312:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7312:3:8"
																			},
																			"nativeSrc": "7312:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7312:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7302:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7302:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7268:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7268:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7261:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:8"
																},
																"nativeSrc": "7261:26:8",
																"nodeType": "YulFunctionCall",
																"src": "7261:26:8"
															},
															"nativeSrc": "7258:81:8",
															"nodeType": "YulIf",
															"src": "7258:81:8"
														},
														{
															"body": {
																"nativeSrc": "7391:42:8",
																"nodeType": "YulBlock",
																"src": "7391:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7405:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7405:16:8"
																			},
																			"nativeSrc": "7405:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7405:18:8"
																		},
																		"nativeSrc": "7405:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7405:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7355:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7355:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7378:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7378:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7386:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7386:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7375:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7375:2:8"
																		},
																		"nativeSrc": "7375:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7375:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7352:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7352:2:8"
																},
																"nativeSrc": "7352:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7352:38:8"
															},
															"nativeSrc": "7349:84:8",
															"nodeType": "YulIf",
															"src": "7349:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7119:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7154:4:8",
														"nodeType": "YulTypedName",
														"src": "7154:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7163:6:8",
														"nodeType": "YulTypedName",
														"src": "7163:6:8",
														"type": ""
													}
												],
												"src": "7119:320:8"
											},
											{
												"body": {
													"nativeSrc": "7508:80:8",
													"nodeType": "YulBlock",
													"src": "7508:80:8",
													"statements": [
														{
															"nativeSrc": "7518:22:8",
															"nodeType": "YulAssignment",
															"src": "7518:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7533:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7533:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7527:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7527:5:8"
																},
																"nativeSrc": "7527:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7527:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7518:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7518:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7576:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7576:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7549:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "7549:26:8"
																},
																"nativeSrc": "7549:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7549:33:8"
															},
															"nativeSrc": "7549:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "7549:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7445:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7486:6:8",
														"nodeType": "YulTypedName",
														"src": "7486:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7494:3:8",
														"nodeType": "YulTypedName",
														"src": "7494:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7502:5:8",
														"nodeType": "YulTypedName",
														"src": "7502:5:8",
														"type": ""
													}
												],
												"src": "7445:143:8"
											},
											{
												"body": {
													"nativeSrc": "7671:274:8",
													"nodeType": "YulBlock",
													"src": "7671:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7717:83:8",
																"nodeType": "YulBlock",
																"src": "7717:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7719:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7719:77:8"
																			},
																			"nativeSrc": "7719:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7719:79:8"
																		},
																		"nativeSrc": "7719:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7719:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7692:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7692:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7701:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7688:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7688:3:8"
																		},
																		"nativeSrc": "7688:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7688:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7713:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7713:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7684:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7684:3:8"
																},
																"nativeSrc": "7684:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7684:32:8"
															},
															"nativeSrc": "7681:119:8",
															"nodeType": "YulIf",
															"src": "7681:119:8"
														},
														{
															"nativeSrc": "7810:128:8",
															"nodeType": "YulBlock",
															"src": "7810:128:8",
															"statements": [
																{
																	"nativeSrc": "7825:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7825:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7839:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7839:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7829:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7829:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7854:74:8",
																	"nodeType": "YulAssignment",
																	"src": "7854:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7900:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7900:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7911:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7911:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7896:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7896:3:8"
																				},
																				"nativeSrc": "7896:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7896:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7920:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7920:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7864:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "7864:31:8"
																		},
																		"nativeSrc": "7864:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7864:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7854:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7854:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7594:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7641:9:8",
														"nodeType": "YulTypedName",
														"src": "7641:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7652:7:8",
														"nodeType": "YulTypedName",
														"src": "7652:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7664:6:8",
														"nodeType": "YulTypedName",
														"src": "7664:6:8",
														"type": ""
													}
												],
												"src": "7594:351:8"
											},
											{
												"body": {
													"nativeSrc": "8105:288:8",
													"nodeType": "YulBlock",
													"src": "8105:288:8",
													"statements": [
														{
															"nativeSrc": "8115:26:8",
															"nodeType": "YulAssignment",
															"src": "8115:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8127:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8127:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8138:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8138:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8123:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:8"
																},
																"nativeSrc": "8123:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8123:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8115:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8115:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8195:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8208:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8208:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8219:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8219:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8204:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8204:3:8"
																		},
																		"nativeSrc": "8204:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8151:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8151:43:8"
																},
																"nativeSrc": "8151:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8151:71:8"
															},
															"nativeSrc": "8151:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8151:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8276:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8289:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8289:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8300:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8300:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8285:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8285:3:8"
																		},
																		"nativeSrc": "8285:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8285:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8232:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8232:43:8"
																},
																"nativeSrc": "8232:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8232:72:8"
															},
															"nativeSrc": "8232:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8232:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8358:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8358:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8371:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8371:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8382:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8382:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8367:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8367:3:8"
																		},
																		"nativeSrc": "8367:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8367:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8314:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8314:43:8"
																},
																"nativeSrc": "8314:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8314:72:8"
															},
															"nativeSrc": "8314:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8314:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7951:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8061:9:8",
														"nodeType": "YulTypedName",
														"src": "8061:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8073:6:8",
														"nodeType": "YulTypedName",
														"src": "8073:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8081:6:8",
														"nodeType": "YulTypedName",
														"src": "8081:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8089:6:8",
														"nodeType": "YulTypedName",
														"src": "8089:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8100:4:8",
														"nodeType": "YulTypedName",
														"src": "8100:4:8",
														"type": ""
													}
												],
												"src": "7951:442:8"
											},
											{
												"body": {
													"nativeSrc": "8427:152:8",
													"nodeType": "YulBlock",
													"src": "8427:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8444:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8444:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8447:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8447:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8437:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8437:6:8"
																},
																"nativeSrc": "8437:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8437:88:8"
															},
															"nativeSrc": "8437:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8437:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8541:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8541:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8544:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8544:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8534:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8534:6:8"
																},
																"nativeSrc": "8534:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8534:15:8"
															},
															"nativeSrc": "8534:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8534:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8565:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8568:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8568:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8558:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8558:6:8"
																},
																"nativeSrc": "8558:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8558:15:8"
															},
															"nativeSrc": "8558:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8558:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8399:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8399:180:8"
											},
											{
												"body": {
													"nativeSrc": "8629:147:8",
													"nodeType": "YulBlock",
													"src": "8629:147:8",
													"statements": [
														{
															"nativeSrc": "8639:25:8",
															"nodeType": "YulAssignment",
															"src": "8639:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8662:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8662:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8644:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8644:17:8"
																},
																"nativeSrc": "8644:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8644:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8639:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8639:1:8"
																}
															]
														},
														{
															"nativeSrc": "8673:25:8",
															"nodeType": "YulAssignment",
															"src": "8673:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8696:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8696:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8678:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8678:17:8"
																},
																"nativeSrc": "8678:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8678:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8673:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8673:1:8"
																}
															]
														},
														{
															"nativeSrc": "8707:16:8",
															"nodeType": "YulAssignment",
															"src": "8707:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8718:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8718:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8721:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8721:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8714:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8714:3:8"
																},
																"nativeSrc": "8714:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8714:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8707:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8707:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8747:22:8",
																"nodeType": "YulBlock",
																"src": "8747:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8749:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8749:16:8"
																			},
																			"nativeSrc": "8749:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8749:18:8"
																		},
																		"nativeSrc": "8749:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8749:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8739:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8739:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8742:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8742:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8736:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8736:2:8"
																},
																"nativeSrc": "8736:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8736:10:8"
															},
															"nativeSrc": "8733:36:8",
															"nodeType": "YulIf",
															"src": "8733:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8585:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8616:1:8",
														"nodeType": "YulTypedName",
														"src": "8616:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8619:1:8",
														"nodeType": "YulTypedName",
														"src": "8619:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8625:3:8",
														"nodeType": "YulTypedName",
														"src": "8625:3:8",
														"type": ""
													}
												],
												"src": "8585:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610171575f3560e01c80638f620487116100dc578063b8a11e8211610095578063dd62ed3e1161006f578063dd62ed3e1461041f578063f2fde38b1461044f578063f3c274a61461046b578063ffd9eedb1461048957610171565b8063b8a11e82146103c5578063cfb4fc71146103e3578063d8dfeb451461040157610171565b80638f620487146102ff57806395d89b411461031d5780639acea70d1461033b578063a9059cbb14610359578063ac6068b514610389578063b5113d90146103a757610171565b8063313ce5671161012e578063313ce5671461024d57806348d399e71461026b5780636f713c9c1461028957806370a08231146102a7578063715018a6146102d75780638da5cb5b146102e157610171565b806306fdde0314610175578063095ea7b3146101935780631529a639146101c357806318160ddd146101e157806323b872dd146101ff5780632f13b60c1461022f575b5f80fd5b61017d6104a7565b60405161018a91906111c5565b60405180910390f35b6101ad60048036038101906101a89190611276565b610537565b6040516101ba91906112ce565b60405180910390f35b6101cb610559565b6040516101d891906112f6565b60405180910390f35b6101e96105f9565b6040516101f691906112f6565b60405180910390f35b6102196004803603810190610214919061130f565b610602565b60405161022691906112ce565b60405180910390f35b610237610630565b60405161024491906112ce565b60405180910390f35b61025561063c565b604051610262919061137a565b60405180910390f35b610273610644565b60405161028091906113a2565b60405180910390f35b610291610669565b60405161029e9190611416565b60405180910390f35b6102c160048036038101906102bc919061142f565b61068e565b6040516102ce91906112f6565b60405180910390f35b6102df6106d3565b005b6102e96106e6565b6040516102f691906113a2565b60405180910390f35b61030761070e565b60405161031491906112f6565b60405180910390f35b610325610714565b60405161033291906111c5565b60405180910390f35b6103436107a4565b60405161035091906113a2565b60405180910390f35b610373600480360381019061036e9190611276565b6107c9565b60405161038091906112ce565b60405180910390f35b6103916107eb565b60405161039e91906112ce565b60405180910390f35b6103af6107f6565b6040516103bc91906112f6565b60405180910390f35b6103cd610895565b6040516103da91906112f6565b60405180910390f35b6103eb61089b565b6040516103f891906112f6565b60405180910390f35b6104096108a1565b6040516104169190611416565b60405180910390f35b6104396004803603810190610434919061145a565b6108c7565b60405161044691906112f6565b60405180910390f35b6104696004803603810190610464919061142f565b610949565b005b6104736109cd565b60405161048091906112ce565b60405180910390f35b6104916109df565b60405161049e91906111c5565b60405180910390f35b6060600380546104b6906114c5565b80601f01602080910402602001604051908101604052809291908181526020018280546104e2906114c5565b801561052d5780601f106105045761010080835404028352916020019161052d565b820191905f5260205f20905b81548152906001019060200180831161051057829003601f168201915b5050505050905090565b5f80610541610a6e565b905061054e818585610a75565b600191505092915050565b5f600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105b591906113a2565b602060405180830381865afa1580156105d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105f49190611509565b905090565b5f600254905090565b5f8061060c610a6e565b9050610619858285610a87565b610624858585610b19565b60019150509392505050565b5f600954421015905090565b5f6012905090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106db610c09565b6106e45f610c90565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b606060048054610723906114c5565b80601f016020809104026020016040519081016040528092919081815260200182805461074f906114c5565b801561079a5780601f106107715761010080835404028352916020019161079a565b820191905f5260205f20905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f806107d3610a6e565b90506107e0818585610b19565b600191505092915050565b5f6009544210905090565b5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161085191906113a2565b602060405180830381865afa15801561086c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108909190611509565b905090565b600a5481565b600b5481565b600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610951610c09565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109b891906113a2565b60405180910390fd5b6109ca81610c90565b50565b600c5f9054906101000a900460ff1681565b6060600c5f9054906101000a900460ff1615610a32576040518060400160405280600381526020017f50555400000000000000000000000000000000000000000000000000000000008152509050610a6b565b6040518060400160405280600481526020017f43414c4c0000000000000000000000000000000000000000000000000000000081525090505b90565b5f33905090565b610a828383836001610d53565b505050565b5f610a9284846108c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b135781811015610b04578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610afb93929190611534565b60405180910390fd5b610b1284848484035f610d53565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b89575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b8091906113a2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf9575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bf091906113a2565b60405180910390fd5b610c04838383610f22565b505050565b610c11610a6e565b73ffffffffffffffffffffffffffffffffffffffff16610c2f6106e6565b73ffffffffffffffffffffffffffffffffffffffff1614610c8e57610c52610a6e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c8591906113a2565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dc3575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dba91906113a2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e33575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e2a91906113a2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f1c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1391906112f6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f72578060025f828254610f669190611596565b92505081905550611040565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ffb578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ff293929190611534565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611087578060025f82825403925050819055506110d1565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161112e91906112f6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611172578082015181840152602081019050611157565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111978261113b565b6111a18185611145565b93506111b1818560208601611155565b6111ba8161117d565b840191505092915050565b5f6020820190508181035f8301526111dd818461118d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611212826111e9565b9050919050565b61122281611208565b811461122c575f80fd5b50565b5f8135905061123d81611219565b92915050565b5f819050919050565b61125581611243565b811461125f575f80fd5b50565b5f813590506112708161124c565b92915050565b5f806040838503121561128c5761128b6111e5565b5b5f6112998582860161122f565b92505060206112aa85828601611262565b9150509250929050565b5f8115159050919050565b6112c8816112b4565b82525050565b5f6020820190506112e15f8301846112bf565b92915050565b6112f081611243565b82525050565b5f6020820190506113095f8301846112e7565b92915050565b5f805f60608486031215611326576113256111e5565b5b5f6113338682870161122f565b93505060206113448682870161122f565b925050604061135586828701611262565b9150509250925092565b5f60ff82169050919050565b6113748161135f565b82525050565b5f60208201905061138d5f83018461136b565b92915050565b61139c81611208565b82525050565b5f6020820190506113b55f830184611393565b92915050565b5f819050919050565b5f6113de6113d96113d4846111e9565b6113bb565b6111e9565b9050919050565b5f6113ef826113c4565b9050919050565b5f611400826113e5565b9050919050565b611410816113f6565b82525050565b5f6020820190506114295f830184611407565b92915050565b5f60208284031215611444576114436111e5565b5b5f6114518482850161122f565b91505092915050565b5f80604083850312156114705761146f6111e5565b5b5f61147d8582860161122f565b925050602061148e8582860161122f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114dc57607f821691505b6020821081036114ef576114ee611498565b5b50919050565b5f815190506115038161124c565b92915050565b5f6020828403121561151e5761151d6111e5565b5b5f61152b848285016114f5565b91505092915050565b5f6060820190506115475f830186611393565b61155460208301856112e7565b61156160408301846112e7565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115a082611243565b91506115ab83611243565b92508282019050808211156115c3576115c2611569565b5b9291505056fea26469706673582212208a15bae5ca20999aa5bcd757f34cb93679edb360517cec54ec4f834c619b1ad164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F620487 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB8A11E82 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xF3C274A6 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xFFD9EEDB EQ PUSH2 0x489 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xB8A11E82 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xCFB4FC71 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xD8DFEB45 EQ PUSH2 0x401 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8F620487 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x9ACEA70D EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xAC6068B5 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xB5113D90 EQ PUSH2 0x3A7 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x48D399E7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6F713C9C EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E1 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1529A639 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2F13B60C EQ PUSH2 0x22F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x6D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x491 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B6 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x504 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x510 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x541 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x54E DUP2 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60C PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP6 DUP3 DUP6 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x624 DUP6 DUP6 DUP6 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DB PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x6E4 PUSH0 PUSH2 0xC90 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74F SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x771 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7D3 PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH2 0x7E0 DUP2 DUP6 DUP6 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0xC09 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CA DUP2 PUSH2 0xC90 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5055540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43414C4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA82 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA92 DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB13 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB12 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD53 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC04 DUP4 DUP4 DUP4 PUSH2 0xF22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC11 PUSH2 0xA6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2F PUSH2 0x6E6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8E JUMPI PUSH2 0xC52 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE33 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF1C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF72 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1040 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFFB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1087 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10D1 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1172 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1157 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1197 DUP3 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x11A1 DUP2 DUP6 PUSH2 0x1145 JUMP JUMPDEST SWAP4 POP PUSH2 0x11B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x11BA DUP2 PUSH2 0x117D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11DD DUP2 DUP5 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 DUP3 PUSH2 0x11E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP2 EQ PUSH2 0x122C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123D DUP2 PUSH2 0x1219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1255 DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP2 EQ PUSH2 0x125F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1270 DUP2 PUSH2 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128C JUMPI PUSH2 0x128B PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1299 DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AA DUP6 DUP3 DUP7 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C8 DUP2 PUSH2 0x12B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F0 DUP2 PUSH2 0x1243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1309 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1325 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1333 DUP7 DUP3 DUP8 ADD PUSH2 0x122F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1344 DUP7 DUP3 DUP8 ADD PUSH2 0x122F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1355 DUP7 DUP3 DUP8 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x135F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138D PUSH0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DE PUSH2 0x13D9 PUSH2 0x13D4 DUP5 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EF DUP3 PUSH2 0x13C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1400 DUP3 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x13F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1429 PUSH0 DUP4 ADD DUP5 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1443 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1451 DUP5 DUP3 DUP6 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1470 JUMPI PUSH2 0x146F PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147D DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x148E DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1498 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1503 DUP2 PUSH2 0x124C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151E JUMPI PUSH2 0x151D PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152B DUP5 DUP3 DUP6 ADD PUSH2 0x14F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1547 PUSH0 DUP4 ADD DUP7 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x1554 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x1561 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15A0 DUP3 PUSH2 0x1243 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AB DUP4 PUSH2 0x1243 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 ISZERO 0xBA 0xE5 0xCA KECCAK256 SWAP10 SWAP11 0xA5 0xBC 0xD7 JUMPI RETURN 0x4C 0xB9 CALLDATASIZE PUSH26 0xEDB360517CEC54EC4F834C619B1AD164736F6C63430008160033 ",
							"sourceMap": "228:2611:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:121:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2445:105:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:32:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;520:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:30:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:35:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2555:107:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2312:127;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;467:17:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2668:166;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2185:121:7:-;2238:7;2264:10;;;;;;;;;;;:20;;;2293:4;2264:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2257:42;;2185:121;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2445:105:7:-;2487:4;2529:14;;2510:15;:33;;2503:40;;2445:105;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;290:32:7:-;;;;;;;;;;;;;:::o;520:27::-;;;;;;;;;;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;369:30:7:-;;;;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;328:35:7:-;;;;;;;;;;;;;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2555:107:7:-;2600:4;2641:14;;2623:15;:32;2616:39;;2555:107;:::o;2312:127::-;2368:7;2394:13;;;;;;;;;;;:23;;;2426:4;2394:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2387:45;;2312:127;:::o;405:25::-;;;;:::o;436:::-;;;;:::o;490:24::-;;;;;;;;;;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;467:17:7:-;;;;;;;;;;;;;:::o;2668:166::-;2711:13;2740:5;;;;;;;;;;;2736:92;;;2761:12;;;;;;;;;;;;;;;;;;;;;2736:92;2804:13;;;;;;;;;;;;;;;;;;;2668:166;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:118::-;4940:24;4958:5;4940:24;:::i;:::-;4935:3;4928:37;4853:118;;:::o;4977:222::-;5070:4;5108:2;5097:9;5093:18;5085:26;;5121:71;5189:1;5178:9;5174:17;5165:6;5121:71;:::i;:::-;4977:222;;;;:::o;5205:60::-;5233:3;5254:5;5247:12;;5205:60;;;:::o;5271:142::-;5321:9;5354:53;5372:34;5381:24;5399:5;5381:24;:::i;:::-;5372:34;:::i;:::-;5354:53;:::i;:::-;5341:66;;5271:142;;;:::o;5419:126::-;5469:9;5502:37;5533:5;5502:37;:::i;:::-;5489:50;;5419:126;;;:::o;5551:140::-;5615:9;5648:37;5679:5;5648:37;:::i;:::-;5635:50;;5551:140;;;:::o;5697:159::-;5798:51;5843:5;5798:51;:::i;:::-;5793:3;5786:64;5697:159;;:::o;5862:250::-;5969:4;6007:2;5996:9;5992:18;5984:26;;6020:85;6102:1;6091:9;6087:17;6078:6;6020:85;:::i;:::-;5862:250;;;;:::o;6118:329::-;6177:6;6226:2;6214:9;6205:7;6201:23;6197:32;6194:119;;;6232:79;;:::i;:::-;6194:119;6352:1;6377:53;6422:7;6413:6;6402:9;6398:22;6377:53;:::i;:::-;6367:63;;6323:117;6118:329;;;;:::o;6453:474::-;6521:6;6529;6578:2;6566:9;6557:7;6553:23;6549:32;6546:119;;;6584:79;;:::i;:::-;6546:119;6704:1;6729:53;6774:7;6765:6;6754:9;6750:22;6729:53;:::i;:::-;6719:63;;6675:117;6831:2;6857:53;6902:7;6893:6;6882:9;6878:22;6857:53;:::i;:::-;6847:63;;6802:118;6453:474;;;;;:::o;6933:180::-;6981:77;6978:1;6971:88;7078:4;7075:1;7068:15;7102:4;7099:1;7092:15;7119:320;7163:6;7200:1;7194:4;7190:12;7180:22;;7247:1;7241:4;7237:12;7268:18;7258:81;;7324:4;7316:6;7312:17;7302:27;;7258:81;7386:2;7378:6;7375:14;7355:18;7352:38;7349:84;;7405:18;;:::i;:::-;7349:84;7170:269;7119:320;;;:::o;7445:143::-;7502:5;7533:6;7527:13;7518:22;;7549:33;7576:5;7549:33;:::i;:::-;7445:143;;;;:::o;7594:351::-;7664:6;7713:2;7701:9;7692:7;7688:23;7684:32;7681:119;;;7719:79;;:::i;:::-;7681:119;7839:1;7864:64;7920:7;7911:6;7900:9;7896:22;7864:64;:::i;:::-;7854:74;;7810:128;7594:351;;;;:::o;7951:442::-;8100:4;8138:2;8127:9;8123:18;8115:26;;8151:71;8219:1;8208:9;8204:17;8195:6;8151:71;:::i;:::-;8232:72;8300:2;8289:9;8285:18;8276:6;8232:72;:::i;:::-;8314;8382:2;8371:9;8367:18;8358:6;8314:72;:::i;:::-;7951:442;;;;;;:::o;8399:180::-;8447:77;8444:1;8437:88;8544:4;8541:1;8534:15;8568:4;8565:1;8558:15;8585:191;8625:3;8644:20;8662:1;8644:20;:::i;:::-;8639:25;;8678:20;8696:1;8678:20;:::i;:::-;8673:25;;8721:1;8718;8714:9;8707:16;;8742:3;8739:1;8736:10;8733:36;;;8749:18;;:::i;:::-;8733:36;8585:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1126200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"collateral()": "infinite",
								"collateralAddress()": "2553",
								"consideration()": "infinite",
								"considerationAddress()": "2575",
								"decimals()": "361",
								"expirationDate()": "2448",
								"getCollateralBalance()": "infinite",
								"getConsiderationBalance()": "infinite",
								"isExpired()": "2580",
								"isNotExpired()": "2554",
								"isPut()": "2554",
								"name()": "infinite",
								"optionType()": "infinite",
								"owner()": "2648",
								"renounceOwnership()": "infinite",
								"strikeDen()": "2492",
								"strikeNum()": "2470",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1321,
									"end": 2179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1618,
									"end": 1628,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1596,
									"end": 1600,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1602,
									"end": 1608,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1677,
									"end": 1678,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1663,
									"end": 1673,
									"modifierDepth": 3,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1663,
									"end": 1678,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1659,
									"end": 1702,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1659,
									"end": 1702,
									"modifierDepth": 3,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "9A5818D800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1702,
									"modifierDepth": 3,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1659,
									"end": 1702,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1659,
									"end": 1702,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1731,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1716,
									"end": 1726,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1731,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1755,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1712,
									"end": 1755,
									"modifierDepth": 3,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "9A5818D800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1755,
									"modifierDepth": 3,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1755,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1712,
									"end": 1755,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1802,
									"modifierDepth": 3,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 1769,
									"end": 1784,
									"modifierDepth": 3,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1769,
									"end": 1802,
									"modifierDepth": 3,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1830,
									"modifierDepth": 3,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1830,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1765,
									"end": 1830,
									"modifierDepth": 3,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FB2A675200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1830,
									"modifierDepth": 3,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1830,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1765,
									"end": 1830,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1858,
									"end": 1873,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1855,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1841,
									"end": 1873,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1873,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1873,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1873,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1905,
									"modifierDepth": 3,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1883,
									"end": 1892,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1883,
									"end": 1905,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1883,
									"end": 1905,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1883,
									"end": 1905,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1883,
									"end": 1905,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1927,
									"end": 1937,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1915,
									"end": 1924,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1915,
									"end": 1937,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1915,
									"end": 1937,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1915,
									"end": 1937,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1915,
									"end": 1937,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1967,
									"end": 1985,
									"modifierDepth": 3,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1964,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1947,
									"end": 1964,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1985,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2039,
									"modifierDepth": 3,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2015,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1995,
									"end": 2015,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2039,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2057,
									"end": 2063,
									"modifierDepth": 3,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2054,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 2049,
									"end": 2054,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2063,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2111,
									"modifierDepth": 3,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2083,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 2073,
									"end": 2083,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2112,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2166,
									"modifierDepth": 3,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2135,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 2122,
									"end": 2135,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2167,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2754,
									"end": 2796,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2747,
									"end": 2752,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2743,
									"end": 2797,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 2875,
									"end": 2899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2809,
									"end": 2905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3002,
									"end": 3007,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2984,
									"end": 3008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2977,
									"end": 2982,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2974,
									"end": 3009,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3024,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3021,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3025,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 3033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3096,
									"end": 3101,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3127,
									"end": 3133,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3121,
									"end": 3134,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3134,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3134,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3170,
									"end": 3175,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3143,
									"end": 3176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3225,
									"end": 3232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3259,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3243,
									"end": 3259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3243,
									"end": 3259,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 3362,
									"end": 3367,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3344,
									"end": 3368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3342,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3369,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3384,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3381,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3373,
									"end": 3385,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3271,
									"end": 3393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3456,
									"end": 3461,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3487,
									"end": 3493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3481,
									"end": 3494,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3494,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3494,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3530,
									"end": 3535,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3503,
									"end": 3536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3638,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3548,
									"end": 3638,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3625,
									"end": 3630,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3618,
									"end": 3631,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3632,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3632,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3632,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3638,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3638,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3638,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3644,
									"end": 3760,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3644,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3714,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3729,
									"end": 3734,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3714,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3714,
									"end": 3735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3714,
									"end": 3735,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3714,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3707,
									"end": 3712,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3704,
									"end": 3736,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3694,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3694,
									"end": 3754,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3747,
									"end": 3748,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3740,
									"end": 3752,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3694,
									"end": 3754,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3694,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3644,
									"end": 3760,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3644,
									"end": 3760,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 3903,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 3766,
									"end": 3903,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3820,
									"end": 3825,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3857,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3845,
									"end": 3858,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3836,
									"end": 3858,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3836,
									"end": 3858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3891,
									"end": 3896,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3867,
									"end": 3897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 3903,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 3903,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 3903,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 3903,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 3903,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4059,
									"end": 4065,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4067,
									"end": 4073,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4075,
									"end": 4081,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4083,
									"end": 4089,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4097,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4099,
									"end": 4105,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4107,
									"end": 4113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4115,
									"end": 4121,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4164,
									"end": 4167,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4152,
									"end": 4161,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4143,
									"end": 4150,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 4139,
									"end": 4162,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4135,
									"end": 4168,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 4132,
									"end": 4252,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4132,
									"end": 4252,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4132,
									"end": 4252,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4171,
									"end": 4250,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4171,
									"end": 4250,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 4171,
									"end": 4250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4171,
									"end": 4250,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4171,
									"end": 4250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4132,
									"end": 4252,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 4132,
									"end": 4252,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4312,
									"end": 4313,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4310,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4314,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4291,
									"end": 4315,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4342,
									"end": 4360,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4334,
									"end": 4340,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4331,
									"end": 4361,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4328,
									"end": 4445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4364,
									"end": 4443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4364,
									"end": 4443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4364,
									"end": 4443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4364,
									"end": 4443,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4364,
									"end": 4443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4445,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4328,
									"end": 4445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4469,
									"end": 4543,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4535,
									"end": 4542,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 4526,
									"end": 4532,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4515,
									"end": 4524,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 4511,
									"end": 4533,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4469,
									"end": 4543,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4469,
									"end": 4543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4469,
									"end": 4543,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4469,
									"end": 4543,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4459,
									"end": 4543,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 4459,
									"end": 4543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4262,
									"end": 4553,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4613,
									"end": 4615,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4611,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4598,
									"end": 4616,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4592,
									"end": 4617,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4636,
									"end": 4642,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4633,
									"end": 4663,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4630,
									"end": 4747,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4630,
									"end": 4747,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4630,
									"end": 4747,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4666,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4666,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4745,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4666,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4630,
									"end": 4747,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4630,
									"end": 4747,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4771,
									"end": 4845,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4837,
									"end": 4844,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 4828,
									"end": 4834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4835,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4771,
									"end": 4845,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4771,
									"end": 4845,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4771,
									"end": 4845,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4771,
									"end": 4845,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4845,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4845,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4563,
									"end": 4855,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4894,
									"end": 4896,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4920,
									"end": 4984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4976,
									"end": 4983,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 4967,
									"end": 4973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4956,
									"end": 4965,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 4952,
									"end": 4974,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4920,
									"end": 4984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4920,
									"end": 4984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4920,
									"end": 4984,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4920,
									"end": 4984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4910,
									"end": 4984,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 4910,
									"end": 4984,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4865,
									"end": 4994,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5033,
									"end": 5035,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5059,
									"end": 5123,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 5115,
									"end": 5122,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 5106,
									"end": 5112,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5095,
									"end": 5104,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 5091,
									"end": 5113,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5059,
									"end": 5123,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5059,
									"end": 5123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5059,
									"end": 5123,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 5059,
									"end": 5123,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5049,
									"end": 5123,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 5049,
									"end": 5123,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5004,
									"end": 5133,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5175,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5199,
									"end": 5263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 5255,
									"end": 5262,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 5246,
									"end": 5252,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5244,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 5231,
									"end": 5253,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5199,
									"end": 5263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5199,
									"end": 5263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5199,
									"end": 5263,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 5199,
									"end": 5263,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5189,
									"end": 5263,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5189,
									"end": 5263,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5312,
									"end": 5315,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 5339,
									"end": 5403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5395,
									"end": 5402,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 5386,
									"end": 5392,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5384,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 5371,
									"end": 5393,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5339,
									"end": 5403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5339,
									"end": 5403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5339,
									"end": 5403,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5339,
									"end": 5403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5329,
									"end": 5403,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5329,
									"end": 5403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5283,
									"end": 5413,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5452,
									"end": 5455,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 5479,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5535,
									"end": 5542,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 5526,
									"end": 5532,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5515,
									"end": 5524,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 5511,
									"end": 5533,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5479,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5479,
									"end": 5543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5479,
									"end": 5543,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5479,
									"end": 5543,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5469,
									"end": 5543,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5469,
									"end": 5543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5423,
									"end": 5553,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5595,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5619,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5672,
									"end": 5679,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 5663,
									"end": 5669,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5652,
									"end": 5661,
									"name": "DUP13",
									"source": 8
								},
								{
									"begin": 5648,
									"end": 5670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5619,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 5619,
									"end": 5680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5619,
									"end": 5680,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5619,
									"end": 5680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5680,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5609,
									"end": 5680,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5563,
									"end": 5690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 5697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5703,
									"end": 5802,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 5703,
									"end": 5802,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5755,
									"end": 5761,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5789,
									"end": 5794,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5773,
									"end": 5795,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5773,
									"end": 5795,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5703,
									"end": 5802,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5703,
									"end": 5802,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5703,
									"end": 5802,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5703,
									"end": 5802,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5808,
									"end": 5988,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5808,
									"end": 5988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5856,
									"end": 5933,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5853,
									"end": 5854,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5846,
									"end": 5934,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5953,
									"end": 5957,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 5950,
									"end": 5951,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5943,
									"end": 5958,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5977,
									"end": 5981,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5974,
									"end": 5975,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5967,
									"end": 5982,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6314,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5994,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6038,
									"end": 6044,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6075,
									"end": 6076,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6069,
									"end": 6073,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6065,
									"end": 6077,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 6055,
									"end": 6077,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6055,
									"end": 6077,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6123,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6116,
									"end": 6120,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6112,
									"end": 6124,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6143,
									"end": 6161,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6133,
									"end": 6214,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6133,
									"end": 6214,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6199,
									"end": 6203,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 6191,
									"end": 6197,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6187,
									"end": 6204,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6204,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6204,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6133,
									"end": 6214,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6133,
									"end": 6214,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6261,
									"end": 6263,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6259,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6250,
									"end": 6264,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6230,
									"end": 6248,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6265,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 6224,
									"end": 6308,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6224,
									"end": 6308,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 6280,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 6280,
									"end": 6298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6298,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 6280,
									"end": 6298,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6224,
									"end": 6308,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6224,
									"end": 6308,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6045,
									"end": 6314,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6314,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6314,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6314,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6320,
									"end": 6461,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 6320,
									"end": 6461,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6369,
									"end": 6373,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6392,
									"end": 6395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6384,
									"end": 6395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6384,
									"end": 6395,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6415,
									"end": 6418,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6412,
									"end": 6413,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6405,
									"end": 6419,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6449,
									"end": 6453,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6446,
									"end": 6447,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6436,
									"end": 6454,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 6428,
									"end": 6454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6428,
									"end": 6454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6320,
									"end": 6461,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6320,
									"end": 6461,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6320,
									"end": 6461,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6320,
									"end": 6461,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6560,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 6467,
									"end": 6560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6504,
									"end": 6510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6546,
									"end": 6548,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6539,
									"end": 6544,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6535,
									"end": 6549,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6531,
									"end": 6554,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 6521,
									"end": 6554,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6521,
									"end": 6554,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6560,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6560,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6566,
									"end": 6673,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 6566,
									"end": 6673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6610,
									"end": 6618,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6660,
									"end": 6665,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6654,
									"end": 6658,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6650,
									"end": 6666,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 6629,
									"end": 6666,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6629,
									"end": 6666,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6566,
									"end": 6673,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6566,
									"end": 6673,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6566,
									"end": 6673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6566,
									"end": 6673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6566,
									"end": 6673,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6748,
									"end": 6754,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6798,
									"end": 6799,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6786,
									"end": 6796,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6782,
									"end": 6800,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6821,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6851,
									"end": 6917,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6840,
									"end": 6849,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6821,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 6821,
									"end": 6918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6821,
									"end": 6918,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6821,
									"end": 6918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6939,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6969,
									"end": 6977,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6958,
									"end": 6967,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6939,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 6939,
									"end": 6978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6939,
									"end": 6978,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6939,
									"end": 6978,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6927,
									"end": 6978,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 6927,
									"end": 6978,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7011,
									"end": 7015,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7007,
									"end": 7016,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7000,
									"end": 7005,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6996,
									"end": 7017,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6987,
									"end": 7017,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6987,
									"end": 7017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7064,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7050,
									"end": 7058,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7046,
									"end": 7065,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7039,
									"end": 7044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7036,
									"end": 7066,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7026,
									"end": 7066,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7026,
									"end": 7066,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6755,
									"end": 7072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6755,
									"end": 7072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 7072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7138,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7078,
									"end": 7138,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7106,
									"end": 7109,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7127,
									"end": 7132,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7120,
									"end": 7132,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7120,
									"end": 7132,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7138,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7138,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7138,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7138,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7144,
									"end": 7286,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 7144,
									"end": 7286,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7194,
									"end": 7203,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7227,
									"end": 7280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 7245,
									"end": 7279,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 7254,
									"end": 7278,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7254,
									"end": 7278,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 7254,
									"end": 7278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7254,
									"end": 7278,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 7254,
									"end": 7278,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7245,
									"end": 7279,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7245,
									"end": 7279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7245,
									"end": 7279,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 7245,
									"end": 7279,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7227,
									"end": 7280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 7227,
									"end": 7280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7227,
									"end": 7280,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 7227,
									"end": 7280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7144,
									"end": 7286,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7144,
									"end": 7286,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7144,
									"end": 7286,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7144,
									"end": 7286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7367,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 7292,
									"end": 7367,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7335,
									"end": 7338,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7356,
									"end": 7361,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7349,
									"end": 7361,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7349,
									"end": 7361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7367,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7367,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7367,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7373,
									"end": 7642,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 7373,
									"end": 7642,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7522,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 7514,
									"end": 7521,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7522,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 7483,
									"end": 7522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7522,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 7483,
									"end": 7522,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7544,
									"end": 7635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 7593,
									"end": 7634,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 7617,
									"end": 7633,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7593,
									"end": 7634,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 7593,
									"end": 7634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7593,
									"end": 7634,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 7593,
									"end": 7634,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7585,
									"end": 7591,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7578,
									"end": 7582,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7572,
									"end": 7583,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7544,
									"end": 7635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 7544,
									"end": 7635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7544,
									"end": 7635,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 7544,
									"end": 7635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7538,
									"end": 7542,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7531,
									"end": 7636,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7449,
									"end": 7642,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7373,
									"end": 7642,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7373,
									"end": 7642,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7373,
									"end": 7642,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7373,
									"end": 7642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7648,
									"end": 7721,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 7648,
									"end": 7721,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7693,
									"end": 7696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7648,
									"end": 7721,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7648,
									"end": 7721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7727,
									"end": 7916,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7727,
									"end": 7916,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7804,
									"end": 7836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7804,
									"end": 7836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 7804,
									"end": 7836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7804,
									"end": 7836,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7804,
									"end": 7836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7845,
									"end": 7910,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7903,
									"end": 7909,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7895,
									"end": 7901,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7893,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7845,
									"end": 7910,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 7845,
									"end": 7910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7845,
									"end": 7910,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7845,
									"end": 7910,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7780,
									"end": 7916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7727,
									"end": 7916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7727,
									"end": 7916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7727,
									"end": 7916,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7922,
									"end": 8108,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 7922,
									"end": 8108,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7999,
									"end": 8002,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7992,
									"end": 7997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8003,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8053,
									"end": 8092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 8090,
									"end": 8091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8083,
									"end": 8088,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8053,
									"end": 8092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 8053,
									"end": 8092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8053,
									"end": 8092,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 8053,
									"end": 8092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8026,
									"end": 8027,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8019,
									"end": 8024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8015,
									"end": 8028,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8006,
									"end": 8028,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8006,
									"end": 8028,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7982,
									"end": 8102,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7922,
									"end": 8108,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7922,
									"end": 8108,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7922,
									"end": 8108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8114,
									"end": 8657,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 8114,
									"end": 8657,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8215,
									"end": 8217,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8210,
									"end": 8213,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8207,
									"end": 8218,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8204,
									"end": 8650,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8204,
									"end": 8650,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 8204,
									"end": 8650,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8249,
									"end": 8287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 8281,
									"end": 8286,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8249,
									"end": 8287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 8249,
									"end": 8287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8249,
									"end": 8287,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 8249,
									"end": 8287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8333,
									"end": 8362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 8351,
									"end": 8361,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8333,
									"end": 8362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 8333,
									"end": 8362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8333,
									"end": 8362,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 8333,
									"end": 8362,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8323,
									"end": 8331,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8319,
									"end": 8363,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8516,
									"end": 8518,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8504,
									"end": 8514,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8501,
									"end": 8519,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8498,
									"end": 8547,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8498,
									"end": 8547,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 8498,
									"end": 8547,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8537,
									"end": 8545,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8522,
									"end": 8545,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8522,
									"end": 8545,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8498,
									"end": 8547,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 8498,
									"end": 8547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8560,
									"end": 8640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 8616,
									"end": 8638,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 8634,
									"end": 8637,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8616,
									"end": 8638,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 8616,
									"end": 8638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8616,
									"end": 8638,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 8616,
									"end": 8638,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8606,
									"end": 8614,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8602,
									"end": 8639,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8589,
									"end": 8600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8560,
									"end": 8640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 8560,
									"end": 8640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8560,
									"end": 8640,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 8560,
									"end": 8640,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8219,
									"end": 8650,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8219,
									"end": 8650,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8204,
									"end": 8650,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 8204,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8114,
									"end": 8657,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8114,
									"end": 8657,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8114,
									"end": 8657,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8114,
									"end": 8657,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8780,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 8663,
									"end": 8780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8717,
									"end": 8725,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8767,
									"end": 8772,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8761,
									"end": 8765,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8757,
									"end": 8773,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 8736,
									"end": 8773,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8736,
									"end": 8773,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8780,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8780,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8780,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8780,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8955,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 8786,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8830,
									"end": 8836,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8863,
									"end": 8914,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 8911,
									"end": 8912,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8907,
									"end": 8913,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8899,
									"end": 8904,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8896,
									"end": 8897,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 8892,
									"end": 8905,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8863,
									"end": 8914,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 8863,
									"end": 8914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8863,
									"end": 8914,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 8863,
									"end": 8914,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8859,
									"end": 8915,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8944,
									"end": 8948,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8938,
									"end": 8942,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8934,
									"end": 8949,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8924,
									"end": 8949,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8924,
									"end": 8949,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8837,
									"end": 8955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8955,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8955,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8960,
									"end": 9255,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 8960,
									"end": 9255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9036,
									"end": 9040,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 9207,
									"end": 9210,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9201,
									"end": 9205,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9182,
									"end": 9211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 9182,
									"end": 9211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9182,
									"end": 9211,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 9182,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9174,
									"end": 9211,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9174,
									"end": 9211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9244,
									"end": 9247,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9241,
									"end": 9242,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 9237,
									"end": 9248,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9231,
									"end": 9235,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9228,
									"end": 9249,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 9220,
									"end": 9249,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9220,
									"end": 9249,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8960,
									"end": 9255,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8960,
									"end": 9255,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8960,
									"end": 9255,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8960,
									"end": 9255,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8960,
									"end": 9255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9260,
									"end": 10655,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 9260,
									"end": 10655,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9377,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 9410,
									"end": 9413,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9377,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 9377,
									"end": 9414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9377,
									"end": 9414,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 9377,
									"end": 9414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9479,
									"end": 9497,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9471,
									"end": 9477,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9468,
									"end": 9498,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9465,
									"end": 9521,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9465,
									"end": 9521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 9465,
									"end": 9521,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9501,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 9501,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 9501,
									"end": 9519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9501,
									"end": 9519,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 9501,
									"end": 9519,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9465,
									"end": 9521,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 9465,
									"end": 9521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9545,
									"end": 9583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9577,
									"end": 9581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9571,
									"end": 9582,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 9545,
									"end": 9583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 9545,
									"end": 9583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9545,
									"end": 9583,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9545,
									"end": 9583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9630,
									"end": 9697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 9690,
									"end": 9696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9682,
									"end": 9688,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9676,
									"end": 9680,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9630,
									"end": 9697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 9630,
									"end": 9697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9630,
									"end": 9697,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 9630,
									"end": 9697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9748,
									"end": 9752,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9735,
									"end": 9752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9735,
									"end": 9752,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9780,
									"end": 9782,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 9772,
									"end": 9778,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9769,
									"end": 9783,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9797,
									"end": 9798,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9792,
									"end": 10410,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9792,
									"end": 10410,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 9792,
									"end": 10410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9792,
									"end": 10410,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10454,
									"end": 10455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10471,
									"end": 10477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10468,
									"end": 10545,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10468,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 10468,
									"end": 10545,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10520,
									"end": 10529,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10515,
									"end": 10518,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 10511,
									"end": 10530,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10505,
									"end": 10531,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 10496,
									"end": 10531,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10496,
									"end": 10531,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10468,
									"end": 10545,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 10468,
									"end": 10545,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10571,
									"end": 10638,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 10631,
									"end": 10637,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10624,
									"end": 10629,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10571,
									"end": 10638,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 10571,
									"end": 10638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10571,
									"end": 10638,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 10571,
									"end": 10638,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10565,
									"end": 10569,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10558,
									"end": 10639,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 10427,
									"end": 10649,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9762,
									"end": 10649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9762,
									"end": 10649,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9792,
									"end": 10410,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9792,
									"end": 10410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9844,
									"end": 9848,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 9840,
									"end": 9849,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 9832,
									"end": 9838,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9828,
									"end": 9850,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9878,
									"end": 9915,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9910,
									"end": 9914,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9878,
									"end": 9915,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 9878,
									"end": 9915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9878,
									"end": 9915,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9878,
									"end": 9915,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9937,
									"end": 9938,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9965,
									"end": 9972,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9962,
									"end": 9963,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 9973,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10044,
									"end": 10053,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10039,
									"end": 10042,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 10035,
									"end": 10054,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10029,
									"end": 10055,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 10021,
									"end": 10027,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10014,
									"end": 10056,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 10095,
									"end": 10096,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 10087,
									"end": 10093,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10083,
									"end": 10097,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10097,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10097,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10142,
									"end": 10144,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10131,
									"end": 10140,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10127,
									"end": 10145,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10114,
									"end": 10145,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10114,
									"end": 10145,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9988,
									"end": 9992,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9985,
									"end": 9986,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9981,
									"end": 9993,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 9993,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 9993,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9951,
									"end": 10159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10187,
									"end": 10193,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10178,
									"end": 10185,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10175,
									"end": 10194,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 10172,
									"end": 10351,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10172,
									"end": 10351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 10172,
									"end": 10351,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10245,
									"end": 10254,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10240,
									"end": 10243,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 10236,
									"end": 10255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10230,
									"end": 10256,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 10288,
									"end": 10336,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 10330,
									"end": 10334,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 10322,
									"end": 10328,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 10318,
									"end": 10335,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 10307,
									"end": 10316,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10288,
									"end": 10336,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10288,
									"end": 10336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10288,
									"end": 10336,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 10288,
									"end": 10336,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10286,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10273,
									"end": 10337,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 10195,
									"end": 10351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10172,
									"end": 10351,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 10172,
									"end": 10351,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10397,
									"end": 10398,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 10393,
									"end": 10394,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 10385,
									"end": 10391,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 10381,
									"end": 10395,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 10377,
									"end": 10399,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10371,
									"end": 10375,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 10364,
									"end": 10400,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 9799,
									"end": 10410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9799,
									"end": 10410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9799,
									"end": 10410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9762,
									"end": 10649,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9762,
									"end": 10649,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9762,
									"end": 10649,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9352,
									"end": 10655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9352,
									"end": 10655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9352,
									"end": 10655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9260,
									"end": 10655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9260,
									"end": 10655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9260,
									"end": 10655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10661,
									"end": 10779,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 10661,
									"end": 10779,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10748,
									"end": 10772,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 10766,
									"end": 10771,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10748,
									"end": 10772,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 10748,
									"end": 10772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10748,
									"end": 10772,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 10748,
									"end": 10772,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10743,
									"end": 10746,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10736,
									"end": 10773,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10661,
									"end": 10779,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10661,
									"end": 10779,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10661,
									"end": 10779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10785,
									"end": 11007,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 10785,
									"end": 11007,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10878,
									"end": 10882,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10916,
									"end": 10918,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10905,
									"end": 10914,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10901,
									"end": 10919,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10893,
									"end": 10919,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10893,
									"end": 10919,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10929,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 10997,
									"end": 10998,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10986,
									"end": 10995,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10982,
									"end": 10999,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10973,
									"end": 10979,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10929,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 10929,
									"end": 11000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10929,
									"end": 11000,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 10929,
									"end": 11000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10785,
									"end": 11007,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10785,
									"end": 11007,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10785,
									"end": 11007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10785,
									"end": 11007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10785,
									"end": 11007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 2839,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a15bae5ca20999aa5bcd757f34cb93679edb360517cec54ec4f834c619b1ad164736f6c63430008160033",
									".code": [
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "8F620487"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "B8A11E82"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "F3C274A6"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "FFD9EEDB"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "B8A11E82"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "CFB4FC71"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "D8DFEB45"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "8F620487"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "9ACEA70D"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "AC6068B5"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "B5113D90"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "48D399E7"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "6F713C9C"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "1529A639"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "2F13B60C"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2839,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2185,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2445,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2445,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 290,
											"end": 322,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 290,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 290,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 520,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 520,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 369,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 369,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 328,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 328,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2555,
											"end": 2662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2555,
											"end": 2662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2312,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2312,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 405,
											"end": 430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 405,
											"end": 430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 436,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 436,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 484,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 467,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 467,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2668,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2668,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2284,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2284,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2284,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2293,
											"end": 2297,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2264,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2264,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2264,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2543,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2529,
											"end": 2543,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 322,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 322,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 290,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 520,
											"end": 547,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 520,
											"end": 547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 369,
											"end": 399,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 369,
											"end": 399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 328,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2638,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2394,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2394,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2394,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 405,
											"end": 430,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 436,
											"end": 461,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 436,
											"end": 461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 484,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 467,
											"end": 484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 467,
											"end": 484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2828,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2736,
											"end": 2828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "5055540000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2761,
											"end": 2773,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2828,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2736,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "43414C4C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4971,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4853,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4940,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4964,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4940,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4977,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5121,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5121,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5199,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5265,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5205,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5265,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5413,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5271,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5372,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5399,
											"end": 5404,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5381,
											"end": 5405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5372,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5406,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5372,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5354,
											"end": 5407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5407,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5354,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5545,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5419,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5533,
											"end": 5538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5502,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5502,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5502,
											"end": 5539,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5502,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5545,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5691,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5551,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5679,
											"end": 5684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5648,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5635,
											"end": 5685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5697,
											"end": 5856,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5697,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 5843,
											"end": 5848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5798,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5849,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 5798,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 5850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5697,
											"end": 5856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5697,
											"end": 5856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5697,
											"end": 5856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 6112,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5862,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5996,
											"end": 6005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5984,
											"end": 6010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5984,
											"end": 6010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6087,
											"end": 6104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6020,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6105,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6020,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 6112,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 6112,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 6112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 6112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 6112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6447,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6118,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6228,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6212,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6224,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6229,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6194,
											"end": 6313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6232,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6232,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6232,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6232,
											"end": 6311,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6232,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6313,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6194,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6422,
											"end": 6429,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6411,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6398,
											"end": 6420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6377,
											"end": 6430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6430,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6377,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6447,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6447,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6566,
											"end": 6575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6557,
											"end": 6564,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6581,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6665,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6546,
											"end": 6665,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6584,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6584,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6584,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6584,
											"end": 6663,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6584,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6665,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6546,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6774,
											"end": 6781,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6763,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6750,
											"end": 6772,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6729,
											"end": 6782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6782,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6729,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6782,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6833,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6857,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6902,
											"end": 6909,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6857,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6910,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6857,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 7113,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6933,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6981,
											"end": 7058,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6978,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 7059,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7068,
											"end": 7083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7106,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7099,
											"end": 7100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7107,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7439,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7119,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7201,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7194,
											"end": 7198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7247,
											"end": 7248,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7241,
											"end": 7245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7249,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7258,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7258,
											"end": 7339,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7316,
											"end": 7322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7329,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7258,
											"end": 7339,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7258,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7386,
											"end": 7388,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7375,
											"end": 7389,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7390,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 7349,
											"end": 7433,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7405,
											"end": 7423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7433,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 7349,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7439,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7588,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7445,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7527,
											"end": 7540,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7576,
											"end": 7581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7549,
											"end": 7582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7549,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7588,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7945,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7594,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7713,
											"end": 7715,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7688,
											"end": 7711,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7800,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 7681,
											"end": 7800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7719,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 7719,
											"end": 7798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7798,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7719,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7800,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 7681,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 7920,
											"end": 7927,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 7917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7909,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7896,
											"end": 7918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7864,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7928,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 7864,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 7928,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 7928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8127,
											"end": 8136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8151,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8217,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8151,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 8151,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8151,
											"end": 8222,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8151,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8300,
											"end": 8302,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8285,
											"end": 8303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8282,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8232,
											"end": 8304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8304,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8232,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 8382,
											"end": 8384,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8364,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8314,
											"end": 8386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8579,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8399,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8524,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8541,
											"end": 8542,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8565,
											"end": 8566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8573,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8776,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 8585,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8625,
											"end": 8628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8644,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8644,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8644,
											"end": 8664,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8644,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8696,
											"end": 8697,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8678,
											"end": 8698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8698,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8678,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8698,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8714,
											"end": 8723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 8745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8736,
											"end": 8746,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8769,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 8733,
											"end": 8769,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8749,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8769,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 8733,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/OptionBase.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"collateral()": "d8dfeb45",
							"collateralAddress()": "48d399e7",
							"consideration()": "6f713c9c",
							"considerationAddress()": "9acea70d",
							"decimals()": "313ce567",
							"expirationDate()": "8f620487",
							"getCollateralBalance()": "1529a639",
							"getConsiderationBalance()": "b5113d90",
							"isExpired()": "2f13b60c",
							"isNotExpired()": "ac6068b5",
							"isPut()": "f3c274a6",
							"name()": "06fdde03",
							"optionType()": "ffd9eedb",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"strikeDen()": "cfb4fc71",
							"strikeNum()": "b8a11e82",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_considerationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_strikeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_strikeDen\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPut\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ContractExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractNotExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpiration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStrike\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consideration\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"considerationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConsiderationBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isNotExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optionType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikeDen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikeNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OptionBase.sol\":\"OptionBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/OptionBase.sol\":{\"keccak256\":\"0x0533e643b7b90d3eed4fb9fd19d58fa1fc8786e0f8333e4a19b3370938964f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e10bd9205ea35198566f06ac5950bcda7ebaf100edffe76c2e439b1399cba0bd\",\"dweb:/ipfs/QmYZe9Ng62wwz2SoadULb9U7dbGX3HbaDzBDfbGjVMysur\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1015,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "collateralAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1017,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "considerationAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1019,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "expirationDate",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1021,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "strikeNum",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1023,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "strikeDen",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1025,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "isPut",
								"offset": 0,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1028,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "collateral",
								"offset": 1,
								"slot": "12",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 1031,
								"contract": "contracts/OptionBase.sol:OptionBase",
								"label": "consideration",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IERC20)877"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 939,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1818:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 942,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1864:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 940,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 944,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1907:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 947,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:6"
									},
									"src": "1994:37:6"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "2051:38:6",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2061:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "2071:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:6"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:6"
									},
									"scope": 1002,
									"src": "2037:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2490:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2500:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:6"
											},
											{
												"id": 961,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 962,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2542:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 966,
									"name": "nonReentrant",
									"nameLocation": "2475:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:6"
									},
									"src": "2466:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2614:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2702:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 970,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "2698:86:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "2722:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 972,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2743:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "2736:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:6"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:6"
									},
									"scope": 1002,
									"src": "2575:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2926:170:6",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "3078:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:6"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:6"
									},
									"scope": 1002,
									"src": "2888:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3339:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 997,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 995,
												"id": 999,
												"nodeType": "Return",
												"src": "3349:25:6"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3333:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:6"
									},
									"scope": 1002,
									"src": "3275:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1003,
							"src": "1030:2353:6",
							"usedErrors": [
								947
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:6"
				},
				"id": 6
			},
			"contracts/OptionBase.sol": {
				"ast": {
					"absolutePath": "contracts/OptionBase.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"OptionBase": [
							1253
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1006,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1003,
							"src": "167:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1008,
										"name": "ERC20",
										"nameLocations": [
											"251:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "251:5:7"
									},
									"id": 1009,
									"nodeType": "InheritanceSpecifier",
									"src": "251:5:7"
								},
								{
									"baseName": {
										"id": 1010,
										"name": "Ownable",
										"nameLocations": [
											"258:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "258:7:7"
									},
									"id": 1011,
									"nodeType": "InheritanceSpecifier",
									"src": "258:7:7"
								},
								{
									"baseName": {
										"id": 1012,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"267:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "267:15:7"
									},
									"id": 1013,
									"nodeType": "InheritanceSpecifier",
									"src": "267:15:7"
								}
							],
							"canonicalName": "OptionBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1253,
							"linearizedBaseContracts": [
								1253,
								1002,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "OptionBase",
							"nameLocation": "237:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "48d399e7",
									"id": 1015,
									"mutability": "mutable",
									"name": "collateralAddress",
									"nameLocation": "305:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "290:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1014,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "290:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9acea70d",
									"id": 1017,
									"mutability": "mutable",
									"name": "considerationAddress",
									"nameLocation": "343:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "328:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1016,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f620487",
									"id": 1019,
									"mutability": "mutable",
									"name": "expirationDate",
									"nameLocation": "385:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "369:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1018,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8a11e82",
									"id": 1021,
									"mutability": "mutable",
									"name": "strikeNum",
									"nameLocation": "421:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "405:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cfb4fc71",
									"id": 1023,
									"mutability": "mutable",
									"name": "strikeDen",
									"nameLocation": "452:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "436:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f3c274a6",
									"id": 1025,
									"mutability": "mutable",
									"name": "isPut",
									"nameLocation": "479:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "467:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1024,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "467:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8dfeb45",
									"id": 1028,
									"mutability": "mutable",
									"name": "collateral",
									"nameLocation": "504:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "490:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1027,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1026,
											"name": "IERC20",
											"nameLocations": [
												"490:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "490:6:7"
										},
										"referencedDeclaration": 877,
										"src": "490:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6f713c9c",
									"id": 1031,
									"mutability": "mutable",
									"name": "consideration",
									"nameLocation": "534:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "520:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1030,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1029,
											"name": "IERC20",
											"nameLocations": [
												"520:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "520:6:7"
										},
										"referencedDeclaration": 877,
										"src": "520:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "43e14aa6",
									"id": 1033,
									"name": "ContractNotExpired",
									"nameLocation": "560:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:7"
									},
									"src": "554:27:7"
								},
								{
									"errorSelector": "0790d4e3",
									"id": 1035,
									"name": "ContractExpired",
									"nameLocation": "592:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:2:7"
									},
									"src": "586:24:7"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1037,
									"name": "InsufficientBalance",
									"nameLocation": "621:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:2:7"
									},
									"src": "615:28:7"
								},
								{
									"errorSelector": "9a5818d8",
									"id": 1039,
									"name": "InvalidStrike",
									"nameLocation": "654:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:2:7"
									},
									"src": "648:22:7"
								},
								{
									"errorSelector": "fb2a6752",
									"id": 1041,
									"name": "InvalidExpiration",
									"nameLocation": "681:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:2:7"
									},
									"src": "675:26:7"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1043,
									"name": "InvalidAmount",
									"nameLocation": "712:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:7"
									},
									"src": "706:22:7"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "753:117:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1045,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "767:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "773:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "767:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1047,
														"name": "expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "785:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "767:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "763:90:7",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "801:52:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1049,
																	"name": "ContractNotExpired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "822:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "822:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "815:27:7"
														}
													]
												}
											},
											{
												"id": 1054,
												"nodeType": "PlaceholderStatement",
												"src": "862:1:7"
											}
										]
									},
									"id": 1056,
									"name": "expired",
									"nameLocation": "743:7:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:7"
									},
									"src": "734:136:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "898:115:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1058,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "912:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "918:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "912:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1060,
														"name": "expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "931:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "912:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "IfStatement",
												"src": "908:88:7",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "947:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1062,
																	"name": "ContractExpired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "968:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "968:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1064,
															"nodeType": "RevertStatement",
															"src": "961:24:7"
														}
													]
												}
											},
											{
												"id": 1067,
												"nodeType": "PlaceholderStatement",
												"src": "1005:1:7"
											}
										]
									},
									"id": 1069,
									"name": "notExpired",
									"nameLocation": "885:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:7"
									},
									"src": "876:137:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "1056:66:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1073,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1070:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1079:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1070:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "1066:38:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1076,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "1089:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1089:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1078,
													"nodeType": "RevertStatement",
													"src": "1082:22:7"
												}
											},
											{
												"id": 1080,
												"nodeType": "PlaceholderStatement",
												"src": "1114:1:7"
											}
										]
									},
									"id": 1082,
									"name": "validAmount",
									"nameLocation": "1028:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1048:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1040:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:7"
									},
									"src": "1019:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "1195:120:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1089,
																"name": "contractHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "1219:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1088,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "1209:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1209:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1091,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "1237:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1209:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1097,
												"nodeType": "IfStatement",
												"src": "1205:93:7",
												"trueBody": {
													"id": 1096,
													"nodeType": "Block",
													"src": "1245:53:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1093,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "1266:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1266:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1095,
															"nodeType": "RevertStatement",
															"src": "1259:28:7"
														}
													]
												}
											},
											{
												"id": 1098,
												"nodeType": "PlaceholderStatement",
												"src": "1307:1:7"
											}
										]
									},
									"id": 1100,
									"name": "sufficientBalance",
									"nameLocation": "1137:17:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "contractHolder",
												"nameLocation": "1163:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1155:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1187:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1179:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:40:7"
									},
									"src": "1128:187:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "1648:531:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1129,
														"name": "_strikeDen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1663:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1677:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1663:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "1659:43:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1132,
															"name": "InvalidStrike",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1687:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1687:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1134,
													"nodeType": "RevertStatement",
													"src": "1680:22:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "_strikeNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1716:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1730:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "1712:43:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1139,
															"name": "InvalidStrike",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1740:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1740:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1141,
													"nodeType": "RevertStatement",
													"src": "1733:22:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1143,
														"name": "_expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "1769:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1144,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1787:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1793:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1787:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1769:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "1765:65:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1147,
															"name": "InvalidExpiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "1811:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1811:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1149,
													"nodeType": "RevertStatement",
													"src": "1804:26:7"
												}
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "1841:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1152,
														"name": "_expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "1858:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1841:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "1841:32:7"
											},
											{
												"expression": {
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1155,
														"name": "strikeNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "1883:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1156,
														"name": "_strikeNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1895:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "1883:22:7"
											},
											{
												"expression": {
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1159,
														"name": "strikeDen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "1915:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1160,
														"name": "_strikeDen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1927:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1915:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1915:22:7"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1163,
														"name": "collateralAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "1947:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "_collateralAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "1967:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1947:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1947:38:7"
											},
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1167,
														"name": "considerationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "1995:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1168,
														"name": "_considerationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2018:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1995:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "1995:44:7"
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "isPut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2049:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_isPut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "2057:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2049:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2049:14:7"
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "collateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2073:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1177,
																"name": "_collateralAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "2093:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1176,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2086:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2086:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "2073:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "2073:39:7"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1181,
														"name": "consideration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2122:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1183,
																"name": "_considerationAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2145:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1182,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2138:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2138:29:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "2122:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2122:45:7"
											}
										]
									},
									"id": 1188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1119,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1102,
													"src": "1596:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1120,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "1602:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1121,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1118,
												"name": "ERC20",
												"nameLocations": [
													"1590:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1590:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1590:19:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1123,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1618:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1622:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1618:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1125,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1122,
												"name": "Ownable",
												"nameLocations": [
													"1610:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1610:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1610:19:7"
										},
										{
											"arguments": [],
											"id": 1127,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1126,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"1630:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1002,
												"src": "1630:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1630:17:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1356:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1342:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1385:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1371:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1371:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_collateralAddress",
												"nameLocation": "1410:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1402:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "_considerationAddress",
												"nameLocation": "1447:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1439:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_expirationDate",
												"nameLocation": "1486:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1478:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_strikeNum",
												"nameLocation": "1520:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1512:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "_strikeDen",
												"nameLocation": "1548:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1540:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "_isPut",
												"nameLocation": "1573:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1568:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1568:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:257:7"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:0:7"
									},
									"scope": 1253,
									"src": "1321:858:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "2247:59:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1197,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2293:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OptionBase_$1253",
																		"typeString": "contract OptionBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OptionBase_$1253",
																		"typeString": "contract OptionBase"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2285:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2285:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2285:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1193,
															"name": "collateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "2264:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2275:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2264:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1200,
												"nodeType": "Return",
												"src": "2257:42:7"
											}
										]
									},
									"functionSelector": "1529a639",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralBalance",
									"nameLocation": "2194:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:7"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2238:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:9:7"
									},
									"scope": 1253,
									"src": "2185:121:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "2377:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1211,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2426:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OptionBase_$1253",
																		"typeString": "contract OptionBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OptionBase_$1253",
																		"typeString": "contract OptionBase"
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2418:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1209,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2418:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2418:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1207,
															"name": "consideration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "2394:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2408:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "2394:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1214,
												"nodeType": "Return",
												"src": "2387:45:7"
											}
										]
									},
									"functionSelector": "b5113d90",
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConsiderationBalance",
									"nameLocation": "2321:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2344:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2368:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:9:7"
									},
									"scope": 1253,
									"src": "2312:127:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "2493:57:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1221,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2510:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2516:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2510:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1223,
														"name": "expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2529:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2510:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1225,
												"nodeType": "Return",
												"src": "2503:40:7"
											}
										]
									},
									"functionSelector": "2f13b60c",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExpired",
									"nameLocation": "2454:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2463:2:7"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2487:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:6:7"
									},
									"scope": 1253,
									"src": "2445:105:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "2606:56:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1232,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2623:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2629:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2623:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1234,
														"name": "expirationDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2641:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2623:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1236,
												"nodeType": "Return",
												"src": "2616:39:7"
											}
										]
									},
									"functionSelector": "ac6068b5",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNotExpired",
									"nameLocation": "2564:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:2:7"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2600:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2600:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:6:7"
									},
									"scope": 1253,
									"src": "2555:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "2726:108:7",
										"statements": [
											{
												"condition": {
													"id": 1243,
													"name": "isPut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "2740:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "2790:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "43414c4c",
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2811:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c",
																	"typeString": "literal_string \"CALL\""
																},
																"value": "CALL"
															},
															"functionReturnParameters": 1242,
															"id": 1248,
															"nodeType": "Return",
															"src": "2804:13:7"
														}
													]
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "2736:92:7",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "2747:37:7",
													"statements": [
														{
															"expression": {
																"hexValue": "505554",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2768:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11",
																	"typeString": "literal_string \"PUT\""
																},
																"value": "PUT"
															},
															"functionReturnParameters": 1242,
															"id": 1245,
															"nodeType": "Return",
															"src": "2761:12:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ffd9eedb",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "optionType",
									"nameLocation": "2677:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2687:2:7"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2711:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2711:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:15:7"
									},
									"scope": 1253,
									"src": "2668:166:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1254,
							"src": "228:2611:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								947,
								1033,
								1035,
								1037,
								1039,
								1041,
								1043
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:2806:7"
				},
				"id": 7
			}
		}
	}
}